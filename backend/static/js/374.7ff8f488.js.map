{"version":3,"file":"js/374.7ff8f488.js","mappings":"uMACSA,MAAM,kB,GADfC,IAAA,G,GAGWD,MAAM,W,EAHjB,U,EAAA,U,EAAA,U,EAAA,U,GAwBWA,MAAM,W,GAxBjBC,IAAA,EA8ByBD,MAAM,mB,GA9B/BC,IAAA,EAkC0BD,MAAM,oB,GACnBA,MAAM,iB,GAINA,MAAM,iB,GAvCnBC,IAAA,EA6C0BD,MAAM,mB,GACjBA,MAAM,gB,GAsBLA,MAAM,a,kEAnElBE,EAAAA,EAAAA,IA+EM,MA/ENC,EA+EM,EA9EJC,EAAAA,EAAAA,IAA2H,YAFjIC,EAAAA,EAAAA,IAEU,sCAAkCC,EAAAA,EAAAA,IAAGC,EAAAC,OAAOD,EAAAE,MAAQ,GAAGC,MAAO,KAACJ,EAAAA,EAAAA,IAAGC,EAAAI,MAAO,IAAC,GAAYJ,EAAAK,MAAG,WAAfV,EAAAA,EAAAA,IAAwC,OAF5HW,EAEqG,UAAMP,EAAAA,EAAAA,IAAGC,EAAAK,KAAM,IAAC,KAFrHE,EAAAA,EAAAA,IAAA,UAGMV,EAAAA,EAAAA,IAmBM,MAnBNW,EAmBM,gBAlBJX,EAAAA,EAAAA,IAAmB,aAAZ,QAAI,cACXA,EAAAA,EAAAA,IAES,UAPjB,sBAAAY,EAAA,KAAAA,EAAA,GAAAC,GAKyBV,EAAAI,KAAIM,GAAGC,SAAMF,EAAA,KAAAA,EAAA,OAAAG,IAAEZ,EAAAa,oBAAAb,EAAAa,sBAAAD,K,gBAC9BjB,EAAAA,EAAAA,IAA+DmB,EAAAA,GAAA,MANzEC,EAAAA,EAAAA,IAM8Bf,EAAAgB,OAALC,K,WAAftB,EAAAA,EAAAA,IAA+D,UAAnCD,IAAKuB,EAAIC,MAAOD,I,QAAMA,GAAC,EAN7DE,M,mBAKyBnB,EAAAI,QAAI,eAGrBP,EAAAA,EAAAA,IAAmB,aAAZ,QAAI,cACXA,EAAAA,EAAAA,IAES,UAXjB,sBAAAY,EAAA,KAAAA,EAAA,GAAAC,GASyBV,EAAAE,MAAKQ,GAAGC,SAAMF,EAAA,KAAAA,EAAA,OAAAG,IAAEZ,EAAAa,oBAAAb,EAAAa,sBAAAD,K,gBAC/BjB,EAAAA,EAAAA,IAA6EmB,EAAAA,GAAA,MAVvFC,EAAAA,EAAAA,IAU8Bf,EAAAC,QAALmB,K,WAAfzB,EAAAA,EAAAA,IAA6E,UAAhDD,IAAK0B,EAAEC,IAAMH,MAAOE,EAAEC,M,QAAQD,EAAEjB,MAAI,EAV3EmB,M,mBASyBtB,EAAAE,SAAK,eAGtBL,EAAAA,EAAAA,IAAmB,aAAZ,QAAI,cACXA,EAAAA,EAAAA,IAGS,UAhBjB,sBAAAY,EAAA,KAAAA,EAAA,GAAAC,GAayBV,EAAAK,IAAGK,GAAGC,SAAMF,EAAA,KAAAA,EAAA,OAAAG,IAAEZ,EAAAuB,WAAAvB,EAAAuB,aAAAX,K,gBAC7Bf,EAAAA,EAAAA,IAA+B,UAAvBqB,MAAM,IAAG,SAAK,mBACtBvB,EAAAA,EAAAA,IAAqEmB,EAAAA,GAAA,MAf/EC,EAAAA,EAAAA,IAe8Bf,EAAAwB,aAALC,K,WAAf9B,EAAAA,EAAAA,IAAqE,UAAnCD,IAAK+B,EAAIP,MAAOO,I,QAAMA,GAAC,EAfnEC,M,mBAayB1B,EAAAK,OAAG,eAIpBR,EAAAA,EAAAA,IAAwB,aAAjB,aAAS,cAChBA,EAAAA,EAAAA,IAGS,UArBjB,sBAAAY,EAAA,KAAAA,EAAA,GAAAC,GAkByBV,EAAA2B,gBAAejB,GAAGC,SAAMF,EAAA,KAAAA,EAAA,OAAAG,IAAEZ,EAAAuB,WAAAvB,EAAAuB,aAAAX,K,gBACzCf,EAAAA,EAAAA,IAA+B,UAAvBqB,MAAM,IAAG,SAAK,mBACtBvB,EAAAA,EAAAA,IAA8HmB,EAAAA,GAAA,MApBxIC,EAAAA,EAAAA,IAoBoCf,EAAA4B,UAAXC,K,WAAflC,EAAAA,EAAAA,IAA8H,UAAzFD,IAAKmC,EAAQC,YAAcZ,MAAOW,EAAQC,c,QAAgBD,EAAQC,aAAW,EApB5HC,M,mBAkByB/B,EAAA2B,sBAMnB9B,EAAAA,EAAAA,IAIM,MAJNmC,EAIM,EAHJnC,EAAAA,EAAAA,IAAwD,UAA/CoC,QAAKxB,EAAA,KAAAA,EAAA,OAAAG,IAAEZ,EAAAkC,eAAAlC,EAAAkC,iBAAAtB,KAAe,qBAC/Bf,EAAAA,EAAAA,IAAkF,UAAzEoC,QAAKxB,EAAA,KAAAA,EAAA,GAAAC,GAAEV,EAAAmC,cAAc,iBAAgB,gCAC9CtC,EAAAA,EAAAA,IAAiG,UAAxFoC,QAAKxB,EAAA,MAAAA,EAAA,IAAAC,GAAEV,EAAAmC,cAAc,uBAAsB,0CAG3CnC,EAAAoC,SAAM,WAAjBzC,EAAAA,EAAAA,IAEM,MAFN0C,EAA2C,+EA9BjD9B,EAAAA,EAAAA,IAAA,OAkCkBP,EAAAoC,QAlClB7B,EAAAA,EAAAA,IAAA,SAkCwB,WAAlBZ,EAAAA,EAAAA,IASM,MATN2C,EASM,EARJzC,EAAAA,EAAAA,IAGM,MAHN0C,EAGM,EAFJ1C,EAAAA,EAAAA,IAAgH,UAA5G,oCAAgCE,EAAAA,EAAAA,IAAGC,EAAAwC,UAAUC,OAASzC,EAAA0C,kBAAkBD,OAAS,SAAW,SAAU,IAAC,IAC3GE,EAAAA,EAAAA,IAAwEC,EAAA,CAAnEC,GAAG,cAAeC,KAAM9C,EAAA+C,aAAeC,QAAShD,EAAAiD,iB,8BAEvDpD,EAAAA,EAAAA,IAGM,MAHNqD,EAGM,EAFJrD,EAAAA,EAAAA,IAA6G,UAAzG,iCAA6BE,EAAAA,EAAAA,IAAGC,EAAAwC,UAAUC,OAASzC,EAAA0C,kBAAkBD,OAAS,SAAW,SAAU,IAAC,IACxGE,EAAAA,EAAAA,IAAgGC,EAAA,CAA3FC,GAAG,oBAAqBC,KAAM9C,EAAAmD,sBAAwBH,QAAShD,EAAAoD,0B,gCAI5DpD,EAAAoC,QA7ClB7B,EAAAA,EAAAA,IAAA,SA6CwB,WAAlBZ,EAAAA,EAAAA,IAkCM,MAlCN0D,EAkCM,EAjCJxD,EAAAA,EAAAA,IAgCQ,QAhCRyD,EAgCQ,gBA/BNzD,EAAAA,EAAAA,IAUQ,eATNA,EAAAA,EAAAA,IAQK,YAPHA,EAAAA,EAAAA,IAAiB,UAAb,aACJA,EAAAA,EAAAA,IAAyB,UAArB,qBACJA,EAAAA,EAAAA,IAAe,UAAX,WACJA,EAAAA,EAAAA,IAAe,UAAX,WACJA,EAAAA,EAAAA,IAAmB,UAAf,eACJA,EAAAA,EAAAA,IAAiB,UAAb,aACJA,EAAAA,EAAAA,IAAmB,UAAf,kBAAU,KAGlBA,EAAAA,EAAAA,IAmBQ,6BAlBNF,EAAAA,EAAAA,IAQKmB,EAAAA,GAAA,MAnEjBC,EAAAA,EAAAA,IA2D8Bf,EAAA0C,mBAAPa,K,WAAX5D,EAAAA,EAAAA,IAQK,MARiCD,IAAK6D,EAAIzB,a,EAC7CjC,EAAAA,EAAAA,IAA8B,WAAAE,EAAAA,EAAAA,IAAvBwD,EAAIzB,aAAW,IACtBjC,EAAAA,EAAAA,IAA8C,WAAAE,EAAAA,EAAAA,IAAvCwD,EAAIC,iBAAiBC,QAAQ,IAAD,IACnC5D,EAAAA,EAAAA,IAAyC,WAAAE,EAAAA,EAAAA,IAAlCC,EAAA0D,eAAeH,EAAII,SAAM,IAChC9D,EAAAA,EAAAA,IAAyC,WAAAE,EAAAA,EAAAA,IAAlCC,EAAA0D,eAAeH,EAAIK,SAAM,IAChC/D,EAAAA,EAAAA,IAA6C,WAAAE,EAAAA,EAAAA,IAAtCC,EAAA0D,eAAeH,EAAIM,aAAU,IACpChE,EAAAA,EAAAA,IAA2C,WAAAE,EAAAA,EAAAA,IAApCC,EAAA0D,eAAeH,EAAIO,WAAQ,IAClCjE,EAAAA,EAAAA,IAAqC,WAAAE,EAAAA,EAAAA,IAA9BwD,EAAIQ,OAAON,QAAQ,IAAK,IAAC,Q,OAElC5D,EAAAA,EAAAA,IAQK,KARLmE,EAQK,gBAPHnE,EAAAA,EAAAA,IAA+B,YAA3BA,EAAAA,EAAAA,IAAsB,cAAd,WAAK,mBACjBA,EAAAA,EAAAA,IAAU,UAAN,KAAC,KACLA,EAAAA,EAAAA,IAA6D,YAAzDA,EAAAA,EAAAA,IAAoD,eAAAE,EAAAA,EAAAA,IAAzCC,EAAA0D,eAAe1D,EAAAiE,OAAON,SAAM,MAC3C9D,EAAAA,EAAAA,IAA6D,YAAzDA,EAAAA,EAAAA,IAAoD,eAAAE,EAAAA,EAAAA,IAAzCC,EAAA0D,eAAe1D,EAAAiE,OAAOL,SAAM,MAC3C/D,EAAAA,EAAAA,IAAiE,YAA7DA,EAAAA,EAAAA,IAAwD,eAAAE,EAAAA,EAAAA,IAA7CC,EAAA0D,eAAe1D,EAAAiE,OAAOJ,aAAU,MAC/ChE,EAAAA,EAAAA,IAA+D,YAA3DA,EAAAA,EAAAA,IAAsD,eAAAE,EAAAA,EAAAA,IAA3CC,EAAA0D,eAAe1D,EAAAiE,OAAOH,WAAQ,MAC7CjE,EAAAA,EAAAA,IAAyD,YAArDA,EAAAA,EAAAA,IAAgD,eAAAE,EAAAA,EAAAA,IAArCC,EAAAiE,OAAOF,OAAON,QAAQ,IAAK,IAAC,e,oIA6BvDS,EAAAA,GAAQC,SACNC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GAGF,OACEzE,KAAM,gBACN0E,WAAY,CAAEC,IAAGA,EAAAA,IACjBC,KAAAA,GACE,MAAMC,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MAET/E,GAAOgF,EAAAA,EAAAA,IAAI,MACXpE,GAAQoE,EAAAA,EAAAA,IAAI,IACZC,EAAc,IAAIC,KAClBC,EAAeF,EAAYG,WAAa,EACxCC,EAAcJ,EAAYK,cAC1BxF,GAAQkF,EAAAA,EAAAA,IAAIG,GACZlF,GAAM+E,EAAAA,EAAAA,IAAI,IACV5D,GAAc4D,EAAAA,EAAAA,IAAI,IAClBnF,GAASmF,EAAAA,EAAAA,IAAI,CACjB,CAAE/D,IAAK,EAAGlB,KAAM,SAAW,CAAEkB,IAAK,EAAGlB,KAAM,WAAa,CAAEkB,IAAK,EAAGlB,KAAM,SACxE,CAAEkB,IAAK,EAAGlB,KAAM,SAAW,CAAEkB,IAAK,EAAGlB,KAAM,QAAU,CAAEkB,IAAK,EAAGlB,KAAM,SACrE,CAAEkB,IAAK,EAAGlB,KAAM,SAAW,CAAEkB,IAAK,EAAGlB,KAAM,UAAY,CAAEkB,IAAK,EAAGlB,KAAM,cACvE,CAAEkB,IAAK,GAAIlB,KAAM,WAAa,CAAEkB,IAAK,GAAIlB,KAAM,aAAe,CAAEkB,IAAK,GAAIlB,KAAM,eAE3EwB,GAAkByD,EAAAA,EAAAA,IAAI,IACtBxD,GAAWwD,EAAAA,EAAAA,IAAI,IACf1C,GAAoB0C,EAAAA,EAAAA,IAAI,IAExBhD,GAASuD,EAAAA,EAAAA,KAAS,IAAyC,IAAnCjD,EAAkBxB,MAAMuB,SAEhDwB,GAAS0B,EAAAA,EAAAA,KAAS,KACtB,MAAMC,EAASlD,EAAkBxB,MAAM2E,QACrC,CAACC,EAAKvC,KACJuC,EAAInC,QAAUJ,EAAII,OAClBmC,EAAIlC,QAAUL,EAAIK,OAClBkC,EAAIjC,YAAcN,EAAIM,WACtBiC,EAAIhC,UAAYP,EAAIO,SACpBgC,EAAI/B,QAAUR,EAAIQ,OAASR,EAAII,OACxBmC,IAET,CAAEnC,OAAQ,EAAGC,OAAQ,EAAGC,WAAY,EAAGC,SAAU,EAAGC,OAAQ,IAK9D,OAHI6B,EAAOjC,OAAS,IAClBiC,EAAO7B,OAAU6B,EAAO7B,OAAS6B,EAAOjC,QAEnCiC,CAAM,IAGTpD,GAAYmD,EAAAA,EAAAA,KAAS,IACrBjD,EAAkBxB,MAAMuB,QAAU,GAC7BC,EAAkBxB,MAEpB,IAAIwB,EAAkBxB,OAC1B6E,MAAK,CAACC,EAAGC,IAAMA,EAAEtC,OAASqC,EAAErC,SAC5BuC,MAAM,EAAG,MAGRC,EAAoBA,KACxB,IAAK/F,EAAKc,QAAUhB,EAAMgB,MAAO,OACjC,MAAMkF,EAAiB,CACrB,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GACtC,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEvB,IAAhBlG,EAAMgB,OAAed,EAAKc,MAAQ,IAAM,GAAMd,EAAKc,MAAQ,MAAQ,GAAKd,EAAKc,MAAQ,MAAQ,IAC/FkF,EAAe,GAAK,IAEtB,MAAMC,EAAUD,EAAelG,EAAMgB,QAAU,GAC/CM,EAAYN,MAAQoF,MAAMC,KAAK,CAAE9D,OAAQ4D,IAAW,CAACG,EAAGC,IAAMA,EAAI,IAClEpG,EAAIa,MAAQ,EAAE,EAGVwF,EAAsBC,UAC1B,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,oBACjC9F,EAAME,MAAQ0F,EAAS9D,KAAK9B,OAAS,GACjCA,EAAME,MAAMuB,OAAS,IACvBrC,EAAKc,MAAQF,EAAME,MAAM6F,SAAStB,GAAeA,EAAczE,EAAME,MAAM,GAC3EiF,IACAa,IACAzF,IAEJ,CAAE,MAAO0F,GACPC,QAAQD,MAAM,kCAAmCA,GACjDjG,EAAME,MAAQoF,MAAMC,KAAK,CAAE9D,OAAQ,IAAK,CAAC+D,EAAGC,IAAMhB,EAAcgB,EAAI,IACpErG,EAAKc,MAAQuE,EACbU,IACIc,EAAML,UAAsC,MAA1BK,EAAML,SAASO,OACnCjC,EAAOkC,KAAK,WAEZJ,IACAzF,IAEJ,GAGIyF,EAAgBL,UACpB,IACE,MAAMU,EAAS,CAAEjH,KAAMA,EAAKc,MAAOhB,MAAOA,EAAMgB,OAC5Cb,EAAIa,QAAOmG,EAAOhH,IAAMA,EAAIa,OAChC,MAAM0F,QAAiBC,EAAAA,EAAMC,IAAI,8BAA+B,CAAEO,WAClEzF,EAASV,MAAQ0F,EAAS9D,KAAKlB,SAAS0F,KAAIC,IAAG,CAAQzF,YAAayF,OAAY,EAClF,CAAE,MAAON,GACPC,QAAQD,MAAM,2BAA4BA,GAC1CrF,EAASV,MAAQ,EACnB,GAGIK,EAAYoF,UAChB,GAAKvG,EAAKc,MACV,IACE,MAAMmG,EAAS,CAAEjH,KAAMA,EAAKc,MAAOhB,MAAOA,EAAMgB,OAC5Cb,EAAIa,QAAOmG,EAAOhH,IAAMA,EAAIa,OAC5BS,EAAgBT,QAAOmG,EAAOG,aAAe7F,EAAgBT,OACjE,MAAM0F,QAAiBC,EAAAA,EAAMC,IAAI,4BAA6B,CAAEO,WAChE3E,EAAkBxB,MAAQ0F,EAAS9D,KAAKA,MAAQ,GAChDoE,QAAQO,IAAI,mBAAoB/E,EAAkBxB,MACpD,CAAE,MAAO+F,GACPC,QAAQD,MAAM,sCAAuCA,GACrDvE,EAAkBxB,MAAQ,GACtB+F,EAAML,UAAsC,MAA1BK,EAAML,SAASO,QACnCjC,EAAOkC,KAAK,SAEhB,GAGIvG,EAAqBA,KACzBsF,IACAa,IACAzF,GAAW,EAGPmC,EAAkBxC,GACf,IAAIwG,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,MAAOC,sBAAuB,IAAKC,OAAO7G,GAG3G6B,GAAe4C,EAAAA,EAAAA,KAAS,KAAM,CAClCqC,OAAQxF,EAAUtB,MAAMoG,KAAI/D,GAAOA,EAAIzB,cACvCmG,SAAU,CACR,CACEC,MAAO,yBACPpF,KAAMN,EAAUtB,MAAMoG,KAAI/D,GAAOA,EAAIQ,SACrCoE,gBAAiB,2BACjBC,YAAa,yBACbC,YAAa,QAKbpF,GAAkB0C,EAAAA,EAAAA,KAAS,KAAM,CACrC2C,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACNvH,EAAG,CACDwH,aAAa,EACbC,MAAO,CAAEC,SAAS,EAAMC,KAAM,eAEhCC,EAAG,CAAEH,MAAO,CAAEC,SAAS,EAAMC,KAAM,cAErCE,QAAS,CACPC,OAAQ,CAAEJ,SAAS,GACnBK,QAAS,CACPC,UAAW,CACTf,MAAO,SAASgB,GACd,MAAM3F,EAAMf,EAAUtB,MAAMgI,EAAQC,WACpC,MAAO,CACL,GAAGD,EAAQE,QAAQlB,UAAUgB,EAAQG,OAAOpI,EAAEwC,QAAQ,MACtD,aAAaC,EAAeH,EAAIO,YAEpC,IAGJwF,WAAY,CACVX,SAAS,EACTY,OAAQ,SACRC,MAAO,SACPC,MAAO,OACPC,KAAM,CACJC,KAAM,GACNC,OAAQ,QAEVC,UAAW,SAAS3I,EAAOgI,GACzB,MAAM3F,EAAMf,EAAUtB,MAAMgI,EAAQC,WACpC,MAAO,GAAGjI,EAAMuC,QAAQ,QAAQC,EAAeH,EAAIO,WACrD,QAKAX,GAAwBwC,EAAAA,EAAAA,KAAS,KAAM,CAC3CqC,OAAQxF,EAAUtB,MAAMoG,KAAI/D,GAAOA,EAAIzB,cACvCmG,SAAU,CACR,CACE6B,KAAM,MACN5B,MAAO,SACPpF,KAAMN,EAAUtB,MAAMoG,KAAI/D,GAAOA,EAAII,SACrCwE,gBAAiB,0BACjBC,YAAa,wBACbC,YAAa,EACb0B,QAAS,IACTT,WAAY,CACVX,UAAWhH,EAAgBT,MAC3BqI,OAAQ,SACRC,MAAO,SACPC,MAAO,OACPC,KAAM,CAAEC,KAAM,GAAIC,OAAQ,QAC1BC,UAAW,SAAS3I,GAClB,OAAOwC,EAAexC,EACxB,IAGJ,CACE4I,KAAM,MACN5B,MAAO,uBACPpF,KAAMN,EAAUtB,MAAMoG,KAAI/D,GAAOA,EAAIM,aACrCsE,gBAAiB,0BACjBC,YAAa,wBACbC,YAAa,EACb0B,QAAS,IACTT,WAAY,CACVX,UAAWhH,EAAgBT,MAC3BqI,OAAQ,SACRC,MAAO,SACPC,MAAO,OACPC,KAAM,CAAEC,KAAM,GAAIC,OAAQ,QAC1BC,UAAW,SAAS3I,GAClB,OAAOwC,EAAexC,EACxB,IAGJ,CACE4I,KAAM,MACN5B,MAAO,uBACPpF,KAAMN,EAAUtB,MAAMoG,KAAI/D,GAAOA,EAAIK,SACrCuE,gBAAiB,0BACjBC,YAAa,wBACbC,YAAa,EACb0B,QAAS,IACTT,WAAY,CACVX,UAAWhH,EAAgBT,MAC3BqI,OAAQ,SACRC,MAAO,SACPC,MAAO,OACPC,KAAM,CAAEC,KAAM,GAAIC,OAAQ,QAC1BC,UAAW,SAAS3I,GAClB,OAAOwC,EAAexC,EACxB,IAGJ,CACE4I,KAAM,OACN5B,MAAO,iBACPpF,KAAMN,EAAUtB,MAAMoG,KAAI/D,GAAOA,EAAIO,WACrCsE,YAAa,wBACbD,gBAAiB,0BACjBE,YAAa,EACb2B,MAAM,EACNC,QAAS,GACTF,QAAS,KACTT,WAAY,CACVX,SAAS,EACTY,OAAQ,MACRC,MAAO,MACPC,MAAO,OACPC,KAAM,CAAEC,KAAM,GAAIC,OAAQ,QAC1BC,UAAW,SAAS3I,GAClB,OAAOwC,EAAexC,EACxB,SAMFkC,EAA2B,CAC/BkF,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACNK,EAAG,CAAEH,MAAO,CAAEC,SAAS,EAAMC,KAAM,aACnC3H,EAAG,CACDwH,aAAa,EACbC,MAAO,CAAEC,SAAS,EAAMC,KAAM,eAC9BsB,SAAU,QAEZC,GAAI,CACF1B,aAAa,EACbC,MAAO,CAAEC,SAAS,EAAMC,KAAM,kBAC9BsB,SAAU,QACVE,KAAM,CAAEC,iBAAiB,GACzBC,MAAO,CACLC,SAAU,SAASrJ,GACjB,OAAOwC,EAAexC,EACxB,KAIN4H,QAAS,CACPC,OAAQ,CAAEJ,SAAS,GACnBK,QAAS,CACPC,UAAW,CACTf,MAAO,SAASgB,GACd,OAAIA,EAAQE,QAAQU,KACX,GAAGZ,EAAQE,QAAQlB,UAAUxE,EAAewF,EAAQG,OAAOpI,IAGtE,MAMFiB,EAAgBA,KACpB,MAAMY,EAAOJ,EAAkBxB,MAAMoG,KAAI/D,IAAE,CACzCiH,SAAUjH,EAAIzB,YACd,mBAAoByB,EAAIC,iBACxBiH,OAAQlH,EAAII,OACZ+G,OAAQnH,EAAIK,OACZ+G,aAAYpH,EAAIM,WAChB+G,SAAUrH,EAAIO,SACd,aAAcP,EAAIQ,WAGpBjB,EAAKsE,KAAK,CACRoD,SAAU,QACV,mBAAoB,IACpBC,OAAQxG,EAAO/C,MAAMyC,OACrB+G,OAAQzG,EAAO/C,MAAM0C,OACrB+G,aAAY1G,EAAO/C,MAAM2C,WACzB+G,SAAU3G,EAAO/C,MAAM4C,SACvB,aAAcG,EAAO/C,MAAM6C,SAG7B,MAAM8G,EAAKC,EAAAA,GAAWC,cAAcjI,GAC9BkI,EAAKF,EAAAA,GAAWG,WACtBH,EAAAA,GAAWI,kBAAkBF,EAAIH,EAAI,yBACrCC,EAAAA,GAAeE,EAAI,yBAAyB5K,EAAKc,SAAShB,EAAMgB,QAAQb,EAAIa,MAAQ,OAAOb,EAAIa,QAAU,UAAU,EAG/GiB,EAAgBwE,UACpB,MAAMwE,EAASC,SAASC,eAAeC,GACjCC,EAAOH,SAASI,cAAc,KACpCD,EAAKE,WAAaC,IAAYP,GAAQQ,MAAKR,GAAUA,EAAOS,UAAU,eACtEL,EAAKM,SAAW,GAAGP,KAAWlL,EAAKc,SAAShB,EAAMgB,QAAQb,EAAIa,MAAQ,OAAOb,EAAIa,QAAU,SAC3FqK,EAAKO,OAAO,EAWd,OARAC,EAAAA,EAAAA,KAAU,KACJ/G,EAAMgH,MAAMC,KAAKC,MACnBxF,IAEAxB,EAAOkC,KAAK,SACd,IAGK,CACLhH,OACAY,QACAd,QACAD,SACAI,MACAmB,cACAG,kBACAC,WACAc,oBACAN,SACA6B,SACAzB,YACAjB,YACAV,qBACA6C,iBACAX,eACAE,kBACAE,wBACAC,2BACAlB,gBACAC,gBAEJ,G,UCjeJ,MAAMgK,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://frontend/./src/views/ProductProfit.vue","webpack://frontend/./src/views/ProductProfit.vue?616a"],"sourcesContent":["<template>\r\n    <div class=\"product-profit\">\r\n      <h1>Margen de Utilidad por Producto - {{ months[month - 1].name }} {{ year }} <span v-if=\"day\"> (Día {{ day }})</span></h1>\r\n      <div class=\"filters\">\r\n        <label>Año:</label>\r\n        <select v-model=\"year\" @change=\"updateDaysAndFetch\">\r\n          <option v-for=\"y in years\" :key=\"y\" :value=\"y\">{{ y }}</option>\r\n        </select>\r\n        <label>Mes:</label>\r\n        <select v-model=\"month\" @change=\"updateDaysAndFetch\">\r\n          <option v-for=\"m in months\" :key=\"m.num\" :value=\"m.num\">{{ m.name }}</option>\r\n        </select>\r\n        <label>Día:</label>\r\n        <select v-model=\"day\" @change=\"fetchData\">\r\n          <option value=\"\">Todos</option>\r\n          <option v-for=\"d in daysInMonth\" :key=\"d\" :value=\"d\">{{ d }}</option>\r\n        </select>\r\n        <label>Producto:</label>\r\n        <select v-model=\"selectedProduct\" @change=\"fetchData\">\r\n          <option value=\"\">Todos</option>\r\n          <option v-for=\"product in products\" :key=\"product.descripcion\" :value=\"product.descripcion\">{{ product.descripcion }}</option>\r\n        </select>\r\n      </div>\r\n  \r\n      <div class=\"actions\">\r\n        <button @click=\"exportToExcel\">Exportar a Excel</button>\r\n        <button @click=\"downloadChart('profitChart')\">Descargar Gráfico de Margen</button>\r\n        <button @click=\"downloadChart('salesVsCostsChart')\">Descargar Gráfico de Ventas y Costos</button>\r\n      </div>\r\n  \r\n      <div v-if=\"noData\" class=\"no-data-message\">\r\n        No hay datos disponibles para el mes, año, día y filtros seleccionados.\r\n      </div>\r\n  \r\n      <div v-if=\"!noData\" class=\"charts-container\">\r\n        <div class=\"chart-wrapper\">\r\n          <h2>Margen y Utilidad por Producto ({{ chartData.length < productProfitData.length ? 'Top 10' : 'Todos' }})</h2>\r\n          <Bar id=\"profitChart\" :data=\"barChartData\" :options=\"barChartOptions\" />\r\n        </div>\r\n        <div class=\"chart-wrapper\">\r\n          <h2>Ventas vs Costos y Utilidad ({{ chartData.length < productProfitData.length ? 'Top 10' : 'Todos' }})</h2>\r\n          <Bar id=\"salesVsCostsChart\" :data=\"salesVsCostsChartData\" :options=\"salesVsCostsChartOptions\" />\r\n        </div>\r\n      </div>\r\n  \r\n      <div v-if=\"!noData\" class=\"table-container\">\r\n        <table class=\"profit-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Producto</th>\r\n              <th>Cantidad Vendida</th>\r\n              <th>Ventas</th>\r\n              <th>Costos</th>\r\n              <th>Producción</th>\r\n              <th>Utilidad</th>\r\n              <th>Margen (%)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"row in productProfitData\" :key=\"row.descripcion\">\r\n              <td>{{ row.descripcion }}</td>\r\n              <td>{{ row.cantidad_vendida.toFixed(2) }}</td>\r\n              <td>{{ formatCurrency(row.ventas) }}</td>\r\n              <td>{{ formatCurrency(row.costos) }}</td>\r\n              <td>{{ formatCurrency(row.produccion) }}</td>\r\n              <td>{{ formatCurrency(row.utilidad) }}</td>\r\n              <td>{{ row.margen.toFixed(2) }}%</td>\r\n            </tr>\r\n            <tr class=\"total-row\">\r\n              <td><strong>Total</strong></td>\r\n              <td>-</td>\r\n              <td><strong>{{ formatCurrency(totals.ventas) }}</strong></td>\r\n              <td><strong>{{ formatCurrency(totals.costos) }}</strong></td>\r\n              <td><strong>{{ formatCurrency(totals.produccion) }}</strong></td>\r\n              <td><strong>{{ formatCurrency(totals.utilidad) }}</strong></td>\r\n              <td><strong>{{ totals.margen.toFixed(2) }}%</strong></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted, computed } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  import { useRouter } from 'vue-router';\r\n  import axios from '@/api/axios';\r\n  import { Bar } from 'vue-chartjs';\r\n  import {\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    LineElement,\r\n    PointElement\r\n  } from 'chart.js';\r\n  import ChartDataLabels from 'chartjs-plugin-datalabels';\r\n  import * as XLSX from 'xlsx';\r\n  import html2canvas from 'html2canvas';\r\n  \r\n  ChartJS.register(\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    LineElement,\r\n    PointElement,\r\n    ChartDataLabels\r\n  );\r\n  \r\n  export default {\r\n    name: 'ProductProfit',\r\n    components: { Bar },\r\n    setup() {\r\n      const store = useStore();\r\n      const router = useRouter();\r\n  \r\n      const year = ref(null);\r\n      const years = ref([]);\r\n      const currentDate = new Date();\r\n      const currentMonth = currentDate.getMonth() + 1;\r\n      const currentYear = currentDate.getFullYear();\r\n      const month = ref(currentMonth);\r\n      const day = ref('');\r\n      const daysInMonth = ref([]);\r\n      const months = ref([\r\n        { num: 1, name: 'Enero' }, { num: 2, name: 'Febrero' }, { num: 3, name: 'Marzo' },\r\n        { num: 4, name: 'Abril' }, { num: 5, name: 'Mayo' }, { num: 6, name: 'Junio' },\r\n        { num: 7, name: 'Julio' }, { num: 8, name: 'Agosto' }, { num: 9, name: 'Septiembre' },\r\n        { num: 10, name: 'Octubre' }, { num: 11, name: 'Noviembre' }, { num: 12, name: 'Diciembre' }\r\n      ]);\r\n      const selectedProduct = ref('');\r\n      const products = ref([]);\r\n      const productProfitData = ref([]);\r\n  \r\n      const noData = computed(() => productProfitData.value.length === 0);\r\n  \r\n      const totals = computed(() => {\r\n        const result = productProfitData.value.reduce(\r\n          (acc, row) => {\r\n            acc.ventas += row.ventas;\r\n            acc.costos += row.costos;\r\n            acc.produccion += row.produccion;\r\n            acc.utilidad += row.utilidad;\r\n            acc.margen += row.margen * row.ventas;\r\n            return acc;\r\n          },\r\n          { ventas: 0, costos: 0, produccion: 0, utilidad: 0, margen: 0 }\r\n        );\r\n        if (result.ventas > 0) {\r\n          result.margen = (result.margen / result.ventas);\r\n        }\r\n        return result;\r\n      });\r\n  \r\n      const chartData = computed(() => {\r\n        if (productProfitData.value.length <= 10) {\r\n          return productProfitData.value;\r\n        }\r\n        return [...productProfitData.value]\r\n          .sort((a, b) => b.ventas - a.ventas)\r\n          .slice(0, 10);\r\n      });\r\n  \r\n      const updateDaysInMonth = () => {\r\n        if (!year.value || !month.value) return;\r\n        const daysInMonthMap = {\r\n          1: 31, 2: 28, 3: 31, 4: 30, 5: 31, 6: 30,\r\n          7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31\r\n        };\r\n        if (month.value === 2 && year.value % 4 === 0 && (year.value % 100 !== 0 || year.value % 400 === 0)) {\r\n          daysInMonthMap[2] = 29;\r\n        }\r\n        const numDays = daysInMonthMap[month.value] || 30;\r\n        daysInMonth.value = Array.from({ length: numDays }, (_, i) => i + 1);\r\n        day.value = '';\r\n      };\r\n  \r\n      const fetchAvailableYears = async () => {\r\n        try {\r\n          const response = await axios.get('/available-years');\r\n          years.value = response.data.years || [];\r\n          if (years.value.length > 0) {\r\n            year.value = years.value.includes(currentYear) ? currentYear : years.value[0];\r\n            updateDaysInMonth();\r\n            fetchProducts();\r\n            fetchData();\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching available years:', error);\r\n          years.value = Array.from({ length: 5 }, (_, i) => currentYear + i - 2);\r\n          year.value = currentYear;\r\n          updateDaysInMonth();\r\n          if (error.response && error.response.status === 401) {\r\n            router.push('/login');\r\n          } else {\r\n            fetchProducts();\r\n            fetchData();\r\n          }\r\n        }\r\n      };\r\n  \r\n      const fetchProducts = async () => {\r\n        try {\r\n          const params = { year: year.value, month: month.value };\r\n          if (day.value) params.day = day.value;\r\n          const response = await axios.get('/dashboard/sales-by-product', { params });\r\n          products.value = response.data.products.map(desc => ({ descripcion: desc })) || [];\r\n        } catch (error) {\r\n          console.error('Error fetching products:', error);\r\n          products.value = [];\r\n        }\r\n      };\r\n  \r\n      const fetchData = async () => {\r\n        if (!year.value) return;\r\n        try {\r\n          const params = { year: year.value, month: month.value };\r\n          if (day.value) params.day = day.value;\r\n          if (selectedProduct.value) params.product_desc = selectedProduct.value;\r\n          const response = await axios.get('/dashboard/product-profit', { params });\r\n          productProfitData.value = response.data.data || [];\r\n          console.log('Datos recibidos:', productProfitData.value);\r\n        } catch (error) {\r\n          console.error('Error fetching product profit data:', error);\r\n          productProfitData.value = [];\r\n          if (error.response && error.response.status === 401) {\r\n            router.push('/login');\r\n          }\r\n        }\r\n      };\r\n  \r\n      const updateDaysAndFetch = () => {\r\n        updateDaysInMonth();\r\n        fetchProducts();\r\n        fetchData();\r\n      };\r\n  \r\n      const formatCurrency = (value) => {\r\n        return new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(value);\r\n      };\r\n  \r\n      const barChartData = computed(() => ({\r\n        labels: chartData.value.map(row => row.descripcion),\r\n        datasets: [\r\n          {\r\n            label: 'Margen de Utilidad (%)',\r\n            data: chartData.value.map(row => row.margen),\r\n            backgroundColor: 'rgba(153, 102, 255, 0.6)',\r\n            borderColor: 'rgba(153, 102, 255, 1)',\r\n            borderWidth: 1\r\n          }\r\n        ]\r\n      }));\r\n  \r\n      const barChartOptions = computed(() => ({\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            title: { display: true, text: 'Margen (%)' }\r\n          },\r\n          x: { title: { display: true, text: 'Producto' } }\r\n        },\r\n        plugins: {\r\n          legend: { display: true },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                const row = chartData.value[context.dataIndex];\r\n                return [\r\n                  `${context.dataset.label}: ${context.parsed.y.toFixed(2)}%`,\r\n                  `Utilidad: ${formatCurrency(row.utilidad)}`\r\n                ];\r\n              }\r\n            }\r\n          },\r\n          datalabels: {\r\n            display: true,\r\n            anchor: 'center',\r\n            align: 'center',\r\n            color: '#fff',\r\n            font: {\r\n              size: 13, // Ajusta este valor para cambiar el tamaño de los valores en las barras (por ejemplo, 14, 15, etc.)\r\n              weight: 'bold'\r\n            },\r\n            formatter: function(value, context) {\r\n              const row = chartData.value[context.dataIndex];\r\n              return `${value.toFixed(2)}%\\n${formatCurrency(row.utilidad)}`;\r\n            }\r\n          }\r\n        }\r\n      }));\r\n  \r\n      const salesVsCostsChartData = computed(() => ({\r\n        labels: chartData.value.map(row => row.descripcion),\r\n        datasets: [\r\n          {\r\n            type: 'bar',\r\n            label: 'Ventas',\r\n            data: chartData.value.map(row => row.ventas),\r\n            backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n            borderColor: 'rgba(54, 162, 235, 1)',\r\n            borderWidth: 1,\r\n            yAxisID: 'y',\r\n            datalabels: {\r\n              display: !!selectedProduct.value,\r\n              anchor: 'center',\r\n              align: 'center',\r\n              color: '#fff',\r\n              font: { size: 11, weight: 'bold' },\r\n              formatter: function(value) {\r\n                return formatCurrency(value);\r\n              }\r\n            }\r\n          },\r\n          {\r\n            type: 'bar',\r\n            label: 'Costos de Producción',\r\n            data: chartData.value.map(row => row.produccion),\r\n            backgroundColor: 'rgba(255, 99, 132, 0.6)',\r\n            borderColor: 'rgba(255, 99, 132, 1)',\r\n            borderWidth: 1,\r\n            yAxisID: 'y',\r\n            datalabels: {\r\n              display: !!selectedProduct.value,\r\n              anchor: 'center',\r\n              align: 'center',\r\n              color: '#fff',\r\n              font: { size: 11, weight: 'bold' },\r\n              formatter: function(value) {\r\n                return formatCurrency(value);\r\n              }\r\n            }\r\n          },\r\n          {\r\n            type: 'bar',\r\n            label: 'Costos de Inventario',\r\n            data: chartData.value.map(row => row.costos),\r\n            backgroundColor: 'rgba(255, 206, 86, 0.6)',\r\n            borderColor: 'rgba(255, 206, 86, 1)',\r\n            borderWidth: 1,\r\n            yAxisID: 'y',\r\n            datalabels: {\r\n              display: !!selectedProduct.value,\r\n              anchor: 'center',\r\n              align: 'center',\r\n              color: '#fff',\r\n              font: { size: 11, weight: 'bold' },\r\n              formatter: function(value) {\r\n                return formatCurrency(value);\r\n              }\r\n            }\r\n          },\r\n          {\r\n            type: 'line',\r\n            label: 'Utilidad (COP)',\r\n            data: chartData.value.map(row => row.utilidad),\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n            borderWidth: 2,\r\n            fill: false,\r\n            tension: 0.1,\r\n            yAxisID: 'y1',\r\n            datalabels: {\r\n              display: true,\r\n              anchor: 'end',\r\n              align: 'top',\r\n              color: '#000',\r\n              font: { size: 11, weight: 'bold' },\r\n              formatter: function(value) {\r\n                return formatCurrency(value);\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }));\r\n  \r\n      const salesVsCostsChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          x: { title: { display: true, text: 'Producto' } },\r\n          y: {\r\n            beginAtZero: true,\r\n            title: { display: true, text: 'Valor (COP)' },\r\n            position: 'left'\r\n          },\r\n          y1: {\r\n            beginAtZero: true,\r\n            title: { display: true, text: 'Utilidad (COP)' },\r\n            position: 'right',\r\n            grid: { drawOnChartArea: false },\r\n            ticks: {\r\n              callback: function(value) {\r\n                return formatCurrency(value);\r\n              }\r\n            }\r\n          }\r\n        },\r\n        plugins: {\r\n          legend: { display: true },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                if (context.dataset.type === 'line') {\r\n                  return `${context.dataset.label}: ${formatCurrency(context.parsed.y)}`;\r\n                }\r\n                return `${context.dataset.label}: ${formatCurrency(context.parsed.y)}`;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      };\r\n  \r\n      const exportToExcel = () => {\r\n        const data = productProfitData.value.map(row => ({\r\n          Producto: row.descripcion,\r\n          'Cantidad Vendida': row.cantidad_vendida,\r\n          Ventas: row.ventas,\r\n          Costos: row.costos,\r\n          Producción: row.produccion,\r\n          Utilidad: row.utilidad,\r\n          'Margen (%)': row.margen\r\n        }));\r\n  \r\n        data.push({\r\n          Producto: 'Total',\r\n          'Cantidad Vendida': '-',\r\n          Ventas: totals.value.ventas,\r\n          Costos: totals.value.costos,\r\n          Producción: totals.value.produccion,\r\n          Utilidad: totals.value.utilidad,\r\n          'Margen (%)': totals.value.margen\r\n        });\r\n  \r\n        const ws = XLSX.utils.json_to_sheet(data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Utilidad por Producto');\r\n        XLSX.writeFile(wb, `Utilidad_por_Producto_${year.value}_${month.value}${day.value ? `_Dia${day.value}` : ''}.xlsx`);\r\n      };\r\n  \r\n      const downloadChart = async (chartId) => {\r\n        const canvas = document.getElementById(chartId);\r\n        const link = document.createElement('a');\r\n        link.href = await html2canvas(canvas).then(canvas => canvas.toDataURL('image/png'));\r\n        link.download = `${chartId}_${year.value}_${month.value}${day.value ? `_Dia${day.value}` : ''}.png`;\r\n        link.click();\r\n      };\r\n  \r\n      onMounted(() => {\r\n        if (store.state.auth.token) {\r\n          fetchAvailableYears();\r\n        } else {\r\n          router.push('/login');\r\n        }\r\n      });\r\n  \r\n      return {\r\n        year,\r\n        years,\r\n        month,\r\n        months,\r\n        day,\r\n        daysInMonth,\r\n        selectedProduct,\r\n        products,\r\n        productProfitData,\r\n        noData,\r\n        totals,\r\n        chartData,\r\n        fetchData,\r\n        updateDaysAndFetch,\r\n        formatCurrency,\r\n        barChartData,\r\n        barChartOptions,\r\n        salesVsCostsChartData,\r\n        salesVsCostsChartOptions,\r\n        exportToExcel,\r\n        downloadChart\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .product-profit {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .filters {\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    gap: 15px;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .actions {\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .actions button {\r\n    padding: 8px 16px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .actions button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  label {\r\n    margin-right: 10px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  select {\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    border: 1px solid #ddd;\r\n  }\r\n  \r\n  .table-container {\r\n    max-width: 100%;\r\n    overflow-x: auto;\r\n    margin-top: 40px;\r\n  }\r\n  \r\n  .profit-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .profit-table th,\r\n  .profit-table td {\r\n    border: 1px solid #ddd;\r\n    padding: 4px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .profit-table th {\r\n    background-color: #f2f2f2;\r\n    font-size: 11px;\r\n  }\r\n  \r\n  .profit-table td {\r\n    max-width: 150px;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  .total-row {\r\n    font-weight: bold;\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  .no-data-message {\r\n    text-align: center;\r\n    color: #888;\r\n    margin: 20px 0;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .charts-container {\r\n    margin-bottom: 40px;\r\n  }\r\n  \r\n  .chart-wrapper {\r\n    margin-bottom: 60px;\r\n    height: 400px;\r\n  }\r\n  \r\n  .chart-wrapper h2 {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  </style>","import { render } from \"./ProductProfit.vue?vue&type=template&id=e057a31c&scoped=true\"\nimport script from \"./ProductProfit.vue?vue&type=script&lang=js\"\nexport * from \"./ProductProfit.vue?vue&type=script&lang=js\"\n\nimport \"./ProductProfit.vue?vue&type=style&index=0&id=e057a31c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e057a31c\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createTextVNode","_toDisplayString","$setup","months","month","name","year","day","_hoisted_2","_createCommentVNode","_hoisted_3","_cache","$event","onChange","args","updateDaysAndFetch","_Fragment","_renderList","years","y","value","_hoisted_4","m","num","_hoisted_5","fetchData","daysInMonth","d","_hoisted_6","selectedProduct","products","product","descripcion","_hoisted_7","_hoisted_8","onClick","exportToExcel","downloadChart","noData","_hoisted_9","_hoisted_10","_hoisted_11","chartData","length","productProfitData","_createVNode","_component_Bar","id","data","barChartData","options","barChartOptions","_hoisted_12","salesVsCostsChartData","salesVsCostsChartOptions","_hoisted_13","_hoisted_14","row","cantidad_vendida","toFixed","formatCurrency","ventas","costos","produccion","utilidad","margen","_hoisted_15","totals","ChartJS","register","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","LineElement","PointElement","ChartDataLabels","components","Bar","setup","store","useStore","router","useRouter","ref","currentDate","Date","currentMonth","getMonth","currentYear","getFullYear","computed","result","reduce","acc","sort","a","b","slice","updateDaysInMonth","daysInMonthMap","numDays","Array","from","_","i","fetchAvailableYears","async","response","axios","get","includes","fetchProducts","error","console","status","push","params","map","desc","product_desc","log","Intl","NumberFormat","style","currency","minimumFractionDigits","format","labels","datasets","label","backgroundColor","borderColor","borderWidth","responsive","maintainAspectRatio","scales","beginAtZero","title","display","text","x","plugins","legend","tooltip","callbacks","context","dataIndex","dataset","parsed","datalabels","anchor","align","color","font","size","weight","formatter","type","yAxisID","fill","tension","position","y1","grid","drawOnChartArea","ticks","callback","Producto","Ventas","Costos","Producción","Utilidad","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","canvas","document","getElementById","chartId","link","createElement","href","html2canvas","then","toDataURL","download","click","onMounted","state","auth","token","__exports__","render"],"sourceRoot":""}