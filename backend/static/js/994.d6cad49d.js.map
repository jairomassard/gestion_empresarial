{"version":3,"file":"js/994.d6cad49d.js","mappings":"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","sources":["webpack://frontend/./node_modules/core-js/modules/es.iterator.flat-map.js","webpack://frontend/./src/views/DailyProfit.vue","webpack://frontend/./src/views/DailyProfit.vue?a47f","webpack://frontend/./node_modules/core-js/internals/get-iterator-flattenable.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar getIteratorFlattenable = require('../internals/get-iterator-flattenable');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar iteratorClose = require('../internals/iterator-close');\nvar IS_PURE = require('../internals/is-pure');\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var mapper = this.mapper;\n  var result, inner;\n\n  while (true) {\n    if (inner = this.inner) try {\n      result = anObject(call(inner.next, inner.iterator));\n      if (!result.done) return result.value;\n      this.inner = null;\n    } catch (error) { iteratorClose(iterator, 'throw', error); }\n\n    result = anObject(call(this.next, iterator));\n\n    if (this.done = !!result.done) return;\n\n    try {\n      this.inner = getIteratorFlattenable(mapper(result.value, this.counter++), false);\n    } catch (error) { iteratorClose(iterator, 'throw', error); }\n  }\n});\n\n// `Iterator.prototype.flatMap` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.flatmap\n$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE }, {\n  flatMap: function flatMap(mapper) {\n    anObject(this);\n    aCallable(mapper);\n    return new IteratorProxy(getIteratorDirect(this), {\n      mapper: mapper,\n      inner: null\n    });\n  }\n});\n","<template>\r\n    <div class=\"daily-profit\">\r\n      <h1>Utilidad Diaria por PDV - {{ months[month - 1].name }} {{ year }}</h1>\r\n      <div class=\"filters\">\r\n        <label>Año:</label>\r\n        <select v-model=\"year\" @change=\"updateDaysAndFetch\">\r\n          <option v-for=\"y in years\" :key=\"y\" :value=\"y\">{{ y }}</option>\r\n        </select>\r\n        <label>Mes:</label>\r\n        <select v-model=\"month\" @change=\"updateDaysAndFetch\">\r\n          <option v-for=\"m in months\" :key=\"m.num\" :value=\"m.num\">{{ m.name }}</option>\r\n        </select>\r\n        <label>Estatus PDV:</label>\r\n        <select v-model=\"status\" @change=\"fetchData\">\r\n          <option value=\"Todos\">Todos</option>\r\n          <option value=\"Activo\">Activo</option>\r\n          <option value=\"Inactivo\">Inactivo</option>\r\n        </select>\r\n        <label>PDV:</label>\r\n        <select v-model=\"selectedPDV\" @change=\"fetchData\">\r\n          <option value=\"Todos\">Todos</option>\r\n          <option v-for=\"pdv in pdvs\" :key=\"pdv\" :value=\"pdv\">{{ pdv }}</option>\r\n        </select>\r\n        <label>Día:</label>\r\n        <select v-model=\"selectedDay\" @change=\"fetchData\">\r\n          <option value=\"Todos\">Todos</option>\r\n          <option v-for=\"day in daysInMonth\" :key=\"day\" :value=\"day\">{{ day }}</option>\r\n        </select>\r\n      </div>\r\n  \r\n      <div class=\"actions\">\r\n        <button @click=\"exportToExcel\">Exportar a Excel</button>\r\n        <button @click=\"downloadChart('barChart')\">Descargar Gráfico de Utilidad por PDV</button>\r\n        <button @click=\"downloadChart('lineChart')\">Descargar Gráfico de Tendencia</button>\r\n      </div>\r\n  \r\n      <div v-if=\"noData\" class=\"no-data-message\">\r\n        No hay datos disponibles para el mes, año, día y filtros seleccionados.\r\n      </div>\r\n  \r\n      <div v-if=\"!noData\" class=\"charts-container\">\r\n        <div class=\"chart-wrapper\">\r\n          <h2>Utilidad Total por PDV</h2>\r\n          <Bar id=\"barChart\" :data=\"barChartData\" :options=\"barChartOptions\" />\r\n        </div>\r\n  \r\n        <div class=\"chart-wrapper\">\r\n          <h2>Tendencia de Utilidad Diaria</h2>\r\n          <div class=\"pdv-selector\">\r\n            <label>Seleccionar PDV:</label>\r\n            <select v-model=\"selectedPdv\">\r\n              <option value=\"total\">Total (Todos los PDVs)</option>\r\n              <option v-for=\"pdv in filteredPdvs\" :key=\"pdv\" :value=\"pdv\">{{ pdv }}</option>\r\n            </select>\r\n          </div>\r\n          <Line id=\"lineChart\" :data=\"lineChartData\" :options=\"lineChartOptions\" />\r\n        </div>\r\n      </div>\r\n  \r\n      <div v-if=\"!noData\" class=\"table-container\">\r\n        <table class=\"profit-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Fecha</th>\r\n              <th v-for=\"pdv in filteredPdvs\" :key=\"pdv\" colspan=\"4\">{{ pdv }}</th>\r\n              <th colspan=\"4\">Total</th>\r\n            </tr>\r\n            <tr>\r\n              <th></th>\r\n              <th v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-ventas'\">Ventas</th>\r\n              <th v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-costos'\">Costos</th>\r\n              <th v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-produccion'\">Producción</th>\r\n              <th v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-utilidad'\">Utilidad</th>\r\n              <th>Ventas</th>\r\n              <th>Costos</th>\r\n              <th>Producción</th>\r\n              <th>Utilidad</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"row in filteredDailyProfitData\" :key=\"row.date\">\r\n              <td>{{ row.date }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-ventas'\">{{ formatCurrency(row[pdv].ventas) }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-costos'\">{{ formatCurrency(row[pdv].costos) }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-produccion'\">{{ formatCurrency(row[pdv].produccion) }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-utilidad'\">{{ formatCurrency(row[pdv].utilidad) }}</td>\r\n              <td>{{ formatCurrency(row.total.ventas) }}</td>\r\n              <td>{{ formatCurrency(row.total.costos) }}</td>\r\n              <td>{{ formatCurrency(row.total.produccion) }}</td>\r\n              <td>{{ formatCurrency(row.total.utilidad) }}</td>\r\n            </tr>\r\n            <tr class=\"total-row\" v-if=\"filteredDailyProfitData.length > 0\">\r\n              <td>{{ filteredTotals.date }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-ventas'\">{{ formatCurrency(filteredTotals[pdv].ventas) }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-costos'\">{{ formatCurrency(filteredTotals[pdv].costos) }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-produccion'\">{{ formatCurrency(filteredTotals[pdv].produccion) }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-utilidad'\">{{ formatCurrency(filteredTotals[pdv].utilidad) }}</td>\r\n              <td>{{ formatCurrency(filteredTotals.total.ventas) }}</td>\r\n              <td>{{ formatCurrency(filteredTotals.total.costos) }}</td>\r\n              <td>{{ formatCurrency(filteredTotals.total.produccion) }}</td>\r\n              <td>{{ formatCurrency(filteredTotals.total.utilidad) }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted, computed, watch } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  import { useRouter } from 'vue-router';\r\n  import axios from '@/api/axios';\r\n  import { Bar, Line } from 'vue-chartjs';\r\n  import {\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    LineElement,\r\n    PointElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    TimeScale\r\n  } from 'chart.js';\r\n  import ChartDataLabels from 'chartjs-plugin-datalabels';\r\n  import * as XLSX from 'xlsx';\r\n  import html2canvas from 'html2canvas';\r\n  import 'chartjs-adapter-date-fns';\r\n  \r\n  ChartJS.register(\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    LineElement,\r\n    PointElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    TimeScale,\r\n    ChartDataLabels\r\n  );\r\n  \r\n  export default {\r\n    name: 'DailyProfit',\r\n    components: { Bar, Line },\r\n    setup() {\r\n      const store = useStore();\r\n      const router = useRouter();\r\n  \r\n      // Datos reactivos\r\n      const year = ref(null);\r\n      const years = ref([]);\r\n      const currentDate = new Date();\r\n      const currentMonth = currentDate.getMonth() + 1;\r\n      const currentYear = currentDate.getFullYear();\r\n      const month = ref(currentMonth);\r\n      const status = ref('Activo');\r\n      const selectedPDV = ref('Todos');\r\n      const selectedDay = ref('Todos');\r\n      const daysInMonth = ref([]);\r\n      const dailyProfitData = ref([]);\r\n      const filteredDailyProfitData = ref([]);\r\n      const pdvs = ref([]);\r\n      const filteredPdvs = ref([]);\r\n      const totals = ref({});\r\n      const filteredTotals = ref({});\r\n      const selectedPdv = ref('total');\r\n  \r\n      const months = ref([\r\n        { num: 1, name: 'Enero' }, { num: 2, name: 'Febrero' }, { num: 3, name: 'Marzo' },\r\n        { num: 4, name: 'Abril' }, { num: 5, name: 'Mayo' }, { num: 6, name: 'Junio' },\r\n        { num: 7, name: 'Julio' }, { num: 8, name: 'Agosto' }, { num: 9, name: 'Septiembre' },\r\n        { num: 10, name: 'Octubre' }, { num: 11, name: 'Noviembre' }, { num: 12, name: 'Diciembre' }\r\n      ]);\r\n  \r\n      // Computed para determinar si no hay datos\r\n      const noData = computed(() => {\r\n        return filteredDailyProfitData.value.length === 0 ||\r\n               filteredDailyProfitData.value.every(row => row.total.utilidad === 0);\r\n      });\r\n  \r\n      // Generar lista de días del mes\r\n      const updateDaysInMonth = () => {\r\n        if (!year.value || !month.value) return;\r\n        const daysInMonthMap = {\r\n          1: 31, 2: 28, 3: 31, 4: 30, 5: 31, 6: 30,\r\n          7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31\r\n        };\r\n        if (month.value === 2 && year.value % 4 === 0 && (year.value % 100 !== 0 || year.value % 400 === 0)) {\r\n          daysInMonthMap[2] = 29;\r\n        }\r\n        const numDays = daysInMonthMap[month.value] || 30;\r\n        daysInMonth.value = Array.from({ length: numDays }, (_, i) => i + 1);\r\n        selectedDay.value = 'Todos';\r\n      };\r\n  \r\n      // Obtener años disponibles\r\n      const fetchAvailableYears = async () => {\r\n        try {\r\n          const response = await axios.get('/available-years');\r\n          years.value = response.data.years || [];\r\n          if (years.value.length > 0) {\r\n            year.value = years.value.includes(currentYear) ? currentYear : years.value[0];\r\n            updateDaysInMonth();\r\n            fetchPdvs();\r\n            fetchData();\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching available years:', error);\r\n          years.value = Array.from({ length: 5 }, (_, i) => currentYear + i - 2);\r\n          year.value = currentYear;\r\n          updateDaysInMonth();\r\n          if (error.response && error.response.status === 401) {\r\n            router.push('/login');\r\n          } else {\r\n            fetchPdvs();\r\n            fetchData();\r\n          }\r\n        }\r\n      };\r\n  \r\n      // Obtener lista de PDVs\r\n      const fetchPdvs = async () => {\r\n        try {\r\n          const params = { year: year.value, month: month.value, status: status.value };\r\n          if (selectedDay.value !== 'Todos') params.day = selectedDay.value;\r\n          const response = await axios.get('/dashboard/product-profit', { params });\r\n          const data = response.data.data || [];\r\n          const pdvSet = new Set();\r\n          data.forEach(row => {\r\n            Object.keys(row.almacenes || {}).forEach(pdv => pdvSet.add(pdv));\r\n          });\r\n          pdvs.value = Array.from(pdvSet).sort();\r\n        } catch (error) {\r\n          console.error('Error fetching PDVs:', error);\r\n          pdvs.value = [];\r\n        }\r\n      };\r\n  \r\n      // Obtener datos de utilidad\r\n      const fetchData = async () => {\r\n        if (!year.value) return;\r\n        try {\r\n          const params = { year: year.value, month: month.value, status: status.value };\r\n          if (selectedPDV.value !== 'Todos') params.pdv = selectedPDV.value;\r\n          if (selectedDay.value !== 'Todos') params.day = selectedDay.value;\r\n          const response = await axios.get('/dashboard/product-profit', { params });\r\n          const rawData = response.data.data || [];\r\n  \r\n          // Agrupar datos por día y PDV\r\n          const dataByDay = {};\r\n          const daysInMonthMap = {\r\n            1: 31, 2: 28, 3: 31, 4: 30, 5: 31, 6: 30,\r\n            7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31\r\n          };\r\n          if (month.value === 2 && year.value % 4 === 0 && (year.value % 100 !== 0 || year.value % 400 === 0)) {\r\n            daysInMonthMap[2] = 29;\r\n          }\r\n          const numDays = daysInMonthMap[month.value] || 30;\r\n  \r\n          // Inicializar datos para cada día\r\n          for (let day = 1; day <= numDays; day++) {\r\n            const date = new Date(year.value, month.value - 1, day);\r\n            const dayName = date.toLocaleDateString('es-ES', { weekday: 'long' });\r\n            const formattedDate = `${dayName}, ${day.toString().padStart(2, '0')}/${month.value.toString().padStart(2, '0')}/${year.value}`;\r\n            dataByDay[day] = {\r\n              date: formattedDate,\r\n              pdvs: {},\r\n              total: { ventas: 0, costos: 0, produccion: 0, utilidad: 0 }\r\n            };\r\n            pdvs.value.forEach(pdv => {\r\n              dataByDay[day].pdvs[pdv] = { ventas: 0, costos: 0, produccion: 0, utilidad: 0 };\r\n            });\r\n          }\r\n  \r\n          // Procesar datos del endpoint\r\n          rawData.forEach(row => {\r\n            const almacenes = row.almacenes || {};\r\n            Object.entries(almacenes).forEach(([pdv, pdvData]) => {\r\n              // Asumir que los datos son del día especificado o distribuir uniformemente\r\n              const dayKey = selectedDay.value !== 'Todos' ? parseInt(selectedDay.value) : 1;\r\n              if (dataByDay[dayKey]) {\r\n                dataByDay[dayKey].pdvs[pdv] = dataByDay[dayKey].pdvs[pdv] || {\r\n                  ventas: 0, costos: 0, produccion: 0, utilidad: 0\r\n                };\r\n                dataByDay[dayKey].pdvs[pdv].ventas += pdvData.venta || 0;\r\n                dataByDay[dayKey].pdvs[pdv].costos += (row.costos * (pdvData.cantidad_vendida / row.cantidad_vendida)) || 0;\r\n                dataByDay[dayKey].pdvs[pdv].produccion += (row.produccion * (pdvData.cantidad_vendida / row.cantidad_vendida)) || 0;\r\n                dataByDay[dayKey].pdvs[pdv].utilidad += (row.utilidad * (pdvData.cantidad_vendida / row.cantidad_vendida)) || 0;\r\n              }\r\n            });\r\n          });\r\n  \r\n          // Calcular totales por día\r\n          Object.values(dataByDay).forEach(dayData => {\r\n            Object.entries(dayData.pdvs).forEach(([pdv, metrics]) => {\r\n              dayData.total.ventas += metrics.ventas;\r\n              dayData.total.costos += metrics.costos;\r\n              dayData.total.produccion += metrics.produccion;\r\n              dayData.total.utilidad += metrics.utilidad;\r\n            });\r\n          });\r\n  \r\n          dailyProfitData.value = Object.values(dataByDay).filter(dayData => dayData.total.utilidad > 0 || selectedDay.value !== 'Todos');\r\n          updateFilteredData();\r\n        } catch (error) {\r\n          console.error('Error fetching daily profit data:', error);\r\n          dailyProfitData.value = [];\r\n          filteredDailyProfitData.value = [];\r\n          filteredPdvs.value = [];\r\n          filteredTotals.value = {};\r\n          if (error.response && error.response.status === 401) {\r\n            router.push('/login');\r\n          }\r\n        }\r\n      };\r\n  \r\n      // Actualizar datos filtrados\r\n      const updateFilteredData = () => {\r\n        // Filtrar PDVs\r\n        if (selectedPDV.value === 'Todos') {\r\n          filteredPdvs.value = pdvs.value;\r\n        } else {\r\n          filteredPdvs.value = pdvs.value.filter(pdv => pdv === selectedPDV.value);\r\n        }\r\n  \r\n        // Filtrar días\r\n        if (selectedDay.value === 'Todos') {\r\n          filteredDailyProfitData.value = dailyProfitData.value;\r\n        } else {\r\n          const dayStr = selectedDay.value.toString().padStart(2, '0');\r\n          const monthStr = month.value.toString().padStart(2, '0');\r\n          const datePattern = `${dayStr}/${monthStr}/${year.value}`;\r\n          filteredDailyProfitData.value = dailyProfitData.value.filter(row => row.date.includes(datePattern));\r\n        }\r\n  \r\n        // Calcular totales\r\n        filteredTotals.value = { date: 'TOTALES' };\r\n        filteredPdvs.value.forEach(pdv => {\r\n          filteredTotals.value[pdv] = {\r\n            ventas: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.pdvs[pdv]?.ventas || 0), 0),\r\n            costos: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.pdvs[pdv]?.costos || 0), 0),\r\n            produccion: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.pdvs[pdv]?.produccion || 0), 0),\r\n            utilidad: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.pdvs[pdv]?.utilidad || 0), 0)\r\n          };\r\n        });\r\n        filteredTotals.value.total = {\r\n          ventas: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.total?.ventas || 0), 0),\r\n          costos: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.total?.costos || 0), 0),\r\n          produccion: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.total?.produccion || 0), 0),\r\n          utilidad: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.total?.utilidad || 0), 0)\r\n        };\r\n      };\r\n  \r\n      // Actualizar días y obtener datos\r\n      const updateDaysAndFetch = () => {\r\n        updateDaysInMonth();\r\n        fetchPdvs();\r\n        fetchData();\r\n      };\r\n  \r\n      // Formatear moneda\r\n      const formatCurrency = (value) => {\r\n        return new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(value);\r\n      };\r\n  \r\n      // Gráfico de barras: Utilidad Total por PDV\r\n      const barChartData = computed(() => ({\r\n        labels: filteredPdvs.value,\r\n        datasets: [\r\n          {\r\n            label: 'Utilidad Total (COP)',\r\n            data: filteredPdvs.value.map(pdv => filteredTotals.value[pdv]?.utilidad || 0),\r\n            backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n            borderColor: 'rgba(54, 162, 235, 1)',\r\n            borderWidth: 1\r\n          }\r\n        ]\r\n      }));\r\n  \r\n      const barChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            title: { display: true, text: 'Utilidad (COP)' },\r\n            ticks: {\r\n              callback: function(value) {\r\n                return formatCurrency(value);\r\n              }\r\n            }\r\n          },\r\n          x: {\r\n            title: { display: true, text: 'Punto de Venta' }\r\n          }\r\n        },\r\n        plugins: {\r\n          legend: { display: true },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                return `${context.dataset.label}: ${formatCurrency(context.parsed.y)}`;\r\n              }\r\n            }\r\n          },\r\n          datalabels: {\r\n            display: true,\r\n            anchor: 'center',\r\n            align: 'center',\r\n            color: '#fff',\r\n            font: { size: 13, weight: 'bold' },\r\n            formatter: function(value) {\r\n              return formatCurrency(value);\r\n            }\r\n          }\r\n        }\r\n      };\r\n  \r\n      // Gráfico de líneas: Tendencia de Utilidad Diaria\r\n      const lineChartData = computed(() => {\r\n        const labels = filteredDailyProfitData.value.map(row => {\r\n          const dateStr = row.date.split(', ')[1];\r\n          const [day, month, year] = dateStr.split('/');\r\n          return `${year}-${month}-${day}`;\r\n        });\r\n  \r\n        let data;\r\n        if (selectedPdv.value === 'total') {\r\n          data = filteredDailyProfitData.value.map(row => row.total.utilidad);\r\n        } else {\r\n          data = filteredDailyProfitData.value.map(row => row.pdvs[selectedPdv.value]?.utilidad || 0);\r\n        }\r\n  \r\n        return {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: selectedPdv.value === 'total' ? 'Utilidad Total (COP)' : `Utilidad de ${selectedPdv.value} (COP)`,\r\n              data: data,\r\n              fill: false,\r\n              borderColor: 'rgba(75, 192, 192, 1)',\r\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n              tension: 0.1\r\n            }\r\n          ]\r\n        };\r\n      });\r\n  \r\n      const lineChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          x: {\r\n            type: 'time',\r\n            time: {\r\n              unit: 'day',\r\n              tooltipFormat: 'dd/MM/yyyy',\r\n              displayFormats: { day: 'dd/MM/yyyy' }\r\n            },\r\n            title: { display: true, text: 'Fecha' }\r\n          },\r\n          y: {\r\n            beginAtZero: true,\r\n            title: { display: true, text: 'Utilidad (COP)' },\r\n            ticks: {\r\n              callback: function(value) {\r\n                return formatCurrency(value);\r\n              }\r\n            }\r\n          }\r\n        },\r\n        plugins: {\r\n          legend: { display: true },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                return `${context.dataset.label}: ${formatCurrency(context.parsed.y)}`;\r\n              }\r\n            }\r\n          },\r\n          datalabels: { display: false }\r\n        }\r\n      };\r\n  \r\n      // Exportar a Excel\r\n      const exportToExcel = () => {\r\n        const data = filteredDailyProfitData.value.map(row => {\r\n          const rowData = { Fecha: row.date };\r\n          filteredPdvs.value.forEach(pdv => {\r\n            rowData[`${pdv} - Ventas`] = row.pdvs[pdv].ventas;\r\n            rowData[`${pdv} - Costos`] = row.pdvs[pdv].costos;\r\n            rowData[`${pdv} - Producción`] = row.pdvs[pdv].produccion;\r\n            rowData[`${pdv} - Utilidad`] = row.pdvs[pdv].utilidad;\r\n          });\r\n          rowData['Total - Ventas'] = row.total.ventas;\r\n          rowData['Total - Costos'] = row.total.costos;\r\n          rowData['Total - Producción'] = row.total.produccion;\r\n          rowData['Total - Utilidad'] = row.total.utilidad;\r\n          return rowData;\r\n        });\r\n  \r\n        data.push({\r\n          Fecha: filteredTotals.value.date,\r\n          ...Object.fromEntries(\r\n            filteredPdvs.value.flatMap(pdv => [\r\n              [`${pdv} - Ventas`, filteredTotals.value[pdv].ventas],\r\n              [`${pdv} - Costos`, filteredTotals.value[pdv].costos],\r\n              [`${pdv} - Producción`, filteredTotals.value[pdv].produccion],\r\n              [`${pdv} - Utilidad`, filteredTotals.value[pdv].utilidad]\r\n            ])\r\n          ),\r\n          'Total - Ventas': filteredTotals.value.total.ventas,\r\n          'Total - Costos': filteredTotals.value.total.costos,\r\n          'Total - Producción': filteredTotals.value.total.produccion,\r\n          'Total - Utilidad': filteredTotals.value.total.utilidad\r\n        });\r\n  \r\n        const ws = XLSX.utils.json_to_sheet(data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Utilidad Diaria');\r\n        XLSX.writeFile(wb, `Utilidad_Diaria_${year.value}_${month.value}${selectedDay.value !== 'Todos' ? `_Dia${selectedDay.value}` : ''}.xlsx`);\r\n      };\r\n  \r\n      // Descargar gráficos\r\n      const downloadChart = async (chartId) => {\r\n        const canvas = document.getElementById(chartId);\r\n        const link = document.createElement('a');\r\n        link.href = await html2canvas(canvas).then(canvas => canvas.toDataURL('image/png'));\r\n        link.download = `${chartId}_${year.value}_${month.value}${selectedDay.value !== 'Todos' ? `_Dia${selectedDay.value}` : ''}.png`;\r\n        link.click();\r\n      };\r\n  \r\n      // Cargar años disponibles\r\n      onMounted(() => {\r\n        if (store.state.auth.token) {\r\n          fetchAvailableYears();\r\n        } else {\r\n          router.push('/login');\r\n        }\r\n      });\r\n  \r\n      watch(selectedPdv, () => {\r\n        console.log('PDV seleccionado cambiado a:', selectedPdv.value);\r\n      });\r\n  \r\n      return {\r\n        year,\r\n        years,\r\n        month,\r\n        months,\r\n        status,\r\n        selectedPDV,\r\n        selectedDay,\r\n        daysInMonth,\r\n        dailyProfitData,\r\n        filteredDailyProfitData,\r\n        pdvs,\r\n        filteredPdvs,\r\n        totals,\r\n        filteredTotals,\r\n        noData,\r\n        selectedPdv,\r\n        barChartData,\r\n        barChartOptions,\r\n        lineChartData,\r\n        lineChartOptions,\r\n        fetchData,\r\n        updateDaysAndFetch,\r\n        formatCurrency,\r\n        exportToExcel,\r\n        downloadChart\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .daily-profit {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .filters {\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    gap: 15px;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .actions {\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .actions button {\r\n    padding: 8px 16px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .actions button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  label {\r\n    margin-right: 10px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  select {\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    border: 1px solid #ddd;\r\n  }\r\n  \r\n  .table-container {\r\n    max-width: 100%;\r\n    overflow-x: auto;\r\n    margin-top: 40px;\r\n  }\r\n  \r\n  .profit-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .profit-table th,\r\n  .profit-table td {\r\n    border: 1px solid #ddd;\r\n    padding: 4px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .profit-table th {\r\n    background-color: #f2f2f2;\r\n    font-size: 11px;\r\n  }\r\n  \r\n  .profit-table td {\r\n    max-width: 120px;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  .profit-table td:first-child {\r\n    font-size: 10px;\r\n  }\r\n  \r\n  .total-row {\r\n    font-weight: bold;\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  .no-data-message {\r\n    text-align: center;\r\n    color: #888;\r\n    margin: 20px 0;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .charts-container {\r\n    margin-bottom: 40px;\r\n  }\r\n  \r\n  .chart-wrapper {\r\n    margin-bottom: 60px;\r\n    height: 400px;\r\n  }\r\n  \r\n  .chart-wrapper h2 {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .pdv-selector {\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n  }\r\n  </style>","import { render } from \"./DailyProfit.vue?vue&type=template&id=13dca109&scoped=true\"\nimport script from \"./DailyProfit.vue?vue&type=script&lang=js\"\nexport * from \"./DailyProfit.vue?vue&type=script&lang=js\"\n\nimport \"./DailyProfit.vue?vue&type=style&index=0&id=13dca109&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-13dca109\"]])\n\nexport default __exports__","'use strict';\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (obj, stringHandling) {\n  if (!stringHandling || typeof obj !== 'string') anObject(obj);\n  var method = getIteratorMethod(obj);\n  return getIteratorDirect(anObject(method !== undefined ? call(method, obj) : obj));\n};\n"],"names":["$","call","aCallable","anObject","getIteratorDirect","getIteratorFlattenable","createIteratorProxy","iteratorClose","IS_PURE","IteratorProxy","result","inner","iterator","this","mapper","next","done","value","error","counter","target","proto","real","forced","flatMap","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$setup","months","month","name","year","_hoisted_2","_cache","$event","onChange","args","updateDaysAndFetch","_Fragment","_renderList","years","y","_hoisted_3","m","num","_hoisted_4","status","fetchData","selectedPDV","pdvs","pdv","_hoisted_5","selectedDay","daysInMonth","day","_hoisted_6","_hoisted_7","onClick","exportToExcel","downloadChart","noData","_hoisted_8","_createCommentVNode","_hoisted_9","_hoisted_10","_createVNode","_component_Bar","id","data","barChartData","options","barChartOptions","_hoisted_11","_hoisted_12","selectedPdv","filteredPdvs","_hoisted_13","_component_Line","lineChartData","lineChartOptions","_hoisted_14","_hoisted_15","colspan","filteredDailyProfitData","row","date","formatCurrency","ventas","costos","produccion","utilidad","total","length","_hoisted_16","filteredTotals","ChartJS","register","Title","Tooltip","Legend","BarElement","LineElement","PointElement","CategoryScale","LinearScale","TimeScale","ChartDataLabels","components","Bar","Line","setup","store","useStore","router","useRouter","ref","currentDate","Date","currentMonth","getMonth","currentYear","getFullYear","dailyProfitData","totals","computed","every","updateDaysInMonth","daysInMonthMap","numDays","Array","from","_","i","fetchAvailableYears","async","response","axios","get","includes","fetchPdvs","console","push","params","pdvSet","Set","forEach","Object","keys","almacenes","add","sort","rawData","dataByDay","dayName","toLocaleDateString","weekday","formattedDate","toString","padStart","entries","pdvData","dayKey","parseInt","venta","cantidad_vendida","values","dayData","metrics","filter","updateFilteredData","dayStr","monthStr","datePattern","reduce","sum","Intl","NumberFormat","style","currency","minimumFractionDigits","format","labels","datasets","label","map","backgroundColor","borderColor","borderWidth","responsive","maintainAspectRatio","scales","beginAtZero","title","display","text","ticks","callback","x","plugins","legend","tooltip","callbacks","context","dataset","parsed","datalabels","anchor","align","color","font","size","weight","formatter","dateStr","split","fill","tension","type","time","unit","tooltipFormat","displayFormats","rowData","Fecha","fromEntries","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","canvas","document","getElementById","chartId","link","createElement","href","html2canvas","then","toDataURL","download","click","onMounted","state","auth","token","watch","log","__exports__","render","getIteratorMethod","module","exports","obj","stringHandling","method","undefined"],"sourceRoot":""}