{"version":3,"file":"js/275.3a0c1d53.js","mappings":"wMACOA,MAAM,gC,GAIJA,MAAM,e,GAMFA,MAAM,a,GAXnBC,IAAA,EAciCD,MAAM,qB,GAK5BA,MAAM,e,EAnBjB,a,EAAA,a,GAyBWA,MAAM,e,GAzBjBC,IAAA,EA8B6BD,MAAM,mB,GA9BnCC,IAAA,EAoC+BD,MAAM,qB,GACxBA,MAAM,mB,GAgBNA,MAAM,a,GArDnBC,IAAA,EAwDsCD,MAAM,qB,GAKjCA,MAAM,e,EA7DjB,a,EAAA,a,GAmEWA,MAAM,e,GAnEjBC,IAAA,EAwEuCD,MAAM,mB,GAxE7CC,IAAA,EA8EyCD,MAAM,qB,GAClCA,MAAM,mB,GAqBNA,MAAM,gB,GAGNA,MAAM,c,EAvGnB,a,GA2GaA,MAAM,c,GAINA,MAAM,c,GAINA,MAAM,c,GAONA,MAAM,c,EA1HnB,wB,GA+HaA,MAAM,c,EA/HnB,wB,GAoIaA,MAAM,c,GAINA,MAAM,gB,GAxInBC,IAAA,EAyIsCC,KAAK,U,GAzI3CD,IAAA,EAoJkED,MAAM,sB,GAE7DA,MAAM,mB,EAtJjB,kC,EAAA,mC,EAAA,U,EAAA,kC,EAAA,kC,EAAA,Y,GAyLWA,MAAM,sB,GAOJA,MAAM,sB,GAERA,MAAM,W,GACJA,MAAM,gB,GAINA,MAAM,gB,GAINA,MAAM,gB,GAWNA,MAAM,kB,IAtNnBC,IAAA,EA4NmCD,MAAM,mB,GA5NzC,Y,GAAA,Y,8CACEG,EAAAA,EAAAA,IA4PM,MA5PNC,EA4PM,gBA3PJC,EAAAA,EAAAA,IAA0C,UAAtC,qCAAiC,KAGrCA,EAAAA,EAAAA,IAGM,MAHNC,EAGM,EADJD,EAAAA,EAAAA,IAA8E,UAArEE,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,GAAAC,eAAAD,GAAAC,iBAAAF,IAAeT,MAAM,mBAAkB,qBAIzDK,EAAAA,EAAAA,IAuCU,UAvCVO,EAuCU,gBAtCRP,EAAAA,EAAAA,IAA4C,UAAxC,uCAAmC,IAE5BK,GAAAG,iBAAc,WAAzBV,EAAAA,EAAAA,IAGM,MAHNW,EAGMN,EAAA,MAAAA,EAAA,MAFJH,EAAAA,EAAAA,IAA2B,OAAtBL,MAAM,WAAS,UACpBK,EAAAA,EAAAA,IAAkD,SAA/C,+CAA2C,QAhBtDU,EAAAA,EAAAA,IAAA,QAmBMV,EAAAA,EAAAA,IAIM,MAJNW,EAIM,EAHJX,EAAAA,EAAAA,IAAsE,SAA/DH,KAAK,OAAOe,OAAO,OAAQC,SAAMV,EAAA,KAAAA,EAAA,OAAAC,IAAEC,GAAAS,WAAAT,GAAAS,aAAAV,IAAWW,IAAI,Y,WACzDf,EAAAA,EAAAA,IAAsE,UAA7DE,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,GAAAW,aAAAX,GAAAW,eAAAZ,IAAca,SAAUZ,GAAAG,gBAAgB,QAAK,EArBrEU,IAsBQlB,EAAAA,EAAAA,IAAwG,UAA/FE,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,GAAAc,kBAAAd,GAAAc,oBAAAf,IAAmBa,SAAUZ,GAAAG,eAAgBb,MAAM,eAAc,iBAAc,EAtBvGyB,MAyBMpB,EAAAA,EAAAA,IAGM,MAHNqB,EAGM,EAFJrB,EAAAA,EAAAA,IAAsF,KAAlFE,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,GAAAiB,uBAAAjB,GAAAiB,yBAAAlB,IAAuBT,MAAM,iBAAgB,+BACxDK,EAAAA,EAAAA,IAAiF,KAA7EE,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,GAAAkB,oBAAAlB,GAAAkB,sBAAAnB,IAAoBT,MAAM,oBAAmB,2BAG/CU,GAAAmB,aAAU,WAArB1B,EAAAA,EAAAA,IAIM,MAJN2B,EAIM,gBAHJzB,EAAAA,EAAAA,IAA2B,UAAvB,sBAAkB,cACtBA,EAAAA,EAAAA,IAAmD,YAAzC0B,SAAA,GAhClB,sBAAAvB,EAAA,KAAAA,EAAA,GAAAwB,GAgCoCtB,GAAAmB,WAAUG,I,iBAAVtB,GAAAmB,eAC5BxB,EAAAA,EAAAA,IAAsD,UAA7CE,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,GAAAuB,eAAAvB,GAAAuB,iBAAAxB,KAAe,sBAjCvCM,EAAAA,EAAAA,IAAA,OAoCiBL,GAAAwB,eAAY,WAAvB/B,EAAAA,EAAAA,IAaM,MAbNgC,EAaM,EAZJ9B,EAAAA,EAAAA,IAWM,MAXN+B,EAWM,gBAhDdC,EAAAA,EAAAA,IAAA,6nCA+CUhC,EAAAA,EAAAA,IAA+D,UAAtDE,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,GAAA4B,aAAA5B,GAAA4B,eAAA7B,IAAaT,MAAM,cAAa,gBA/C1De,EAAAA,EAAAA,IAAA,UAqDIV,EAAAA,EAAAA,IA4CU,UA5CVkC,EA4CU,gBA3CRlC,EAAAA,EAAAA,IAA6D,UAAzD,wDAAoD,IAE7CK,GAAA8B,sBAAmB,WAA9BrC,EAAAA,EAAAA,IAGM,MAHNsC,EAGMjC,EAAA,MAAAA,EAAA,MAFJH,EAAAA,EAAAA,IAA2B,OAAtBL,MAAM,WAAS,UACpBK,EAAAA,EAAAA,IAAmE,SAAhE,gEAA4D,QA1DvEU,EAAAA,EAAAA,IAAA,QA6DMV,EAAAA,EAAAA,IAIM,MAJNqC,EAIM,EAHJrC,EAAAA,EAAAA,IAAiG,SAA1FH,KAAK,OAAOe,OAAO,OAAQC,SAAMV,EAAA,KAAAA,EAAA,OAAAC,IAAEC,GAAAiC,4BAAAjC,GAAAiC,8BAAAlC,IAA4BW,IAAI,sB,WAC1Ef,EAAAA,EAAAA,IAAiH,UAAxGE,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,GAAAkC,0BAAAlC,GAAAkC,4BAAAnC,IAA2Ba,UAAWZ,GAAAmC,sBAAwBnC,GAAA8B,qBAAqB,QAAK,EA/DhHM,IAgEQzC,EAAAA,EAAAA,IAA0I,UAAjIE,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,GAAAqC,sBAAArC,GAAAqC,wBAAAtC,IAAuBa,UAAWZ,GAAAmC,sBAAwBnC,GAAA8B,oBAAqBxC,MAAM,eAAc,iBAAc,EAhEzIgD,MAmEM3C,EAAAA,EAAAA,IAGM,MAHN4C,EAGM,EAFJ5C,EAAAA,EAAAA,IAAgG,KAA5FE,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,GAAAwC,iCAAAxC,GAAAwC,mCAAAzC,IAAiCT,MAAM,iBAAgB,+BAClEK,EAAAA,EAAAA,IAA2F,KAAvFE,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,GAAAyC,8BAAAzC,GAAAyC,gCAAA1C,IAA8BT,MAAM,oBAAmB,2BAGzDU,GAAA0C,uBAAoB,WAA/BjD,EAAAA,EAAAA,IAIM,MAJNkD,EAIM,gBAHJhD,EAAAA,EAAAA,IAA2B,UAAvB,sBAAkB,cACtBA,EAAAA,EAAAA,IAA6D,YAAnD0B,SAAA,GA1ElB,sBAAAvB,EAAA,MAAAA,EAAA,IAAAwB,GA0EoCtB,GAAA0C,qBAAoBpB,I,iBAApBtB,GAAA0C,yBAC5B/C,EAAAA,EAAAA,IAAgE,UAAvDE,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,GAAA4C,yBAAA5C,GAAA4C,2BAAA7C,KAAyB,sBA3EjDM,EAAAA,EAAAA,IAAA,OA8EiBL,GAAA6C,yBAAsB,WAAjCpD,EAAAA,EAAAA,IAkBM,MAlBNqD,EAkBM,EAjBJnD,EAAAA,EAAAA,IAgBM,MAhBNoD,EAgBM,gBA/FdpB,EAAAA,EAAAA,IAAA,y3CA8FUhC,EAAAA,EAAAA,IAAyE,UAAhEE,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,GAAAgD,uBAAAhD,GAAAgD,yBAAAjD,IAAuBT,MAAM,cAAa,gBA9FpEe,EAAAA,EAAAA,IAAA,UAoGIV,EAAAA,EAAAA,IA6CU,UA7CVsD,EA6CU,EA5CRtD,EAAAA,EAAAA,IAAiE,WAAAuD,EAAAA,EAAAA,IAA1DlD,GAAAmD,YAAc,kBAAoB,kBAAvB,IAClBxD,EAAAA,EAAAA,IA0CO,QA1CAyD,SAAMtD,EAAA,MAAAA,EAAA,KAtGnBuD,EAAAA,EAAAA,KAAA/B,GAsG6BtB,GAAAmD,YAAcnD,GAAAsD,qBAAuBtD,GAAAuD,iBAAa,e,EACvE5D,EAAAA,EAAAA,IAGM,MAHN6D,EAGM,gBAFJ7D,EAAAA,EAAAA,IAAgD,SAAzC8D,IAAI,UAAS,wBAAoB,cACxC9D,EAAAA,EAAAA,IAAgF,SAzG1F,sBAAAG,EAAA,MAAAA,EAAA,IAAAwB,GAyG0BtB,GAAA0D,SAASC,OAAMrC,GAAEsC,GAAG,SAASC,SAAA,GAAUjD,SAAUZ,GAAAmD,a,OAzG3EW,GAAA,OAyG0B9D,GAAA0D,SAASC,aAE3BhE,EAAAA,EAAAA,IAGM,MAHNoE,EAGM,gBAFJpE,EAAAA,EAAAA,IAAgD,SAAzC8D,IAAI,UAAS,wBAAoB,cACxC9D,EAAAA,EAAAA,IAAwD,SA7GlE,sBAAAG,EAAA,MAAAA,EAAA,IAAAwB,GA6G0BtB,GAAA0D,SAASM,OAAM1C,GAAEsC,GAAG,SAASC,SAAA,I,iBAA7B7D,GAAA0D,SAASM,aAE3BrE,EAAAA,EAAAA,IAGM,MAHNsE,EAGM,gBAFJtE,EAAAA,EAAAA,IAAoD,SAA7C8D,IAAI,iBAAgB,qBAAiB,cAC5C9D,EAAAA,EAAAA,IAA6D,SAjHvE,sBAAAG,EAAA,MAAAA,EAAA,IAAAwB,GAiH0BtB,GAAA0D,SAASQ,cAAa5C,GAAEsC,GAAG,iB,iBAA3B5D,GAAA0D,SAASQ,oBAE3BvE,EAAAA,EAAAA,IAMM,MANNwE,EAMM,gBALJxE,EAAAA,EAAAA,IAAgC,aAAzB,qBAAiB,cACxBA,EAAAA,EAAAA,IAGS,UAxHnB,sBAAAG,EAAA,MAAAA,EAAA,IAAAwB,GAqH2BtB,GAAA0D,SAASU,sBAAqB9C,I,gBAC7C3B,EAAAA,EAAAA,IAAoC,UAA3B0E,OAAO,GAAO,QAAI,IAC3B1E,EAAAA,EAAAA,IAAwC,UAA/B0E,OAAO,GAAM,aAAS,iBAFhBrE,GAAA0D,SAASU,4BAK5BzE,EAAAA,EAAAA,IAIM,MAJN2E,EAIM,gBAHJ3E,EAAAA,EAAAA,IAAqD,SAA9C8D,IAAI,cAAa,yBAAqB,cAC7C9D,EAAAA,EAAAA,IAC2F,SA7HrG,sBAAAG,EAAA,MAAAA,EAAA,IAAAwB,GA4HiCtB,GAAA0D,SAASa,cAAajD,GAAEsC,GAAG,aAAapE,KAAK,SAASgF,KAAK,OAC/EX,UAAW7D,GAAA0D,SAASU,sBAAwBxD,SAAUZ,GAAA0D,SAASU,uB,OA7H5EK,GAAA,OA4HiCzE,GAAA0D,SAASa,mBAAa,GAA9BG,QAAR,SAGT/E,EAAAA,EAAAA,IAIM,MAJNgF,EAIM,gBAHJhF,EAAAA,EAAAA,IAA2D,SAApD8D,IAAI,eAAc,8BAA0B,cACnD9D,EAAAA,EAAAA,IAC2F,SAlIrG,sBAAAG,EAAA,MAAAA,EAAA,IAAAwB,GAiIiCtB,GAAA0D,SAASkB,eAActD,GAAEsC,GAAG,cAAcpE,KAAK,SAASgF,KAAK,OACjFX,UAAW7D,GAAA0D,SAASU,sBAAwBxD,SAAUZ,GAAA0D,SAASU,uB,OAlI5ES,GAAA,OAiIiC7E,GAAA0D,SAASkB,oBAAc,GAA/BF,QAAR,SAGT/E,EAAAA,EAAAA,IAGM,MAHNmF,EAGM,gBAFJnF,EAAAA,EAAAA,IAA+C,SAAxC8D,IAAI,gBAAe,iBAAa,cACvC9D,EAAAA,EAAAA,IAAwF,SAtIlG,sBAAAG,EAAA,MAAAA,EAAA,IAAAwB,GAsIiCtB,GAAA0D,SAASqB,aAAYzD,GAAEsC,GAAG,eAAepE,KAAK,SAASwF,IAAI,K,iBAA3DhF,GAAA0D,SAASqB,kBAAY,GAA7BL,QAAR,SAET/E,EAAAA,EAAAA,IAOM,MAPNsF,EAOM,CANWjF,GAAAmD,cAAyC,WACxD1D,EAAAA,EAAAA,IAIWyF,EAAAA,GAAA,CA9IrB3F,IAAA,mBA2IYI,EAAAA,EAAAA,IAA+C,UAAvCH,KAAK,UAAS,oBAAgB,KACtCG,EAAAA,EAAAA,IAAgE,UAAxDH,KAAK,SAAUK,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,GAAAmF,iBAAAnF,GAAAmF,mBAAApF,KAAiB,aAC/CJ,EAAAA,EAAAA,IAAwF,UAAhFH,KAAK,SAAUK,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,GAAAoF,eAAApF,GAAAoF,iBAAArF,IAAeT,MAAM,eAAc,mBAAc,OAJvD,WAA1BG,EAAAA,EAAAA,IAAiE,SAAjE4F,EAA0C,sBAIuC,MAOxErF,GAAA0D,SAASU,uBAAyBpE,GAAA0D,SAASE,KAAE,WAA5DnE,EAAAA,EAAAA,IAyCU,UAzCV6F,EAyCU,gBAxCR3F,EAAAA,EAAAA,IAAgC,UAA5B,2BAAuB,KAC3BA,EAAAA,EAAAA,IAkCM,MAlCN4F,EAkCM,EAjCJ5F,EAAAA,EAAAA,IAgCQ,6BA/BNA,EAAAA,EAAAA,IAQQ,eAPNA,EAAAA,EAAAA,IAMK,YALHA,EAAAA,EAAAA,IAAsB,UAAlB,kBACJA,EAAAA,EAAAA,IAAiB,UAAb,aACJA,EAAAA,EAAAA,IAA0B,UAAtB,sBACJA,EAAAA,EAAAA,IAAuB,UAAnB,mBACJA,EAAAA,EAAAA,IAAiB,UAAb,gBAAQ,KAGhBA,EAAAA,EAAAA,IAqBQ,6BApBNF,EAAAA,EAAAA,IAmBKyF,EAAAA,GAAA,MArLjBM,EAAAA,EAAAA,IAkK4CxF,GAAAyF,YAlK5C,CAkKwBC,EAAUC,M,WAAtBlG,EAAAA,EAAAA,IAmBK,MAnBwCF,IAAKoG,GAAK,EACrDhG,EAAAA,EAAAA,IASK,qBARHA,EAAAA,EAAAA,IAA4H,SAArHH,KAAK,OApK5B,sBAAA8B,GAoK4CoE,EAASE,eAActE,EAAEuE,YAAY,oBAAqBC,QAAKxE,GAAEtB,GAAA+F,qBAAqBJ,I,QApKlIK,GAAA,OAoK4CN,EAASE,mBAAc,SACnDjG,EAAAA,EAAAA,IAKS,UA1KzB,sBAAA2B,GAqKiCoE,EAASO,cAAa3E,EAAGd,SAAMc,GAAEtB,GAAAkG,kBAAkBP,I,gBAClEhG,EAAAA,EAAAA,IAA8D,UAArD0E,MAAO,KAAMzD,SAAA,IAAS,0BAAsB,mBACrDnB,EAAAA,EAAAA,IAESyF,EAAAA,GAAA,MAzK3BM,EAAAA,EAAAA,IAuKyCxF,GAAAmG,sBAARC,K,WAAf3G,EAAAA,EAAAA,IAES,UAFqCF,IAAK6G,EAAKxC,GAAKS,MAAO+B,EAAKxC,K,QACpEwC,EAAKzC,QAAS,OAAGT,EAAAA,EAAAA,IAAGkD,EAAKpC,QAAM,EAxKtDqC,M,UAAAC,GAAA,OAqKiCZ,EAASO,kBAAa,SAMvCtG,EAAAA,EAAAA,IAAqI,SAA9HH,KAAK,OA3K5B,sBAAA8B,GA2K4CoE,EAASa,eAAcjF,EAAEuE,YAAY,8BAA+BC,QAAKxE,GAAEtB,GAAAwG,oBAAoBb,I,QA3K3Ic,GAAA,OA2K4Cf,EAASa,qBAEvC5G,EAAAA,EAAAA,IAEK,qBADHA,EAAAA,EAAAA,IAAiI,SA9KjJ,sBAAA2B,GA8KuCoE,EAASgB,SAAQpF,EAAE9B,KAAK,SAASgF,KAAK,OAAOQ,IAAI,OAAOnB,SAAA,GAAUiC,QAAKxE,GAAEtB,GAAA2G,uBAAuBhB,I,QA9KvIiB,GAAA,OA8KuClB,EAASgB,cAAQ,GAAzBhC,QAAR,SAET/E,EAAAA,EAAAA,IAAqC,WAAAuD,EAAAA,EAAAA,IAA9BwC,EAASmB,eAAa,IAC7BlH,EAAAA,EAAAA,IAAkC,WAAAuD,EAAAA,EAAAA,IAA3BwC,EAASoB,YAAU,IAC1BnH,EAAAA,EAAAA,IAEK,YADHA,EAAAA,EAAAA,IAAkE,UAAzDE,SAnLzBwD,EAAAA,EAAAA,KAAA/B,GAmLwCtB,GAAA+G,iBAAiBpB,IAAK,cAAG,WAAQ,EAnLzEqB,U,aAyLMrH,EAAAA,EAAAA,IAGM,MAHNsH,EAGM,EAFJtH,EAAAA,EAAAA,IAAkE,UAAzDE,QAAKC,EAAA,MAAAA,EAAA,KA1LtBuD,EAAAA,EAAAA,KAAA,IAAAtD,IA0LgCC,GAAAkH,iBAAAlH,GAAAkH,mBAAAnH,IAAe,eAAE,qBACzCJ,EAAAA,EAAAA,IAAsE,UAA7DE,QAAKC,EAAA,MAAAA,EAAA,KA3LtBuD,EAAAA,EAAAA,KAAA,IAAAtD,IA2LgCC,GAAAmH,mBAAAnH,GAAAmH,qBAAApH,IAAiB,eAAE,4BA3LnDM,EAAAA,EAAAA,IAAA,QAgMIV,EAAAA,EAAAA,IA4DU,UA5DVyH,EA4DU,gBA3DRzH,EAAAA,EAAAA,IAAsC,UAAlC,iCAA6B,KACjCA,EAAAA,EAAAA,IAyBM,MAzBN0H,EAyBM,EAxBJ1H,EAAAA,EAAAA,IAGM,MAHN2H,EAGM,gBAFJ3H,EAAAA,EAAAA,IAAoD,SAA7C8D,IAAI,gBAAe,sBAAkB,cAC5C9D,EAAAA,EAAAA,IAA2F,SArMrG,sBAAAG,EAAA,MAAAA,EAAA,IAAAwB,GAqM0BtB,GAAAuH,aAAYjG,GAAEsC,GAAG,eAAeiC,YAAY,8B,iBAA5C7F,GAAAuH,mBAElB5H,EAAAA,EAAAA,IAGM,MAHN6H,EAGM,gBAFJ7H,EAAAA,EAAAA,IAAoD,SAA7C8D,IAAI,gBAAe,sBAAkB,cAC5C9D,EAAAA,EAAAA,IAAkG,SAzM5G,sBAAAG,EAAA,MAAAA,EAAA,IAAAwB,GAyM0BtB,GAAAyH,aAAYnG,GAAEsC,GAAG,eAAeiC,YAAY,qC,iBAA5C7F,GAAAyH,mBAElB9H,EAAAA,EAAAA,IAUM,MAVN+H,EAUM,gBATJ/H,EAAAA,EAAAA,IAAmC,SAA5B8D,IAAI,SAAQ,YAAQ,cAC3B9D,EAAAA,EAAAA,IAMS,UAnNnB,sBAAAG,EAAA,MAAAA,EAAA,IAAAwB,GA6M2BtB,GAAA2H,MAAKrG,GAAEsC,GAAG,QAASpD,SAAMV,EAAA,MAAAA,EAAA,QAAAC,IAAEC,GAAA4H,oBAAA5H,GAAA4H,sBAAA7H,K,gBA7MtD4B,EAAAA,EAAAA,IAAA,8PA6M2B3B,GAAA2H,SAAK,eAOtBhI,EAAAA,EAAAA,IAAuB,YAAjB,cAAU,OAElBA,EAAAA,EAAAA,IAIM,MAJNkI,EAIM,EAHJlI,EAAAA,EAAAA,IAAgE,UAAvDE,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,GAAA4H,oBAAA5H,GAAA4H,sBAAA7H,KAAoB,wBACpCJ,EAAAA,EAAAA,IAA0E,UAAjEE,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,GAAA8H,eAAA9H,GAAA8H,iBAAA/H,IAAeT,MAAM,eAAc,mBACnDK,EAAAA,EAAAA,IAA4E,UAAnEE,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,GAAA+H,gBAAA/H,GAAA+H,kBAAAhI,IAAgBT,MAAM,cAAa,wBAG5CU,GAAAgI,UAAUC,SAAM,WAA3BxI,EAAAA,EAAAA,IA+BM,MA/BNyI,GA+BM,EA9BJvI,EAAAA,EAAAA,IA4BQ,6BA3BNA,EAAAA,EAAAA,IAWQ,eAVNA,EAAAA,EAAAA,IASK,YARHA,EAAAA,EAAAA,IAAe,UAAX,WACJA,EAAAA,EAAAA,IAAe,UAAX,WACJA,EAAAA,EAAAA,IAAuB,UAAnB,mBACJA,EAAAA,EAAAA,IAAwB,UAApB,oBACJA,EAAAA,EAAAA,IAAyB,UAArB,qBACJA,EAAAA,EAAAA,IAAwB,UAApB,oBACJA,EAAAA,EAAAA,IAAqB,UAAjB,iBACJA,EAAAA,EAAAA,IAAiB,UAAb,gBAAQ,KAGhBA,EAAAA,EAAAA,IAcQ,6BAbNF,EAAAA,EAAAA,IAYKyF,EAAAA,GAAA,MAvPjBM,EAAAA,EAAAA,IA2O+BxF,GAAAgI,WAAR5B,K,WAAX3G,EAAAA,EAAAA,IAYK,MAZ0BF,IAAK6G,EAAKxC,I,EACvCjE,EAAAA,EAAAA,IAA0B,WAAAuD,EAAAA,EAAAA,IAAnBkD,EAAKzC,QAAM,IAClBhE,EAAAA,EAAAA,IAA0B,WAAAuD,EAAAA,EAAAA,IAAnBkD,EAAKpC,QAAM,IAClBrE,EAAAA,EAAAA,IAAiC,WAAAuD,EAAAA,EAAAA,IAA1BkD,EAAK7B,eAAa,IACzB5E,EAAAA,EAAAA,IAAkC,WAAAuD,EAAAA,EAAAA,IAA3BkD,EAAKxB,gBAAc,IAC1BjF,EAAAA,EAAAA,IAAiC,WAAAuD,EAAAA,EAAAA,IAA1BkD,EAAKlC,eAAa,IACzBvE,EAAAA,EAAAA,IAAuD,WAAAuD,EAAAA,EAAAA,IAAhDkD,EAAKhC,sBAAwB,KAAO,MAAV,IACjCzE,EAAAA,EAAAA,IAAmE,WAAAuD,EAAAA,EAAAA,IAAtC,OAAtBkD,EAAKrB,aAAwBqB,EAAKrB,aAAe,KAAH,IACrDpF,EAAAA,EAAAA,IAGK,YAFHA,EAAAA,EAAAA,IAAqD,UAA5CE,QAAKyB,GAAEtB,GAAAmI,eAAe/B,IAAO,SAAM,EApP5DgC,KAqPgBzI,EAAAA,EAAAA,IAA4D,UAAnDE,QAAKyB,GAAEtB,GAAAqI,iBAAiBjC,EAAKxC,KAAK,WAAQ,EArPnE0E,W,UA0PsBtI,GAAAgI,UAAUC,OAASjI,GAAAuI,iBAAc,WAA/C9I,EAAAA,EAAAA,IAA0G,UA1PlHF,IAAA,EA0P0DM,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,GAAAwI,oBAAAxI,GAAAwI,sBAAAzI,KAAoB,0BA1PrFM,EAAAA,EAAAA,IAAA,WAAAA,EAAAA,EAAAA,IAAA,U,iIAuQA,IACAoI,KAAM,6BACNC,KAAAA,IACgBC,EAAAA,GAAAA,MAAd,MACMC,GAASC,EAAAA,GAAAA,MAGTnF,GAAWhD,EAAAA,GAAAA,IAAI,CAAEkD,GAAI,KAAMD,OAAQ,GAAIK,OAAQ,GAAII,uBAAuB,EAAOW,aAAc,OAC/FiD,GAAYtH,EAAAA,GAAAA,IAAI,IAChB+E,GAAa/E,EAAAA,GAAAA,IAAI,IACjByF,GAAuBzF,EAAAA,GAAAA,IAAI,IAC3ByC,GAAczC,EAAAA,GAAAA,KAAI,GAClB6G,GAAe7G,EAAAA,GAAAA,IAAI,IACnB+G,GAAe/G,EAAAA,GAAAA,IAAI,IACnB6H,GAAiB7H,EAAAA,GAAAA,IAAI,GACrBoI,GAASpI,EAAAA,GAAAA,IAAI,GACbiH,GAAQjH,EAAAA,GAAAA,IAAI,IACZqI,GAAarI,EAAAA,GAAAA,IAAI,MACjByB,GAAuBzB,EAAAA,GAAAA,IAAI,MAC3BS,GAAaT,EAAAA,GAAAA,IAAI,IACjBgC,GAAuBhC,EAAAA,GAAAA,IAAI,IAC3Bc,GAAed,EAAAA,GAAAA,KAAI,GACnBmC,GAAyBnC,EAAAA,GAAAA,KAAI,GAC7BP,GAAiBO,EAAAA,GAAAA,KAAI,GACrBoB,GAAsBpB,EAAAA,GAAAA,KAAI,GAC1BsI,GAAWtI,EAAAA,GAAAA,IAAI,MACfuI,GAAqBvI,EAAAA,GAAAA,IAAI,MAEzB6C,EAAgB2F,UACpB,IACE,MAAMC,EAAU,IAAKzF,EAASW,OAC1B8E,EAAQ/E,+BACH+E,EAAQ5E,qBACR4E,EAAQvE,gBAEjB,MAAMwE,QAAiBC,GAAAA,EAAMC,KAAK,uBAAwBH,GAC1DzF,EAASW,MAAMT,GAAKwF,EAASG,KAAK3F,GAClC4F,MAAM,iCACNC,IACA7B,GACF,CAAE,MAAO8B,GACPC,QAAQD,MAAM,2BAA4BA,GAC1CF,MAAME,EAAMN,UAAUG,MAAMG,OAAS,0BACvC,GAGI9B,EAAqBsB,UACzB,IACE,MAAMU,EAAiC,IAAhBjC,EAAMtD,MAAc,IAAQsD,EAAMtD,MACnDwF,EAAS,CACbf,OAAQA,EAAOzE,MACfsD,MAAOiC,EACPE,cAAevC,EAAalD,OAAS,GACrC0F,cAAetC,EAAapD,OAAS,IAEjC+E,QAAiBC,GAAAA,EAAMW,IAAI,uBAAwB,CAAEH,WAC3D7B,EAAU3D,MAAQ+E,EAASG,KAAKvB,UAAUiC,MAAK,CAACC,EAAGC,IAAMD,EAAEvG,OAAOyG,cAAcD,EAAExG,UAClF4E,EAAelE,MAAQ+E,EAASG,KAAKc,KACvC,CAAE,MAAOX,GACPC,QAAQD,MAAM,6BAA8BA,GAC5CF,MAAM,+CACR,GAGIc,EAA2BpB,UAC/B,GAAKxF,EAASW,MAAMT,IAAOF,EAASW,MAAMD,sBAC1C,IACE,MAAMgF,QAAiBC,GAAAA,EAAMW,IAAI,kCAAkCtG,EAASW,MAAMT,MAClF6B,EAAWpB,MAAQ+E,EAASG,KAAK9D,WAAW8E,KAAI7E,IAC9C,MAAM8E,EAAerE,EAAqB9B,MAAMoG,MAAKC,GAAKA,EAAE9G,KAAO8B,EAASiF,mBAC5E,MAAO,CACL/G,GAAI8B,EAAS9B,GACbqC,cAAeP,EAASiF,iBACxBpE,eAAgBiE,EAAeA,EAAa7G,OAAS,GACrDiC,eAAgB4E,EAAeA,EAAaxG,OAAS,GACrD0C,SAAUhB,EAASgB,SACnBG,cAAe2D,EAAeA,EAAa5F,eAAiB,EAC5DkC,WAAYpB,EAASgB,UAAY8D,EAAeA,EAAa5F,eAAiB,GAC/E,GAEL,CAAE,MAAO8E,GACPC,QAAQD,MAAM,8BAA+BA,GAC7CF,MAAM,+DACR,GAGIoB,EAA6B1B,UACjC,IACE,MAAME,QAAiBC,GAAAA,EAAMW,IAAI,uBAAwB,CAAEH,OAAQ,CAAElC,MAAO,OAC5ExB,EAAqB9B,MAAQ+E,EAASG,KAAKvB,UAAUiC,MAAK,CAACC,EAAGC,IAAMD,EAAEvG,OAAOyG,cAAcD,EAAExG,SAC/F,CAAE,MAAO+F,GACPC,QAAQD,MAAM,yCAA0CA,GACzB,MAA3BA,EAAMN,UAAUyB,OAClBjC,EAAOkC,KAAK,UAEZtB,MAAM,mDAEV,GAGIrC,EAAoB+B,UACxB,IACE,GAAIzD,EAAWpB,MAAM0G,MAAKC,IAAMA,EAAE/E,eAAiBgF,MAAMD,EAAEtE,WAAasE,EAAEtE,UAAY,IAEpF,YADA8C,MAAM,mGAGR,MAAML,EAAU,CACd+B,sBAAuBxH,EAASW,MAAMT,GACtC6B,WAAYA,EAAWpB,MAAMkG,KAAIS,IAAA,CAC/BL,iBAAkBK,EAAE/E,cACpBS,SAAUyE,OAAOH,EAAEtE,qBAGjB2C,GAAAA,EAAMC,KAAK,iCAAkCH,GACnDK,MAAM,sCACNc,GACF,CAAE,MAAOZ,GACPC,QAAQD,MAAM,+BAAgCA,GAC9CF,MAAM,6CACR,GAGIhB,EAAqBU,UACzB,IACEJ,EAAOzE,OAASsD,EAAMtD,MACtB,MAAM+E,QAAiBC,GAAAA,EAAMW,IAAI,uBAAwB,CACvDH,OAAQ,CAAEf,OAAQA,EAAOzE,MAAOsD,MAAOA,EAAMtD,SAE/C2D,EAAU3D,MAAQ,IAAI2D,EAAU3D,SAAU+E,EAASG,KAAKvB,UAAUiC,MAAK,CAACC,EAAGC,IAAMD,EAAEvG,OAAOyG,cAAcD,EAAExG,UAC5G,CAAE,MAAO+F,GACPC,QAAQD,MAAM,iCAAkCA,EAClD,GAGIjJ,EAAa2K,IACjBrC,EAAW1E,MAAQ+G,EAAMC,OAAOC,MAAM,GACtCnK,EAAWkD,MAAQ,EAAE,EAGjB1D,EAAcuI,UAClB,GAAKH,EAAW1E,MAAhB,CAIAlE,EAAekE,OAAQ,EACvB,IACE,MAAMkH,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQ1C,EAAW1E,OACnC,MAAM+E,QAAiBC,GAAAA,EAAMC,KAAK,2BAA4BiC,EAAU,CACtEG,QAAS,CAAE,eAAgB,uBAC3BC,QAAS,OAEL,QAAEC,EAAO,kBAAEC,EAAiB,qBAAEC,EAAoB,QAAEC,GAAY3C,EAASG,KAC/E,IAAIyC,EAAU,GAAGJ,QACbC,EAAkB5D,SAAQ+D,GAAW,wBAAwBH,EAAkBI,KAAK,WACpFH,EAAqB7D,SAAQ+D,GAAW,4BAA4BF,EAAqBG,KAAK,WAC9FF,EAAQ9D,SAAQ+D,GAAW,6BAA6BD,EAAQE,KAAK,aACzEzC,MAAMwC,GACN7K,EAAWkD,MAAQ0H,EAAQ9D,QAAU6D,EAAqB7D,OACtD,6BAA6B6D,EAAqB7D,OAAS,+BAA+B6D,EAAqBG,KAAK,cAAgB,KAAKF,EAAQ9D,OAAS,kBAAkB8D,EAAQE,KAAK,YAAc,KACvM,GACJrE,IACA9G,GACF,CAAE,MAAO4I,GACPC,QAAQD,MAAM,+BAAgCA,GAC9C,IAAIwC,EAAe,oCACA,iBAAfxC,EAAMyC,KACRD,GAAgB,qEACPxC,EAAMN,WACf8C,GAAgB,cAAcxC,EAAMN,SAASG,KAAKG,OAAS,uBAE7DF,MAAM0C,EACR,CAAE,QACA/L,EAAekE,OAAQ,CACzB,CA/BA,MAFEmF,MAAM,wCAiCR,EAGIvH,EAA8BmJ,IAClCjJ,EAAqBkC,MAAQ+G,EAAMC,OAAOC,MAAM,GAChD5I,EAAqB2B,MAAQ,EAAE,EAG3BnC,EAA2BgH,UAC/B,GAAK/G,EAAqBkC,MAA1B,CAIAvC,EAAoBuC,OAAQ,EAC5B,IACE,MAAMkH,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQtJ,EAAqBkC,OAC7C,MAAM+E,QAAiBC,GAAAA,EAAMC,KAAK,sCAAuCiC,EAAU,CACjFG,QAAS,CAAE,eAAgB,uBAC3BC,QAAS,OAEL,QAAEC,EAAO,uBAAEQ,EAAsB,yBAAEC,EAAwB,QAAEN,GAAY3C,EAASG,KACxF,IAAIyC,EAAU,KAAKJ,QACfQ,EAAuBnE,SACzB+D,GAAW,6BAA6BI,EAAuBH,KAAK,WAElEI,EAAyBpE,SAC3B+D,GAAW,gCAAgCK,EAAyBJ,KAAK,WAEvEF,EAAQ9D,SACV+D,GAAW,6BAA6BD,EAAQE,KAAK,aAEvDzC,MAAMwC,GACNtJ,EAAqB2B,MAAQ0H,EAAQ9D,QAAUoE,EAAyBpE,OACpE,6BAA6BoE,EAAyBpE,OAAS,mCAAmCoE,EAAyBJ,KAAK,cAAgB,KAAKF,EAAQ9D,OAAS,kBAAkB8D,EAAQE,KAAK,YAAc,KACnN,GACJrE,IACAvF,GACF,CAAE,MAAOqH,GACPC,QAAQD,MAAM,2CAA4CA,GAC1D,IAAIwC,EAAe,6CACA,iBAAfxC,EAAMyC,KACRD,GAAgB,qEACPxC,EAAMN,WACf8C,GAAgB,cAAcxC,EAAMN,SAASG,KAAKG,OAAS,uBAE7DF,MAAM0C,EACR,CAAE,QACApK,EAAoBuC,OAAQ,CAC9B,CArCA,MAFEmF,MAAM,wDAuCR,EAGIhD,EAAuBb,IAC3B,MAAMD,EAAWD,EAAWpB,MAAMsB,GAC5B2G,EAAqBnG,EAAqB9B,MAAMoG,MAAKC,GAAKA,EAAE/G,SAAW+B,EAASa,iBAClF+F,IACF5G,EAASO,cAAgBqG,EAAmB1I,GAC5C8B,EAASE,eAAiB0G,EAAmBtI,OAC7C2C,EAAuBhB,GACzB,EAGIO,EAAqBP,IACzB,MAAMD,EAAWD,EAAWpB,MAAMsB,GAC5B2G,EAAqBnG,EAAqB9B,MAAMoG,MAAKC,GAAKA,EAAE9G,KAAO8B,EAASO,gBAC9EqG,IACF5G,EAASa,eAAiB+F,EAAmB3I,OAC7C+B,EAASE,eAAiB0G,EAAmBtI,OAC7C2C,EAAuBhB,GACzB,EAGII,EAAwBJ,IAC5B,MAAMD,EAAWD,EAAWpB,MAAMsB,GAClC,IAAKD,EAASE,eAAgB,OAC9B,MAAM0G,EAAqBnG,EAAqB9B,MAAMoG,MAAKC,GAAKA,EAAE1G,OAAOuI,cAAcC,SAAS9G,EAASE,eAAe2G,iBACpHD,GACF5G,EAASO,cAAgBqG,EAAmB1I,GAC5C8B,EAASa,eAAiB+F,EAAmB3I,OAC7CgD,EAAuBhB,IAEvBD,EAASO,cAAgB,IAC3B,EAGIkC,EAAkB/B,IACtBjD,EAAYkB,OAAQ,EACpBX,EAASW,MAAQ,IAAK+B,GACtBwE,IAA6B6B,MAAK,IAAMnC,KAA2B,EAG/DhH,EAAqB4F,UACzB,UACQG,GAAAA,EAAMqD,IAAI,wBAAwBhJ,EAASW,MAAMT,KAAMF,EAASW,OACtEmF,MAAM,sCACN5B,IACAzC,GACF,CAAE,MAAOuE,GACPC,QAAQD,MAAM,gCAAiCA,GAC/CF,MAAM,+BACR,GAGIrE,EAAkBA,KACtBhC,EAAYkB,OAAQ,EACpBoF,IACA7B,GAAoB,EAGhB6B,EAAqBA,KACzB/F,EAASW,MAAQ,CAAET,GAAI,KAAMD,OAAQ,GAAIK,OAAQ,GAAII,uBAAuB,EAAOG,cAAe,GAAIK,eAAgB,GAAIV,cAAe,GAAIa,aAAc,MAC3JU,EAAWpB,MAAQ,EAAE,EAGjB6C,EAAkBA,KACtBzB,EAAWpB,MAAMyG,KAAK,CAAE7E,cAAe,KAAMS,SAAU,EAAGG,cAAe,EAAGC,WAAY,EAAGP,eAAgB,GAAIX,eAAgB,IAAK,EAGhImB,EAAmBmC,UACvB,MAAMxD,EAAWD,EAAWpB,MAAMsB,GAClC,GAAID,EAAS9B,GACX,UACQyF,GAAAA,EAAMsD,OAAO,kCAAkCjH,EAAS9B,MAC9D4F,MAAM,oCACR,CAAE,MAAOE,GACPC,QAAQD,MAAM,8BAA+BA,GAC7CF,MAAM,mCACR,CAEF/D,EAAWpB,MAAMuI,OAAOjH,EAAO,EAAE,EAG7BgB,EAA0BhB,IAC9B,MAAMD,EAAWD,EAAWpB,MAAMsB,GAC5BjC,EAAWyC,EAAqB9B,MAAMoG,MAAKC,GAAKA,EAAE9G,KAAO8B,EAASO,gBACpEvC,GACFgC,EAASmB,cAAgBnD,EAASkB,eAClCc,EAASoB,WAAapB,EAASgB,SAAWhB,EAASmB,gBAEnDnB,EAASmB,cAAgB,EACzBnB,EAASoB,WAAa,EACxB,EAGIuB,EAAmBa,UACvB,GAAI2D,QAAQ,uDACV,UACQxD,GAAAA,EAAMsD,OAAO,wBAAwBG,KAC3CtD,MAAM,oCACNxB,EAAU3D,MAAQ2D,EAAU3D,MAAM0I,QAAO3G,GAAQA,EAAKxC,KAAOkJ,IAC7DvE,EAAelE,OAAS,CAC1B,CAAE,MAAOqF,GACPC,QAAQD,MAAM,8BAA+BA,GAC7CF,MAAM,mCACR,CACF,EAGIzB,EAAiBmB,UACrB,IACE,MAAME,QAAiBC,GAAAA,EAAMW,IAAI,uBAAwB,CACvDH,OAAQ,CAAEf,OAAQ,EAAGnB,MAAO,IAAOmC,cAAevC,EAAalD,MAAO0F,cAAetC,EAAapD,SAE9F2I,EAAiB5D,EAASG,KAAKvB,UAC/BiF,EAAgB,CACpB,CAAC,sBACD,CAAC,SAAU,SAAU,iBAAkB,kBAAmB,mBAAoB,kBAAmB,mBAC9FD,EAAezC,KAAInE,GAAQ,CAC5BA,EAAKzC,OACLyC,EAAKpC,OACLoC,EAAK7B,eAAiB,GACtB6B,EAAKxB,gBAAkB,GACvBwB,EAAKlC,eAAiB,GACtBkC,EAAKhC,sBAAwB,KAAO,KACd,OAAtBgC,EAAKrB,aAAwBqB,EAAKrB,aAAe,OAG/CmI,EAAYC,GAAAA,GAAWC,aAAaH,GACpCI,EAAWF,GAAAA,GAAWG,WAC5BH,GAAAA,GAAWI,kBAAkBF,EAAUH,EAAW,aAClDC,GAAAA,GAAeE,EAAU,uBAAsB,IAAIG,MAAOC,cAAcC,MAAM,EAAG,WACnF,CAAE,MAAOhE,GACPC,QAAQD,MAAM,6BAA8BA,GAC5CF,MAAM,sDACR,GAGIjI,EAAgBA,KACpBoM,UAAUC,UAAUC,UAAU1M,EAAWkD,OAAOoI,MAAK,IAAMjD,MAAM,sCAAqC,EAGlG5G,EAA0BA,KAC9B+K,UAAUC,UAAUC,UAAUnL,EAAqB2B,OAAOoI,MAAK,IAAMjD,MAAM,sCAAqC,EAG5GvJ,EAAgBA,KACpBwJ,IACAzB,EAAU3D,MAAQ,GAClBkD,EAAalD,MAAQ,GACrBoD,EAAapD,MAAQ,GACrBkE,EAAelE,MAAQ,EACvByE,EAAOzE,MAAQ,EACfvD,IACAuB,GAAsB,EAGlByF,EAAgBA,KACpBP,EAAalD,MAAQ,GACrBoD,EAAapD,MAAQ,GACrB2D,EAAU3D,MAAQ,GAClBkE,EAAelE,MAAQ,EACvByE,EAAOzE,MAAQ,CAAC,EAGZvD,EAAmBA,KACvBiI,EAAW1E,MAAQ,KACnBlD,EAAWkD,MAAQ,GACf2E,EAAS3E,QAAO2E,EAAS3E,MAAMA,MAAQ,GAAE,EAGzChC,EAAuBA,KAC3BF,EAAqBkC,MAAQ,KAC7B3B,EAAqB2B,MAAQ,GACzB4E,EAAmB5E,QAAO4E,EAAmB5E,MAAMA,MAAQ,GAAE,EAG7De,EAAgBA,KACpBqE,IACAtG,EAAYkB,OAAQ,CAAK,EAGrBpD,EAAwBA,KAC5B,MAAM6M,EAAa,6rBAObC,EAAO,IAAIC,KAAK,CAACF,GAAa,CAAEtO,KAAM,4BACtCyO,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOC,IAAIC,gBAAgBP,GAChCE,EAAKM,aAAa,WAAY,iCAC9BL,SAASM,KAAKC,YAAYR,GAC1BA,EAAKS,QACLR,SAASM,KAAKG,YAAYV,EAAK,EAG3BzL,EAAkCA,KACtC,MAAMsL,EAAa,suBASbC,EAAO,IAAIC,KAAK,CAACF,GAAa,CAAEtO,KAAM,4BACtCyO,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOC,IAAIC,gBAAgBP,GAChCE,EAAKM,aAAa,WAAY,yCAC9BL,SAASM,KAAKC,YAAYR,GAC1BA,EAAKS,QACLR,SAASM,KAAKG,YAAYV,EAAK,EAI3B/M,EAAqBA,KACzBM,EAAa6C,OAAQ,CAAI,EAGrBzC,EAAcA,KAClBJ,EAAa6C,OAAQ,CAAK,EAGtB5B,GAA+BA,KACnCI,EAAuBwB,OAAQ,CAAI,EAG/BrB,GAAwBA,KAC5BH,EAAuBwB,OAAQ,CAAK,EAKtC,OAFAuG,IAEO,CACLlH,WACAsE,YACAvC,aACAU,uBACAhD,cACAoE,eACAE,eACAc,iBACAO,SACAnB,QACAoB,aACA5G,uBACAhB,aACAuB,uBACAlB,eACAqB,yBACA1C,iBACA2B,sBACAkH,WACAC,qBACA1F,gBACAqE,qBACA0C,2BACAM,6BACAzD,oBACAqB,qBACA/H,YACAE,cACAsB,6BACAC,2BACAsE,sBACAN,oBACAH,uBACAoC,iBACA7E,qBACA6B,kBACAsE,qBACAvC,kBACAH,mBACAJ,yBACA0B,mBACAN,iBACAxG,gBACAqB,0BACA3C,gBACA6H,gBACAhH,mBACAuB,uBACA+C,gBACAnE,wBACAuB,kCACAtB,qBACAU,cACAa,gCACAO,yBAEJ,EACA4L,MAAO,CACL,cAAe,SAASC,GAClBA,GAAQC,KAAKxE,0BACnB,I,WCzwBF,MAAMyE,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAASC,IAAQ,CAAC,YAAY,qBAEzF,S","sources":["webpack://frontend/./src/views/GestionProductosMateriales.vue","webpack://frontend/./src/views/GestionProductosMateriales.vue?221d"],"sourcesContent":["<template>\r\n  <div class=\"gestion-productos-materiales\">\r\n    <h1>Gestión de Productos y Materiales</h1>\r\n    \r\n    <!-- Botones superiores -->\r\n    <div class=\"top-buttons\">\r\n      <!-- <button @click=\"volverAlMenu\" class=\"btn btn-secondary\">Volver al Menú</button>-->\r\n      <button @click=\"limpiarPagina\" class=\"btn btn-warning\">Limpiar Página</button>\r\n    </div>\r\n\r\n    <!-- Subida de Archivo CSV -->\r\n    <section class=\"carga-csv\">\r\n      <h2>Cargar Productos desde archivo .CSV</h2>\r\n      <!-- Indicador de carga -->\r\n      <div v-if=\"isLoadingCarga\" class=\"spinner-container\">\r\n        <div class=\"spinner\"></div>\r\n        <p>Procesando archivo CSV, por favor espera...</p>\r\n      </div>\r\n      <!-- Input para subir archivo -->\r\n      <div class=\"carga-input\">\r\n        <input type=\"file\" accept=\".csv\" @change=\"cargarCsv\" ref=\"inputCsv\" />\r\n        <button @click=\"procesarCsv\" :disabled=\"isLoadingCarga\">Subir</button>\r\n        <button @click=\"limpiarSesionCsv\" :disabled=\"isLoadingCarga\" class=\"btn-warning\">Limpiar Sesión</button>\r\n      </div>\r\n      <!-- Enlaces para descargar plantilla e instructivo -->\r\n      <div class=\"carga-links\">\r\n        <a @click=\"descargarPlantillaCSV\" class=\"link-descarga\">📥 Descargar Plantilla CSV</a>\r\n        <a @click=\"mostrarInstructivo\" class=\"link-instructivo\">📖 Instructivo de Uso</a>\r\n      </div>\r\n      <!-- Mostrar errores -->\r\n      <div v-if=\"erroresCsv\" class=\"error-container\">\r\n        <h3>Errores Detectados</h3>\r\n        <textarea readonly v-model=\"erroresCsv\"></textarea>\r\n        <button @click=\"copiarErrores\">Copiar errores</button>\r\n      </div>\r\n      <!-- Modal para el instructivo -->\r\n      <div v-if=\"mostrarModal\" class=\"modal-instructivo\">\r\n        <div class=\"modal-contenido\">\r\n          <h3>📄 Instructivo de Uso para Carga de Productos</h3>\r\n          <p>1️⃣ <strong>Código</strong>: Código único del producto. No debe repetirse.</p>\r\n          <p>2️⃣ <strong>Nombre</strong>: Nombre del producto.</p>\r\n          <p>3️⃣ <strong>Peso Total / Unidad</strong>: Obligatorio solo para productos Base.</p>\r\n          <p>4️⃣ <strong>Código de Barras</strong>: Código de barras opcional.</p>\r\n          <p>5️⃣ <strong>Es Producto Compuesto</strong>: \"Sí\" si el producto es compuesto, \"No\" si es producto Base.</p>\r\n          <p>6️⃣ <strong>Stock Mínimo</strong>: Cantidad mínima de inventario (opcional, número entero o decimal).</p>\r\n          <p>7️⃣ <strong>Cantidad Productos</strong>: Si el producto es Base, se coloca 0. Si es compuesto, indicar cuántos productos lo conforman.</p>\r\n          <p>8️⃣ <strong>Código y Cantidad de Productos Compuestos</strong>: Se deben indicar los códigos y cantidades de los productos compuestos.</p>\r\n          <button @click=\"cerrarModal\" class=\"btn-cerrar\">Cerrar</button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Nueva sección: Actualización Masiva de Productos -->\r\n    <section class=\"carga-csv\">\r\n      <h2>Actualización Masiva de Productos desde archivo .CSV</h2>\r\n      <!-- Indicador de carga -->\r\n      <div v-if=\"isLoadingActualizar\" class=\"spinner-container\">\r\n        <div class=\"spinner\"></div>\r\n        <p>Procesando archivo CSV de actualización, por favor espera...</p>\r\n      </div>\r\n      <!-- Input para subir archivo -->\r\n      <div class=\"carga-input\">\r\n        <input type=\"file\" accept=\".csv\" @change=\"cargarArchivoActualizarCsv\" ref=\"inputActualizarCsv\" />\r\n        <button @click=\"procesarActualizacionCsv\" :disabled=\"!archivoActualizarCsv || isLoadingActualizar\">Subir</button>\r\n        <button @click=\"limpiarActualizarCsv\" :disabled=\"!archivoActualizarCsv || isLoadingActualizar\" class=\"btn-warning\">Limpiar Sesión</button>\r\n      </div>\r\n      <!-- Enlaces para descargar plantilla e instructivo -->\r\n      <div class=\"carga-links\">\r\n        <a @click=\"descargarPlantillaActualizarCSV\" class=\"link-descarga\">📥 Descargar Plantilla CSV</a>\r\n        <a @click=\"mostrarInstructivoActualizar\" class=\"link-instructivo\">📖 Instructivo de Uso</a>\r\n      </div>\r\n      <!-- Mostrar errores -->\r\n      <div v-if=\"erroresActualizarCsv\" class=\"error-container\">\r\n        <h3>Errores Detectados</h3>\r\n        <textarea readonly v-model=\"erroresActualizarCsv\"></textarea>\r\n        <button @click=\"copiarErroresActualizar\">Copiar errores</button>\r\n      </div>\r\n      <!-- Modal para el instructivo de actualización -->\r\n      <div v-if=\"mostrarModalActualizar\" class=\"modal-instructivo\">\r\n        <div class=\"modal-contenido\">\r\n          <h3>📄 Instructivo para Actualizar Productos desde CSV</h3>\r\n          <p>1️⃣ <strong>Código</strong>: Código del producto existente (obligatorio).</p>\r\n          <p>2️⃣ <strong>Nombre</strong>: Nuevo nombre del producto (debe ser único).</p>\r\n          <p>3️⃣ <strong>Peso Total (gr)</strong>: Peso total para productos base.</p>\r\n          <p>4️⃣ <strong>Peso Unidad (gr)</strong>: Peso por unidad para productos base.</p>\r\n          <p>5️⃣ <strong>Código de Barras</strong>: Código de barras (opcional).</p>\r\n          <p>6️⃣ <strong>Es Producto Compuesto</strong>: \"Sí\" o \"No\".</p>\r\n          <p>7️⃣ <strong>Stock Mínimo</strong>: Número entero o vacío (opcional).</p>\r\n          <p>8️⃣ <strong>Cantidad Productos</strong>: Número de productos base para compuestos.</p>\r\n          <p>9️⃣ <strong>Código1, Cantidad1, etc.</strong>: Materiales para productos compuestos.</p>\r\n          <p>📝 <strong>Notas</strong>:</p>\r\n          <p>- Los campos vacíos no modificarán los valores existentes.</p>\r\n          <p>- Los productos base deben existir previamente en el sistema.</p>\r\n          <p>- El campo nombre debe ser único en el sistema.</p>\r\n          <button @click=\"cerrarModalActualizar\" class=\"btn-cerrar\">Cerrar</button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    \r\n    <!-- Formulario para Crear/Editar Producto -->\r\n    <section class=\"form-section\">\r\n      <h2>{{ modoEdicion ? 'Editar Producto' : 'Crear Producto' }}</h2>\r\n      <form @submit.prevent=\"modoEdicion ? actualizarProducto() : crearProducto()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"codigo\">Código del Producto:</label>\r\n          <input v-model=\"producto.codigo\" id=\"codigo\" required :disabled=\"modoEdicion\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"nombre\">Nombre del Producto:</label>\r\n          <input v-model=\"producto.nombre\" id=\"nombre\" required />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"codigo_barras\">Código de Barras:</label>\r\n          <input v-model=\"producto.codigo_barras\" id=\"codigo_barras\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Tipo de Producto:</label>\r\n          <select v-model=\"producto.es_producto_compuesto\">\r\n            <option :value=\"false\">Base</option>\r\n            <option :value=\"true\">Compuesto</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"peso_total\">Peso Total en Gramos:</label>\r\n          <input v-model.number=\"producto.peso_total_gr\" id=\"peso_total\" type=\"number\" step=\"0.01\"\r\n            :required=\"!producto.es_producto_compuesto\" :disabled=\"producto.es_producto_compuesto\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"peso_unidad\">Peso por Unidad en Gramos:</label>\r\n          <input v-model.number=\"producto.peso_unidad_gr\" id=\"peso_unidad\" type=\"number\" step=\"0.01\"\r\n            :required=\"!producto.es_producto_compuesto\" :disabled=\"producto.es_producto_compuesto\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"stock_minimo\">Stock Mínimo:</label>\r\n          <input v-model.number=\"producto.stock_minimo\" id=\"stock_minimo\" type=\"number\" min=\"0\" />\r\n        </div>\r\n        <div class=\"form-actions\">\r\n          <button v-if=\"!modoEdicion\" type=\"submit\">Crear Producto</button>\r\n          <template v-else>\r\n            <button type=\"submit\">Guardar Producto</button>\r\n            <button type=\"button\" @click=\"cancelarEdicion\">Cancelar</button>\r\n            <button type=\"button\" @click=\"limpiarSesion\" class=\"btn-warning\">Limpiar Sesión</button>\r\n          </template>\r\n        </div>\r\n      </form>\r\n    </section>\r\n\r\n    <!-- Materiales del Producto Compuesto -->\r\n    <section v-if=\"producto.es_producto_compuesto && producto.id\" class=\"materiales-section\">\r\n      <h2>Materiales del Producto</h2>\r\n      <div class=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Producto Base</th>\r\n              <th>Cantidad</th>\r\n              <th>Peso Unitario (g)</th>\r\n              <th>Peso Total (g)</th>\r\n              <th>Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(material, index) in materiales\" :key=\"index\">\r\n              <td>\r\n                <input type=\"text\" v-model=\"material.nombreDigitado\" placeholder=\"Buscar por nombre\" @input=\"sincronizarPorNombre(index)\" />\r\n                <select v-model=\"material.producto_base\" @change=\"sincronizarCodigo(index)\">\r\n                  <option :value=\"null\" disabled>Seleccione un producto</option>\r\n                  <option v-for=\"prod in productosDisponibles\" :key=\"prod.id\" :value=\"prod.id\">\r\n                    {{ prod.codigo }} - {{ prod.nombre }}\r\n                  </option>\r\n                </select>\r\n                <input type=\"text\" v-model=\"material.codigoDigitado\" placeholder=\"Ingrese código del material\" @input=\"sincronizarSelector(index)\" />\r\n              </td>\r\n              <td>\r\n                <input v-model.number=\"material.cantidad\" type=\"number\" step=\"0.01\" min=\"0.01\" required @input=\"actualizarPesoMaterial(index)\" />\r\n              </td>\r\n              <td>{{ material.peso_unitario }}</td>\r\n              <td>{{ material.peso_total }}</td>\r\n              <td>\r\n                <button @click.prevent=\"eliminarMaterial(index)\">Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"materiales-actions\">\r\n        <button @click.prevent=\"agregarMaterial\">Agregar Material</button>\r\n        <button @click.prevent=\"guardarMateriales\">Guardar Materiales</button>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Consulta de Productos -->\r\n    <section class=\"consulta-productos\">\r\n      <h2>Consulta de Productos Creados</h2>\r\n      <div class=\"filters\">\r\n        <div class=\"filter-group\">\r\n          <label for=\"buscarCodigo\">Buscar por Código:</label>\r\n          <input v-model=\"filtroCodigo\" id=\"buscarCodigo\" placeholder=\"Ingrese código de producto\" />\r\n        </div>\r\n        <div class=\"filter-group\">\r\n          <label for=\"buscarNombre\">Buscar por Nombre:</label>\r\n          <input v-model=\"filtroNombre\" id=\"buscarNombre\" placeholder=\"Ingrese nombre o parte del nombre\" />\r\n        </div>\r\n        <div class=\"filter-group\">\r\n          <label for=\"limit\">Mostrar:</label>\r\n          <select v-model=\"limit\" id=\"limit\" @change=\"consultarProductos\">\r\n            <option value=\"10\">10</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"50\">50</option>\r\n            <option value=\"100\">100</option>\r\n            <option value=\"0\">Todos</option>\r\n          </select>\r\n          <span> productos</span>\r\n        </div>\r\n        <div class=\"filter-actions\">\r\n          <button @click=\"consultarProductos\">Consultar Productos</button>\r\n          <button @click=\"limpiarCampos\" class=\"btn-warning\">Limpiar Campos</button>\r\n          <button @click=\"exportarAExcel\" class=\"btn-export\">Exportar a Excel</button>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"productos.length\" class=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Código</th>\r\n              <th>Nombre</th>\r\n              <th>Peso Total (g)</th>\r\n              <th>Peso Unidad (g)</th>\r\n              <th>Código de Barras</th>\r\n              <th>Prod. Compuesto</th>\r\n              <th>Stock Mínimo</th>\r\n              <th>Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"prod in productos\" :key=\"prod.id\">\r\n              <td>{{ prod.codigo }}</td>\r\n              <td>{{ prod.nombre }}</td>\r\n              <td>{{ prod.peso_total_gr }}</td>\r\n              <td>{{ prod.peso_unidad_gr }}</td>\r\n              <td>{{ prod.codigo_barras }}</td>\r\n              <td>{{ prod.es_producto_compuesto ? 'Sí' : 'No' }}</td>\r\n              <td>{{ prod.stock_minimo !== null ? prod.stock_minimo : '-' }}</td>\r\n              <td>\r\n                <button @click=\"editarProducto(prod)\">Editar</button>\r\n                <button @click=\"eliminarProducto(prod.id)\">Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button v-if=\"productos.length < totalProductos\" @click=\"cargarMasProductos\">Cargar más productos</button>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\nimport axios from '@/api/axios';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport default {\r\nname: 'GestionProductosMateriales',\r\nsetup() {\r\n  const store = useStore();\r\n  const router = useRouter();\r\n\r\n  // Referencias\r\n  const producto = ref({ id: null, codigo: '', nombre: '', es_producto_compuesto: false, stock_minimo: null });\r\n  const productos = ref([]);\r\n  const materiales = ref([]);\r\n  const productosDisponibles = ref([]);\r\n  const modoEdicion = ref(false);\r\n  const filtroCodigo = ref('');\r\n  const filtroNombre = ref('');\r\n  const totalProductos = ref(0);\r\n  const offset = ref(0);\r\n  const limit = ref(50);\r\n  const archivoCsv = ref(null);\r\n  const archivoActualizarCsv = ref(null);\r\n  const erroresCsv = ref('');\r\n  const erroresActualizarCsv = ref('');\r\n  const mostrarModal = ref(false);\r\n  const mostrarModalActualizar = ref(false);\r\n  const isLoadingCarga = ref(false);\r\n  const isLoadingActualizar = ref(false);\r\n  const inputCsv = ref(null);\r\n  const inputActualizarCsv = ref(null);\r\n\r\n  const crearProducto = async () => {\r\n    try {\r\n      const payload = { ...producto.value };\r\n      if (payload.es_producto_compuesto) {\r\n        delete payload.peso_total_gr;\r\n        delete payload.peso_unidad_gr;\r\n      }\r\n      const response = await axios.post('/inventory/productos', payload);\r\n      producto.value.id = response.data.id;\r\n      alert('Producto creado correctamente');\r\n      resetearFormulario();\r\n      consultarProductos();\r\n    } catch (error) {\r\n      console.error('Error al crear producto:', error);\r\n      alert(error.response?.data?.error || 'Error al crear producto');\r\n    }\r\n  };\r\n\r\n  const consultarProductos = async () => {\r\n    try {\r\n      const limiteConsulta = limit.value === 0 ? 10000 : limit.value;\r\n      const params = {\r\n        offset: offset.value,\r\n        limit: limiteConsulta,\r\n        search_codigo: filtroCodigo.value || '',\r\n        search_nombre: filtroNombre.value || ''\r\n      };\r\n      const response = await axios.get('/inventory/productos', { params });\r\n      productos.value = response.data.productos.sort((a, b) => a.codigo.localeCompare(b.codigo));\r\n      totalProductos.value = response.data.total;\r\n    } catch (error) {\r\n      console.error('Error al cargar productos:', error);\r\n      alert('Ocurrió un error al consultar los productos.');\r\n    }\r\n  };\r\n\r\n  const cargarMaterialesProducto = async () => {\r\n    if (!producto.value.id || !producto.value.es_producto_compuesto) return;\r\n    try {\r\n      const response = await axios.get(`/inventory/materiales-producto/${producto.value.id}`);\r\n      materiales.value = response.data.materiales.map(material => {\r\n        const productoBase = productosDisponibles.value.find(p => p.id === material.producto_base_id);\r\n        return {\r\n          id: material.id,\r\n          producto_base: material.producto_base_id,\r\n          codigoDigitado: productoBase ? productoBase.codigo : '',\r\n          nombreDigitado: productoBase ? productoBase.nombre : '',\r\n          cantidad: material.cantidad,\r\n          peso_unitario: productoBase ? productoBase.peso_unidad_gr : 0,\r\n          peso_total: material.cantidad * (productoBase ? productoBase.peso_unidad_gr : 0)\r\n        };\r\n      });\r\n    } catch (error) {\r\n      console.error('Error al cargar materiales:', error);\r\n      alert('No se pudieron cargar los materiales del producto compuesto.');\r\n    }\r\n  };\r\n\r\n  const cargarProductosDisponibles = async () => {\r\n    try {\r\n      const response = await axios.get('/inventory/productos', { params: { limit: 500 } });\r\n      productosDisponibles.value = response.data.productos.sort((a, b) => a.codigo.localeCompare(b.codigo));\r\n    } catch (error) {\r\n      console.error('Error al cargar productos disponibles:', error);\r\n      if (error.response?.status === 401) {\r\n        router.push('/login');\r\n      } else {\r\n        alert('No se pudieron cargar los productos disponibles.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const guardarMateriales = async () => {\r\n    try {\r\n      if (materiales.value.some(m => !m.producto_base || isNaN(m.cantidad) || m.cantidad <= 0)) {\r\n        alert('Todos los materiales deben tener un producto base seleccionado y una cantidad válida mayor a 0.');\r\n        return;\r\n      }\r\n      const payload = {\r\n        producto_compuesto_id: producto.value.id,\r\n        materiales: materiales.value.map(m => ({\r\n          producto_base_id: m.producto_base,\r\n          cantidad: Number(m.cantidad)\r\n        }))\r\n      };\r\n      await axios.post('/inventory/materiales-producto', payload);\r\n      alert('Materiales guardados correctamente');\r\n      cargarMaterialesProducto();\r\n    } catch (error) {\r\n      console.error('Error al guardar materiales:', error);\r\n      alert('Hubo un problema guardando los materiales.');\r\n    }\r\n  };\r\n\r\n  const cargarMasProductos = async () => {\r\n    try {\r\n      offset.value += limit.value;\r\n      const response = await axios.get('/inventory/productos', {\r\n        params: { offset: offset.value, limit: limit.value }\r\n      });\r\n      productos.value = [...productos.value, ...response.data.productos.sort((a, b) => a.codigo.localeCompare(b.codigo))];\r\n    } catch (error) {\r\n      console.error('Error al cargar más productos:', error);\r\n    }\r\n  };\r\n\r\n  const cargarCsv = (event) => {\r\n    archivoCsv.value = event.target.files[0];\r\n    erroresCsv.value = '';\r\n  };\r\n\r\n  const procesarCsv = async () => {\r\n    if (!archivoCsv.value) {\r\n      alert('Por favor, selecciona un archivo CSV.');\r\n      return;\r\n    }\r\n    isLoadingCarga.value = true;\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', archivoCsv.value);\r\n      const response = await axios.post('/inventory/productos/csv', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n        timeout: 60000\r\n      });\r\n      const { message, productos_creados, productos_duplicados, errores } = response.data;\r\n      let mensaje = `${message}\\n\\n`;\r\n      if (productos_creados.length) mensaje += `✔ Productos creados: ${productos_creados.join(', ')}\\n`;\r\n      if (productos_duplicados.length) mensaje += `⚠️ Productos duplicados: ${productos_duplicados.join(', ')}\\n`;\r\n      if (errores.length) mensaje += `🛑 Errores detectados:\\n- ${errores.join('\\n- ')}\\n`;\r\n      alert(mensaje);\r\n      erroresCsv.value = errores.length || productos_duplicados.length\r\n        ? `⚠️ Reporte de errores:\\n\\n${productos_duplicados.length ? `🔹 Productos duplicados:\\n- ${productos_duplicados.join('\\n- ')}\\n\\n` : ''}${errores.length ? `🛑 Errores:\\n- ${errores.join('\\n- ')}\\n` : ''}`\r\n        : '';\r\n      consultarProductos();\r\n      limpiarSesionCsv();\r\n    } catch (error) {\r\n      console.error('Error al cargar archivo CSV:', error);\r\n      let mensajeError = '❌ Error al cargar el archivo CSV.';\r\n      if (error.code === 'ECONNABORTED') {\r\n        mensajeError += ' La solicitud tardó demasiado. Intenta con un archivo más pequeño.';\r\n      } else if (error.response) {\r\n        mensajeError += ` Detalles: ${error.response.data.error || 'Error desconocido'}`;\r\n      }\r\n      alert(mensajeError);\r\n    } finally {\r\n      isLoadingCarga.value = false;\r\n    }\r\n  };\r\n\r\n  const cargarArchivoActualizarCsv = (event) => {\r\n    archivoActualizarCsv.value = event.target.files[0];\r\n    erroresActualizarCsv.value = '';\r\n  };\r\n\r\n  const procesarActualizacionCsv = async () => {\r\n    if (!archivoActualizarCsv.value) {\r\n      alert('Por favor, selecciona un archivo CSV para actualizar.');\r\n      return;\r\n    }\r\n    isLoadingActualizar.value = true;\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', archivoActualizarCsv.value);\r\n      const response = await axios.post('/inventory/productos/actualizar-csv', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n        timeout: 60000\r\n      });\r\n      const { message, productos_actualizados, productos_no_encontrados, errores } = response.data;\r\n      let mensaje = `✅ ${message}\\n\\n`;\r\n      if (productos_actualizados.length) {\r\n        mensaje += `✔ Productos actualizados: ${productos_actualizados.join(', ')}\\n`;\r\n      }\r\n      if (productos_no_encontrados.length) {\r\n        mensaje += `⚠️ Productos no encontrados: ${productos_no_encontrados.join(', ')}\\n`;\r\n      }\r\n      if (errores.length) {\r\n        mensaje += `🛑 Errores detectados:\\n- ${errores.join('\\n- ')}\\n`;\r\n      }\r\n      alert(mensaje);\r\n      erroresActualizarCsv.value = errores.length || productos_no_encontrados.length\r\n        ? `⚠️ Reporte de errores:\\n\\n${productos_no_encontrados.length ? `🔹 Productos no encontrados:\\n- ${productos_no_encontrados.join('\\n- ')}\\n\\n` : ''}${errores.length ? `🛑 Errores:\\n- ${errores.join('\\n- ')}\\n` : ''}`\r\n        : '';\r\n      consultarProductos();\r\n      limpiarActualizarCsv();\r\n    } catch (error) {\r\n      console.error('Error al actualizar productos desde CSV:', error);\r\n      let mensajeError = '❌ Error al actualizar productos desde CSV.';\r\n      if (error.code === 'ECONNABORTED') {\r\n        mensajeError += ' La solicitud tardó demasiado. Intenta con un archivo más pequeño.';\r\n      } else if (error.response) {\r\n        mensajeError += ` Detalles: ${error.response.data.error || 'Error desconocido'}`;\r\n      }\r\n      alert(mensajeError);\r\n    } finally {\r\n      isLoadingActualizar.value = false;\r\n    }\r\n  };\r\n\r\n  const sincronizarSelector = (index) => {\r\n    const material = materiales.value[index];\r\n    const productoEncontrado = productosDisponibles.value.find(p => p.codigo === material.codigoDigitado);\r\n    if (productoEncontrado) {\r\n      material.producto_base = productoEncontrado.id;\r\n      material.nombreDigitado = productoEncontrado.nombre;\r\n      actualizarPesoMaterial(index);\r\n    }\r\n  };\r\n\r\n  const sincronizarCodigo = (index) => {\r\n    const material = materiales.value[index];\r\n    const productoEncontrado = productosDisponibles.value.find(p => p.id === material.producto_base);\r\n    if (productoEncontrado) {\r\n      material.codigoDigitado = productoEncontrado.codigo;\r\n      material.nombreDigitado = productoEncontrado.nombre;\r\n      actualizarPesoMaterial(index);\r\n    }\r\n  };\r\n\r\n  const sincronizarPorNombre = (index) => {\r\n    const material = materiales.value[index];\r\n    if (!material.nombreDigitado) return;\r\n    const productoEncontrado = productosDisponibles.value.find(p => p.nombre.toLowerCase().includes(material.nombreDigitado.toLowerCase()));\r\n    if (productoEncontrado) {\r\n      material.producto_base = productoEncontrado.id;\r\n      material.codigoDigitado = productoEncontrado.codigo;\r\n      actualizarPesoMaterial(index);\r\n    } else {\r\n      material.producto_base = null;\r\n    }\r\n  };\r\n\r\n  const editarProducto = (prod) => {\r\n    modoEdicion.value = true;\r\n    producto.value = { ...prod };\r\n    cargarProductosDisponibles().then(() => cargarMaterialesProducto());\r\n  };\r\n\r\n  const actualizarProducto = async () => {\r\n    try {\r\n      await axios.put(`/inventory/productos/${producto.value.id}`, producto.value);\r\n      alert('Producto actualizado correctamente');\r\n      consultarProductos();\r\n      cancelarEdicion();\r\n    } catch (error) {\r\n      console.error('Error al actualizar producto:', error);\r\n      alert('Error al actualizar producto');\r\n    }\r\n  };\r\n\r\n  const cancelarEdicion = () => {\r\n    modoEdicion.value = false;\r\n    resetearFormulario();\r\n    consultarProductos();\r\n  };\r\n\r\n  const resetearFormulario = () => {\r\n    producto.value = { id: null, codigo: '', nombre: '', es_producto_compuesto: false, peso_total_gr: '', peso_unidad_gr: '', codigo_barras: '', stock_minimo: null };\r\n    materiales.value = [];\r\n  };\r\n\r\n  const agregarMaterial = () => {\r\n    materiales.value.push({ producto_base: null, cantidad: 1, peso_unitario: 0, peso_total: 0, codigoDigitado: '', nombreDigitado: '' });\r\n  };\r\n\r\n  const eliminarMaterial = async (index) => {\r\n    const material = materiales.value[index];\r\n    if (material.id) {\r\n      try {\r\n        await axios.delete(`/inventory/materiales-producto/${material.id}`);\r\n        alert('Material eliminado correctamente.');\r\n      } catch (error) {\r\n        console.error('Error al eliminar material:', error);\r\n        alert('No se pudo eliminar el material.');\r\n      }\r\n    }\r\n    materiales.value.splice(index, 1);\r\n  };\r\n\r\n  const actualizarPesoMaterial = (index) => {\r\n    const material = materiales.value[index];\r\n    const producto = productosDisponibles.value.find(p => p.id === material.producto_base);\r\n    if (producto) {\r\n      material.peso_unitario = producto.peso_unidad_gr;\r\n      material.peso_total = material.cantidad * material.peso_unitario;\r\n    } else {\r\n      material.peso_unitario = 0;\r\n      material.peso_total = 0;\r\n    }\r\n  };\r\n\r\n  const eliminarProducto = async (productoId) => {\r\n    if (confirm('¿Estás seguro de que deseas eliminar este producto?')) {\r\n      try {\r\n        await axios.delete(`/inventory/productos/${productoId}`);\r\n        alert('Producto eliminado correctamente');\r\n        productos.value = productos.value.filter(prod => prod.id !== productoId);\r\n        totalProductos.value -= 1;\r\n      } catch (error) {\r\n        console.error('Error al eliminar producto:', error);\r\n        alert('No se pudo eliminar el producto.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const exportarAExcel = async () => {\r\n    try {\r\n      const response = await axios.get('/inventory/productos', {\r\n        params: { offset: 0, limit: 10000, search_codigo: filtroCodigo.value, search_nombre: filtroNombre.value }\r\n      });\r\n      const productosTodos = response.data.productos;\r\n      const worksheetData = [\r\n        ['Productos Cargados'],\r\n        ['Código', 'Nombre', 'Peso Total (g)', 'Peso Unidad (g)', 'Código de Barras', 'Prod. Compuesto', 'Stock Mínimo'],\r\n        ...productosTodos.map(prod => [\r\n          prod.codigo,\r\n          prod.nombre,\r\n          prod.peso_total_gr || '',\r\n          prod.peso_unidad_gr || '',\r\n          prod.codigo_barras || '',\r\n          prod.es_producto_compuesto ? 'Sí' : 'No',\r\n          prod.stock_minimo !== null ? prod.stock_minimo : ''\r\n        ])\r\n      ];\r\n      const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, worksheet, 'Productos');\r\n      XLSX.writeFile(workbook, `Productos_Cargados_${new Date().toISOString().slice(0, 10)}.xlsx`);\r\n    } catch (error) {\r\n      console.error('Error al exportar a Excel:', error);\r\n      alert('Ocurrió un error al exportar los productos a Excel.');\r\n    }\r\n  };\r\n\r\n  const copiarErrores = () => {\r\n    navigator.clipboard.writeText(erroresCsv.value).then(() => alert('Errores copiados al portapapeles.'));\r\n  };\r\n\r\n  const copiarErroresActualizar = () => {\r\n    navigator.clipboard.writeText(erroresActualizarCsv.value).then(() => alert('Errores copiados al portapapeles.'));\r\n  };\r\n\r\n  const limpiarPagina = () => {\r\n    resetearFormulario();\r\n    productos.value = [];\r\n    filtroCodigo.value = '';\r\n    filtroNombre.value = '';\r\n    totalProductos.value = 0;\r\n    offset.value = 0;\r\n    limpiarSesionCsv();\r\n    limpiarActualizarCsv();\r\n  };\r\n\r\n  const limpiarCampos = () => {\r\n    filtroCodigo.value = '';\r\n    filtroNombre.value = '';\r\n    productos.value = [];\r\n    totalProductos.value = 0;\r\n    offset.value = 0;\r\n  };\r\n\r\n  const limpiarSesionCsv = () => {\r\n    archivoCsv.value = null;\r\n    erroresCsv.value = '';\r\n    if (inputCsv.value) inputCsv.value.value = '';\r\n  };\r\n\r\n  const limpiarActualizarCsv = () => {\r\n    archivoActualizarCsv.value = null;\r\n    erroresActualizarCsv.value = '';\r\n    if (inputActualizarCsv.value) inputActualizarCsv.value.value = '';\r\n  };\r\n\r\n  const limpiarSesion = () => {\r\n    resetearFormulario();\r\n    modoEdicion.value = false;\r\n  };\r\n\r\n  const descargarPlantillaCSV = () => {\r\n    const csvContent = `# Instructivo: Llene los campos según corresponda.\\n` +\r\n      `# Si \"es_producto_compuesto\" es \"Sí\", debe completar las columnas de \"cantidad_productos\", \"codigo1\", \"cantidad1\", \"codigo2\", etc.\\n` +\r\n      `# Si el producto es Base, se coloca cero 0. Si el producto es compuesto, indicar cuántos productos base lo conforman.\\n` +\r\n      `# \"stock_minimo\" es opcional; déjelo en blanco si no aplica.\\n` +\r\n      `codigo,nombre,peso_total_gr,peso_unidad_gr,codigo_barras,es_producto_compuesto,stock_minimo,cantidad_productos,codigo1,cantidad1,codigo2,cantidad2\\n` +\r\n      `GRA12345678901234,Ejemplo Producto Base,500,50,1234567890123,No,100,0,,,,\\n` +\r\n      `GRA98765432109876,Ejemplo Producto Compuesto,,,9876543210987,Sí,10,2,GRA12345678901234,2,GRA12199905000000,3\\n`;\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.setAttribute('download', 'Plantilla_Carga_Productos.csv');\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const descargarPlantillaActualizarCSV = () => {\r\n    const csvContent = `# Instructivo: Llene los campos para actualizar productos existentes.\\n` +\r\n      `# 'codigo' es obligatorio y debe coincidir con un producto existente.\\n` +\r\n      `# Los demás campos son opcionales; déjelos en blanco para no modificarlos.\\n` +\r\n      `# Si 'es_producto_compuesto' es \"Sí\", complete 'cantidad_productos', 'codigo1', 'cantidad1', etc.\\n` +\r\n      `# Los productos base deben existir.\\n` +\r\n      `# Nota: El código y el nombre deben ser únicos.\\n` +\r\n      `codigo,nombre,peso_total_gr,peso_unidad_gr,codigo_barras,es_producto_compuesto,stock_minimo,cantidad_productos,codigo1,cantidad1,codigo2,cantidad2\\n` +\r\n      `GRA12345678901234,Producto Base Actualizado,600,60,1234567890123,No,150,,,,\\n` +\r\n      `GRA98765432109876,Kit Compuesto Actualizado,,,9876543210987,Sí,20,2,GRA12345678901234,3,GRA12199905000000,4\\n`;\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.setAttribute('download', 'Plantilla_Actualizacion_Productos.csv');\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n\r\n  const mostrarInstructivo = () => {\r\n    mostrarModal.value = true;\r\n  };\r\n\r\n  const cerrarModal = () => {\r\n    mostrarModal.value = false;\r\n  };\r\n\r\n  const mostrarInstructivoActualizar = () => {\r\n    mostrarModalActualizar.value = true;\r\n  };\r\n\r\n  const cerrarModalActualizar = () => {\r\n    mostrarModalActualizar.value = false;\r\n  };\r\n\r\n  cargarProductosDisponibles();\r\n\r\n  return {\r\n    producto,\r\n    productos,\r\n    materiales,\r\n    productosDisponibles,\r\n    modoEdicion,\r\n    filtroCodigo,\r\n    filtroNombre,\r\n    totalProductos,\r\n    offset,\r\n    limit,\r\n    archivoCsv,\r\n    archivoActualizarCsv,\r\n    erroresCsv,\r\n    erroresActualizarCsv,\r\n    mostrarModal,\r\n    mostrarModalActualizar,\r\n    isLoadingCarga,\r\n    isLoadingActualizar,\r\n    inputCsv,\r\n    inputActualizarCsv,\r\n    crearProducto,\r\n    consultarProductos,\r\n    cargarMaterialesProducto,\r\n    cargarProductosDisponibles,\r\n    guardarMateriales,\r\n    cargarMasProductos,\r\n    cargarCsv,\r\n    procesarCsv,\r\n    cargarArchivoActualizarCsv,\r\n    procesarActualizacionCsv,\r\n    sincronizarSelector,\r\n    sincronizarCodigo,\r\n    sincronizarPorNombre,\r\n    editarProducto,\r\n    actualizarProducto,\r\n    cancelarEdicion,\r\n    resetearFormulario,\r\n    agregarMaterial,\r\n    eliminarMaterial,\r\n    actualizarPesoMaterial,\r\n    eliminarProducto,\r\n    exportarAExcel,\r\n    copiarErrores,\r\n    copiarErroresActualizar,\r\n    limpiarPagina,\r\n    limpiarCampos,\r\n    limpiarSesionCsv,\r\n    limpiarActualizarCsv,\r\n    limpiarSesion,\r\n    descargarPlantillaCSV,\r\n    descargarPlantillaActualizarCSV,\r\n    mostrarInstructivo,\r\n    cerrarModal,\r\n    mostrarInstructivoActualizar,\r\n    cerrarModalActualizar\r\n  };\r\n},\r\nwatch: {\r\n  'producto.id': function(newVal) {\r\n    if (newVal) this.cargarMaterialesProducto();\r\n  }\r\n}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.gestion-productos-materiales {\r\npadding: 20px;\r\nmax-width: 1400px;\r\nmargin: 0 auto;\r\n}\r\n\r\nh1 {\r\nfont-size: 2rem;\r\ncolor: #2c3e50;\r\ntext-align: center;\r\nmargin-bottom: 20px;\r\n}\r\n\r\nh2 {\r\nfont-size: 1.5rem;\r\ncolor: #34495e;\r\nmargin-bottom: 15px;\r\n}\r\n\r\n.top-buttons {\r\ndisplay: flex;\r\ngap: 15px;\r\nmargin-bottom: 20px;\r\njustify-content: flex-end;\r\n}\r\n\r\nbutton, .btn {\r\npadding: 8px 16px;\r\nbackground-color: #42b983; /* Verde característico */\r\ncolor: white;\r\nborder: none;\r\nborder-radius: 4px;\r\ncursor: pointer;\r\nfont-size: 14px;\r\ntransition: background-color 0.2s ease;\r\n}\r\n\r\nbutton:hover, .btn:hover {\r\nbackground-color: #2c3e50; /* Hover oscuro */\r\n}\r\n\r\nbutton:disabled {\r\nbackground-color: #cccccc;\r\ncursor: not-allowed;\r\n}\r\n\r\n.btn-warning {\r\nbackground-color: #ffc107; /* Amarillo para \"limpiar\" */\r\ncolor: #333;\r\n}\r\n\r\n.btn-warning:hover {\r\nbackground-color: #e0a800;\r\n}\r\n\r\n.btn-export {\r\nbackground-color: #28a745; /* Verde más oscuro para exportar */\r\n}\r\n\r\n.btn-export:hover {\r\nbackground-color: #218838;\r\n}\r\n\r\n.btn-cerrar {\r\nbackground-color: #dc3545; /* Rojo para cerrar modal */\r\n}\r\n\r\n.btn-cerrar:hover {\r\nbackground-color: #c82333;\r\n}\r\n\r\n.carga-csv, .form-section, .materiales-section, .consulta-productos {\r\nbackground: #ffffff;\r\nborder-radius: 12px;\r\nbox-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\npadding: 20px;\r\nmargin-bottom: 30px;\r\n}\r\n\r\n.carga-input {\r\ndisplay: flex;\r\ngap: 15px;\r\nmargin-bottom: 20px;\r\nflex-wrap: wrap;\r\n}\r\n\r\n.carga-input input[type=\"file\"] {\r\npadding: 5px;\r\nborder: 1px solid #ccc;\r\nborder-radius: 4px;\r\n}\r\n\r\n.carga-links {\r\ndisplay: flex;\r\ngap: 20px;\r\n}\r\n\r\n.link-descarga, .link-instructivo {\r\ncolor: #42b983; /* Verde para enlaces */\r\ntext-decoration: none;\r\ncursor: pointer;\r\n}\r\n\r\n.link-descarga:hover, .link-instructivo:hover {\r\ncolor: #2c3e50;\r\ntext-decoration: underline;\r\n}\r\n\r\n.error-container {\r\nmargin-top: 15px;\r\n}\r\n\r\n.error-container textarea {\r\nwidth: 100%;\r\nheight: 100px;\r\nborder: 1px solid #ddd;\r\nborder-radius: 4px;\r\npadding: 10px;\r\nresize: none;\r\nfont-size: 14px;\r\n}\r\n\r\n.form-group {\r\nmargin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\ndisplay: block;\r\nfont-weight: bold;\r\nmargin-bottom: 5px;\r\ncolor: #555;\r\n}\r\n\r\n.form-group input, .form-group select {\r\nwidth: 100%;\r\npadding: 8px;\r\nborder: 1px solid #ccc;\r\nborder-radius: 4px;\r\nfont-size: 14px;\r\n}\r\n\r\n.form-actions {\r\ndisplay: flex;\r\ngap: 15px;\r\nmargin-top: 20px;\r\n}\r\n\r\n.table-container {\r\nmax-width: 100%;\r\noverflow-x: auto;\r\ndisplay: flex;\r\njustify-content: center;\r\n}\r\n\r\ntable {\r\nwidth: 100%;\r\nborder-collapse: collapse;\r\nfont-size: 14px;\r\n}\r\n\r\nth, td {\r\nborder: 1px solid #ddd;\r\npadding: 10px;\r\ntext-align: center;\r\n}\r\n\r\nth {\r\nbackground-color: #f2f2f2;\r\nfont-weight: bold;\r\ncolor: #34495e;\r\n}\r\n\r\ntd {\r\nmax-width: 200px;\r\nwhite-space: normal;\r\nword-wrap: break-word;\r\n}\r\n\r\ntd:first-child {\r\ntext-align: left;\r\n}\r\n\r\ntbody tr:nth-child(odd) {\r\nbackground-color: #f9f9f9;\r\n}\r\n\r\ntbody tr:hover {\r\nbackground-color: #f1f1f1;\r\n}\r\n\r\n.materiales-actions {\r\nmargin-top: 20px;\r\ndisplay: flex;\r\ngap: 15px;\r\n}\r\n\r\n.filters {\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\ngap: 15px;\r\nmargin-bottom: 20px;\r\n}\r\n\r\n.filter-group {\r\ndisplay: flex;\r\nflex-direction: column;\r\nmin-width: 200px;\r\n}\r\n\r\n.filter-group label {\r\nfont-weight: bold;\r\nmargin-bottom: 5px;\r\n}\r\n\r\n.filter-group input, .filter-group select {\r\npadding: 5px;\r\nborder: 1px solid #ccc;\r\nborder-radius: 4px;\r\n}\r\n\r\n.filter-actions {\r\ndisplay: flex;\r\ngap: 15px;\r\nalign-items: flex-end;\r\n}\r\n\r\n.modal-instructivo {\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground-color: rgba(0, 0, 0, 0.5);\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n}\r\n\r\n.modal-contenido {\r\nbackground: white;\r\npadding: 20px;\r\nborder-radius: 8px;\r\nmax-width: 500px;\r\n}\r\n\r\n.spinner-container {\r\ndisplay: flex;\r\nalign-items: center;\r\ngap: 10px;\r\nmargin-bottom: 15px;\r\n}\r\n\r\n.spinner {\r\nborder: 4px solid #f3f3f3;\r\nborder-top: 4px solid #42b983;\r\nborder-radius: 50%;\r\nwidth: 24px;\r\nheight: 24px;\r\nanimation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n0% { transform: rotate(0deg); }\r\n100% { transform: rotate(360deg); }\r\n}\r\n</style>","import { render } from \"./GestionProductosMateriales.vue?vue&type=template&id=4a8d7e4e&scoped=true\"\nimport script from \"./GestionProductosMateriales.vue?vue&type=script&lang=js\"\nexport * from \"./GestionProductosMateriales.vue?vue&type=script&lang=js\"\n\nimport \"./GestionProductosMateriales.vue?vue&type=style&index=0&id=4a8d7e4e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a8d7e4e\"]])\n\nexport default __exports__"],"names":["class","key","type","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$setup","limpiarPagina","_hoisted_3","isLoadingCarga","_hoisted_4","_createCommentVNode","_hoisted_5","accept","onChange","cargarCsv","ref","procesarCsv","disabled","_hoisted_6","limpiarSesionCsv","_hoisted_7","_hoisted_8","descargarPlantillaCSV","mostrarInstructivo","erroresCsv","_hoisted_9","readonly","$event","copiarErrores","mostrarModal","_hoisted_10","_hoisted_11","_createStaticVNode","cerrarModal","_hoisted_12","isLoadingActualizar","_hoisted_13","_hoisted_14","cargarArchivoActualizarCsv","procesarActualizacionCsv","archivoActualizarCsv","_hoisted_15","limpiarActualizarCsv","_hoisted_16","_hoisted_17","descargarPlantillaActualizarCSV","mostrarInstructivoActualizar","erroresActualizarCsv","_hoisted_18","copiarErroresActualizar","mostrarModalActualizar","_hoisted_19","_hoisted_20","cerrarModalActualizar","_hoisted_21","_toDisplayString","modoEdicion","onSubmit","_withModifiers","actualizarProducto","crearProducto","_hoisted_22","for","producto","codigo","id","required","_hoisted_23","_hoisted_24","nombre","_hoisted_25","codigo_barras","_hoisted_26","es_producto_compuesto","value","_hoisted_27","peso_total_gr","step","_hoisted_28","number","_hoisted_29","peso_unidad_gr","_hoisted_30","_hoisted_31","stock_minimo","min","_hoisted_32","_Fragment","cancelarEdicion","limpiarSesion","_hoisted_33","_hoisted_34","_hoisted_35","_renderList","materiales","material","index","nombreDigitado","placeholder","onInput","sincronizarPorNombre","_hoisted_36","producto_base","sincronizarCodigo","productosDisponibles","prod","_hoisted_38","_hoisted_37","codigoDigitado","sincronizarSelector","_hoisted_39","cantidad","actualizarPesoMaterial","_hoisted_40","peso_unitario","peso_total","eliminarMaterial","_hoisted_41","_hoisted_42","agregarMaterial","guardarMateriales","_hoisted_43","_hoisted_44","_hoisted_45","filtroCodigo","_hoisted_46","filtroNombre","_hoisted_47","limit","consultarProductos","_hoisted_48","limpiarCampos","exportarAExcel","productos","length","_hoisted_49","editarProducto","_hoisted_50","eliminarProducto","_hoisted_51","totalProductos","cargarMasProductos","name","setup","useStore","router","useRouter","offset","archivoCsv","inputCsv","inputActualizarCsv","async","payload","response","axios","post","data","alert","resetearFormulario","error","console","limiteConsulta","params","search_codigo","search_nombre","get","sort","a","b","localeCompare","total","cargarMaterialesProducto","map","productoBase","find","p","producto_base_id","cargarProductosDisponibles","status","push","some","m","isNaN","producto_compuesto_id","Number","event","target","files","formData","FormData","append","headers","timeout","message","productos_creados","productos_duplicados","errores","mensaje","join","mensajeError","code","productos_actualizados","productos_no_encontrados","productoEncontrado","toLowerCase","includes","then","put","delete","splice","confirm","productoId","filter","productosTodos","worksheetData","worksheet","XLSX","aoa_to_sheet","workbook","book_new","book_append_sheet","Date","toISOString","slice","navigator","clipboard","writeText","csvContent","blob","Blob","link","document","createElement","href","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","watch","newVal","this","__exports__","render"],"sourceRoot":""}