{"version":3,"file":"js/767.c2e4b790.js","mappings":"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","sources":["webpack://frontend/./src/views/DailyProfit.vue","webpack://frontend/./src/views/DailyProfit.vue?a47f"],"sourcesContent":["<template>\r\n    <div class=\"daily-profit\">\r\n      <h1>Utilidad Diaria por PDV - {{ months[month - 1].name }} {{ year }}</h1>\r\n      <div class=\"filters\">\r\n        <label>Año:</label>\r\n        <select v-model=\"year\" @change=\"fetchData\">\r\n          <option v-for=\"y in years\" :key=\"y\" :value=\"y\">{{ y }}</option>\r\n        </select>\r\n        <label>Mes:</label>\r\n        <select v-model=\"month\" @change=\"updateDaysAndFetch\">\r\n          <option v-for=\"m in months\" :key=\"m.num\" :value=\"m.num\">{{ m.name }}</option>\r\n        </select>\r\n        <label>Estatus PDV:</label>\r\n        <select v-model=\"status\" @change=\"fetchData\">\r\n          <option value=\"Todos\">Todos</option>\r\n          <option value=\"Activo\">Activo</option>\r\n          <option value=\"Inactivo\">Inactivo</option>\r\n        </select>\r\n        <label>PDV:</label>\r\n        <select v-model=\"selectedPDV\" @change=\"fetchData\">\r\n          <option value=\"Todos\">Todos</option>\r\n          <option v-for=\"pdv in pdvs\" :key=\"pdv\" :value=\"pdv\">{{ pdv }}</option>\r\n        </select>\r\n        <label>Día:</label>\r\n        <select v-model=\"selectedDay\" @change=\"fetchData\">\r\n          <option value=\"Todos\">Todos</option>\r\n          <option v-for=\"day in daysInMonth\" :key=\"day\" :value=\"day\">{{ day }}</option>\r\n        </select>\r\n      </div>\r\n  \r\n      <!-- Mensaje si no hay datos -->\r\n      <div v-if=\"noData\" class=\"no-data-message\">\r\n        No hay datos disponibles para el mes, año y filtros seleccionados.\r\n      </div>\r\n  \r\n      <!-- Gráficos -->\r\n      <div v-if=\"!noData\" class=\"charts-container\">\r\n        <!-- Gráfico de Barras: Utilidad Total por PDV -->\r\n        <div class=\"chart-wrapper\">\r\n          <h2>Utilidad Total por PDV</h2>\r\n          <Bar :data=\"barChartData\" :options=\"barChartOptions\" />\r\n        </div>\r\n  \r\n        <!-- Gráfico de Líneas: Tendencia de Utilidad Diaria -->\r\n        <div class=\"chart-wrapper\">\r\n          <h2>Tendencia de Utilidad Diaria</h2>\r\n          <div class=\"pdv-selector\">\r\n            <label>Seleccionar PDV:</label>\r\n            <select v-model=\"selectedPdv\">\r\n              <option value=\"total\">Total (Todos los PDVs)</option>\r\n              <option v-for=\"pdv in filteredPdvs\" :key=\"pdv\" :value=\"pdv\">{{ pdv }}</option>\r\n            </select>\r\n          </div>\r\n          <Line :data=\"lineChartData\" :options=\"lineChartOptions\" />\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Tabla -->\r\n      <div v-if=\"!noData\" class=\"table-container\">\r\n        <table class=\"profit-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Fecha</th>\r\n              <th v-for=\"pdv in filteredPdvs\" :key=\"pdv\" colspan=\"4\">{{ pdv }}</th>\r\n              <th colspan=\"4\">Total</th>\r\n            </tr>\r\n            <tr>\r\n              <th></th>\r\n              <th v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-ventas'\">Ventas</th>\r\n              <th v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-costos'\">Costos</th>\r\n              <th v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-produccion'\">Producción</th>\r\n              <th v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-utilidad'\">Utilidad</th>\r\n              <th>Ventas</th>\r\n              <th>Costos</th>\r\n              <th>Producción</th>\r\n              <th>Utilidad</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"row in filteredDailyProfitData\" :key=\"row.date\">\r\n              <td>{{ row.date }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-ventas'\">{{ formatCurrency(row[pdv].ventas) }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-costos'\">{{ formatCurrency(row[pdv].costos) }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-produccion'\">{{ formatCurrency(row[pdv].produccion) }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-utilidad'\">{{ formatCurrency(row[pdv].utilidad) }}</td>\r\n              <td>{{ formatCurrency(row.total.ventas) }}</td>\r\n              <td>{{ formatCurrency(row.total.costos) }}</td>\r\n              <td>{{ formatCurrency(row.total.produccion) }}</td>\r\n              <td>{{ formatCurrency(row.total.utilidad) }}</td>\r\n            </tr>\r\n            <tr class=\"total-row\" v-if=\"filteredDailyProfitData.length > 0\">\r\n              <td>{{ filteredTotals.date }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-ventas'\">{{ formatCurrency(filteredTotals[pdv].ventas) }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-costos'\">{{ formatCurrency(filteredTotals[pdv].costos) }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-produccion'\">{{ formatCurrency(filteredTotals[pdv].produccion) }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv + '-utilidad'\">{{ formatCurrency(filteredTotals[pdv].utilidad) }}</td>\r\n              <td>{{ formatCurrency(filteredTotals.total.ventas) }}</td>\r\n              <td>{{ formatCurrency(filteredTotals.total.costos) }}</td>\r\n              <td>{{ formatCurrency(filteredTotals.total.produccion) }}</td>\r\n              <td>{{ formatCurrency(filteredTotals.total.utilidad) }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted, computed, watch } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  import { useRouter } from 'vue-router';\r\n  import axios from '@/api/axios';\r\n  import { Bar, Line } from 'vue-chartjs';\r\n  import {\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    LineElement,\r\n    PointElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    TimeScale\r\n  } from 'chart.js';\r\n  import ChartDataLabels from 'chartjs-plugin-datalabels';\r\n  import 'chartjs-adapter-date-fns';\r\n  \r\n  ChartJS.register(\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    LineElement,\r\n    PointElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    TimeScale,\r\n    ChartDataLabels\r\n  );\r\n  \r\n  export default {\r\n    name: 'DailyProfit',\r\n    components: {\r\n      Bar,\r\n      Line\r\n    },\r\n    setup() {\r\n      const store = useStore();\r\n      const router = useRouter();\r\n  \r\n      // Datos reactivos\r\n      const year = ref(null);\r\n      const years = ref([]);\r\n      const currentDate = new Date();\r\n      const currentMonth = currentDate.getMonth() + 1;\r\n      const currentYear = currentDate.getFullYear();\r\n      const month = ref(currentMonth);\r\n      const months = ref([\r\n        { num: 1, name: 'Enero' }, { num: 2, name: 'Febrero' }, { num: 3, name: 'Marzo' },\r\n        { num: 4, name: 'Abril' }, { num: 5, name: 'Mayo' }, { num: 6, name: 'Junio' },\r\n        { num: 7, name: 'Julio' }, { num: 8, name: 'Agosto' }, { num: 9, name: 'Septiembre' },\r\n        { num: 10, name: 'Octubre' }, { num: 11, name: 'Noviembre' }, { num: 12, name: 'Diciembre' }\r\n      ]);\r\n      const status = ref('Activo');\r\n      const selectedPDV = ref('Todos');\r\n      const selectedDay = ref('Todos');\r\n      const daysInMonth = ref([]);\r\n      const dailyProfitData = ref([]);\r\n      const filteredDailyProfitData = ref([]);\r\n      const pdvs = ref([]);\r\n      const filteredPdvs = ref([]);\r\n      const totals = ref({});\r\n      const filteredTotals = ref({});\r\n      const selectedPdv = ref('total');\r\n  \r\n      // Computed para determinar si no hay datos\r\n      const noData = computed(() => {\r\n        const result = filteredDailyProfitData.value.length === 0 ||\r\n                      filteredDailyProfitData.value.every(row => row.total.utilidad === 0);\r\n        console.log('noData:', result, 'filteredDailyProfitData:', filteredDailyProfitData.value);\r\n        return result;\r\n      });\r\n  \r\n      // Generar lista de días del mes\r\n      const updateDaysInMonth = () => {\r\n        if (!year.value || !month.value) return;\r\n        const daysInMonthMap = {1: 31, 2: 28, 3: 31, 4: 30, 5: 31, 6: 30, 7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31};\r\n        if (month.value === 2 && year.value % 4 === 0 && (year.value % 100 !== 0 || year.value % 400 === 0)) {\r\n          daysInMonthMap[2] = 29;\r\n        }\r\n        const numDays = daysInMonthMap[month.value] || 30;\r\n        daysInMonth.value = Array.from({ length: numDays }, (_, i) => i + 1);\r\n        selectedDay.value = 'Todos';\r\n      };\r\n  \r\n      // Obtener los años disponibles\r\n      const fetchAvailableYears = async () => {\r\n        try {\r\n          const response = await axios.get('/available-years');\r\n          years.value = response.data.years || [];\r\n          if (years.value.length > 0) {\r\n            year.value = years.value.includes(currentYear) ? currentYear : years.value[0];\r\n            updateDaysInMonth();\r\n            fetchData();\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching available years:', error);\r\n          years.value = Array.from({ length: 5 }, (_, i) => currentYear + i - 2);\r\n          year.value = currentYear;\r\n          updateDaysInMonth();\r\n          if (error.response && error.response.status === 401) {\r\n            router.push('/login');\r\n          } else {\r\n            fetchData();\r\n          }\r\n        }\r\n      };\r\n  \r\n      // Obtener datos de utilidad diaria\r\n      const fetchData = async () => {\r\n        if (!year.value) return;\r\n        try {\r\n          const params = { year: year.value, month: month.value, status: status.value };\r\n          if (selectedPDV.value !== 'Todos') params.pdv = selectedPDV.value;\r\n          if (selectedDay.value !== 'Todos') params.day = selectedDay.value;\r\n  \r\n          const response = await axios.get('/dashboard/daily-profit', { params });\r\n          dailyProfitData.value = response.data.data || [];\r\n          pdvs.value = response.data.pdvs || [];\r\n          totals.value = response.data.totals || {};\r\n          updateFilteredData();\r\n          console.log('Datos recibidos:', { dailyProfitData: dailyProfitData.value, pdvs: pdvs.value, totals: totals.value });\r\n        } catch (error) {\r\n          console.error('Error fetching daily profit data:', error);\r\n          dailyProfitData.value = [];\r\n          pdvs.value = [];\r\n          totals.value = {};\r\n          filteredDailyProfitData.value = [];\r\n          filteredPdvs.value = [];\r\n          filteredTotals.value = {};\r\n          if (error.response && error.response.status === 401) {\r\n            router.push('/login');\r\n          }\r\n        }\r\n      };\r\n  \r\n      // Actualizar datos filtrados\r\n      const updateFilteredData = () => {\r\n        if (selectedPDV.value === 'Todos') {\r\n          filteredPdvs.value = pdvs.value;\r\n        } else {\r\n          filteredPdvs.value = pdvs.value.filter(pdv => pdv === selectedPDV.value);\r\n        }\r\n  \r\n        if (selectedDay.value === 'Todos') {\r\n          filteredDailyProfitData.value = dailyProfitData.value;\r\n        } else {\r\n          const dayStr = selectedDay.value.toString().padStart(2, '0');\r\n          const monthStr = month.value.toString().padStart(2, '0');\r\n          const datePattern = `${dayStr}/${monthStr}/${year.value}`;\r\n          filteredDailyProfitData.value = dailyProfitData.value.filter(row => row.date.includes(datePattern));\r\n        }\r\n  \r\n        filteredTotals.value = { date: 'TOTALES' };\r\n        filteredPdvs.value.forEach(pdv => {\r\n          filteredTotals.value[pdv] = {\r\n            ventas: filteredDailyProfitData.value.reduce((sum, row) => sum + (row[pdv]?.ventas || 0), 0),\r\n            costos: filteredDailyProfitData.value.reduce((sum, row) => sum + (row[pdv]?.costos || 0), 0),\r\n            produccion: filteredDailyProfitData.value.reduce((sum, row) => sum + (row[pdv]?.produccion || 0), 0),\r\n            utilidad: filteredDailyProfitData.value.reduce((sum, row) => sum + (row[pdv]?.utilidad || 0), 0)\r\n          };\r\n        });\r\n        filteredTotals.value.total = {\r\n          ventas: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.total?.ventas || 0), 0),\r\n          costos: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.total?.costos || 0), 0),\r\n          produccion: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.total?.produccion || 0), 0),\r\n          utilidad: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.total?.utilidad || 0), 0)\r\n        };\r\n      };\r\n  \r\n      // Actualizar días y obtener datos\r\n      const updateDaysAndFetch = () => {\r\n        updateDaysInMonth();\r\n        fetchData();\r\n      };\r\n  \r\n      // Formatear moneda\r\n      const formatCurrency = (value) => {\r\n        return new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(value);\r\n      };\r\n  \r\n      // Gráfico de barras: Utilidad Total por PDV\r\n      const barChartData = computed(() => {\r\n        const data = {\r\n          labels: filteredPdvs.value,\r\n          datasets: [\r\n            {\r\n              label: 'Utilidad Total (COP)',\r\n              data: filteredPdvs.value.map(pdv => filteredTotals.value[pdv]?.utilidad || 0),\r\n              backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n              borderColor: 'rgba(54, 162, 235, 1)',\r\n              borderWidth: 1\r\n            }\r\n          ]\r\n        };\r\n        console.log('barChartData:', data);\r\n        return data;\r\n      });\r\n  \r\n      const barChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            title: { display: true, text: 'Utilidad (COP)' },\r\n            ticks: {\r\n              callback: function(value) {\r\n                return new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(value);\r\n              }\r\n            }\r\n          },\r\n          x: {\r\n            title: { display: true, text: 'Punto de Venta' }\r\n          }\r\n        },\r\n        plugins: {\r\n          legend: { display: true },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                let label = context.dataset.label || '';\r\n                if (label) label += ': ';\r\n                label += new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(context.parsed.y);\r\n                return label;\r\n              }\r\n            }\r\n          },\r\n          datalabels: {\r\n            display: true,\r\n            anchor: 'center',\r\n            align: 'center',\r\n            color: '#fff',\r\n            font: { size: 11, weight: 'bold' },\r\n            formatter: function(value) {\r\n              return new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(value);\r\n            }\r\n          }\r\n        }\r\n      };\r\n  \r\n      // Gráfico de líneas: Tendencia de Utilidad Diaria\r\n      const lineChartData = computed(() => {\r\n        const labels = filteredDailyProfitData.value.map(row => {\r\n          const dateStr = row.date.split(', ')[1];\r\n          const [day, month, year] = dateStr.split('/');\r\n          return `${year}-${month}-${day}`;\r\n        });\r\n  \r\n        let data;\r\n        if (selectedPdv.value === 'total') {\r\n          data = filteredDailyProfitData.value.map(row => row.total.utilidad);\r\n        } else {\r\n          data = filteredDailyProfitData.value.map(row => row[selectedPdv.value]?.utilidad || 0);\r\n        }\r\n  \r\n        const chartData = {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: selectedPdv.value === 'total' ? 'Utilidad Total (COP)' : `Utilidad de ${selectedPdv.value} (COP)`,\r\n              data: data,\r\n              fill: false,\r\n              borderColor: 'rgba(75, 192, 192, 1)',\r\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n              tension: 0.1\r\n            }\r\n          ]\r\n        };\r\n        console.log('lineChartData:', chartData);\r\n        return chartData;\r\n      });\r\n  \r\n      const lineChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          x: {\r\n            type: 'time',\r\n            time: {\r\n              unit: 'day',\r\n              tooltipFormat: 'dd/MM/yyyy',\r\n              displayFormats: { day: 'dd/MM/yyyy' }\r\n            },\r\n            title: { display: true, text: 'Fecha' }\r\n          },\r\n          y: {\r\n            beginAtZero: true,\r\n            title: { display: true, text: 'Utilidad (COP)' },\r\n            ticks: {\r\n              callback: function(value) {\r\n                return new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(value);\r\n              }\r\n            }\r\n          }\r\n        },\r\n        plugins: {\r\n          legend: { display: true },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                let label = context.dataset.label || '';\r\n                if (label) label += ': ';\r\n                label += new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(context.parsed.y);\r\n                return label;\r\n              }\r\n            }\r\n          },\r\n          datalabels: { display: false }\r\n        }\r\n      };\r\n  \r\n      // Cargar años disponibles\r\n      onMounted(() => {\r\n        if (store.state.auth.token) {\r\n          fetchAvailableYears();\r\n        } else {\r\n          router.push('/login');\r\n        }\r\n      });\r\n  \r\n      watch(selectedPdv, () => {\r\n        console.log('PDV seleccionado cambiado a:', selectedPdv.value);\r\n      });\r\n  \r\n      return {\r\n        year,\r\n        years,\r\n        month,\r\n        months,\r\n        status,\r\n        selectedPDV,\r\n        selectedDay,\r\n        daysInMonth,\r\n        dailyProfitData,\r\n        filteredDailyProfitData,\r\n        pdvs,\r\n        filteredPdvs,\r\n        totals,\r\n        filteredTotals,\r\n        noData,\r\n        selectedPdv,\r\n        barChartData,\r\n        barChartOptions,\r\n        lineChartData,\r\n        lineChartOptions,\r\n        fetchData,\r\n        updateDaysAndFetch,\r\n        formatCurrency\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .daily-profit {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .filters {\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    gap: 15px;\r\n    align-items: center;\r\n  }\r\n  \r\n  label {\r\n    margin-right: 10px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  select {\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    border: 1px solid #ddd;\r\n  }\r\n  \r\n  .table-container {\r\n    max-width: 100%;\r\n    overflow-x: auto;\r\n    margin-top: 120px;\r\n  }\r\n  \r\n  .profit-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .profit-table th,\r\n  .profit-table td {\r\n    border: 1px solid #ddd;\r\n    padding: 4px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .profit-table th {\r\n    background-color: #f2f2f2;\r\n    font-size: 11px;\r\n  }\r\n  \r\n  .profit-table td {\r\n    max-width: 120px;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  .profit-table td:first-child {\r\n    font-size: 10px;\r\n  }\r\n  \r\n  .total-row {\r\n    font-weight: bold;\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  .no-data-message {\r\n    text-align: center;\r\n    color: #888;\r\n    margin: 20px 0;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .charts-container {\r\n    margin-bottom: 70px;\r\n  }\r\n  \r\n  .chart-wrapper {\r\n    margin-bottom: 40px;\r\n    height: 400px;\r\n  }\r\n  \r\n  .chart-wrapper h2 {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .pdv-selector {\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n  }\r\n  </style>","import { render } from \"./DailyProfit.vue?vue&type=template&id=449bee01&scoped=true\"\nimport script from \"./DailyProfit.vue?vue&type=script&lang=js\"\nexport * from \"./DailyProfit.vue?vue&type=script&lang=js\"\n\nimport \"./DailyProfit.vue?vue&type=style&index=0&id=449bee01&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-449bee01\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$setup","months","month","name","year","_hoisted_2","_cache","$event","onChange","args","fetchData","_Fragment","_renderList","years","y","value","_hoisted_3","updateDaysAndFetch","m","num","_hoisted_4","status","selectedPDV","pdvs","pdv","_hoisted_5","selectedDay","daysInMonth","day","_hoisted_6","noData","_hoisted_7","_createCommentVNode","_hoisted_8","_hoisted_9","_createVNode","_component_Bar","data","barChartData","options","barChartOptions","_hoisted_10","_hoisted_11","selectedPdv","filteredPdvs","_hoisted_12","_component_Line","lineChartData","lineChartOptions","_hoisted_13","_hoisted_14","colspan","filteredDailyProfitData","row","date","formatCurrency","ventas","costos","produccion","utilidad","total","length","_hoisted_15","filteredTotals","ChartJS","register","Title","Tooltip","Legend","BarElement","LineElement","PointElement","CategoryScale","LinearScale","TimeScale","ChartDataLabels","components","Bar","Line","setup","store","useStore","router","useRouter","ref","currentDate","Date","currentMonth","getMonth","currentYear","getFullYear","dailyProfitData","totals","computed","result","every","console","log","updateDaysInMonth","daysInMonthMap","numDays","Array","from","_","i","fetchAvailableYears","async","response","axios","get","includes","error","push","params","updateFilteredData","filter","dayStr","toString","padStart","monthStr","datePattern","forEach","reduce","sum","Intl","NumberFormat","style","currency","minimumFractionDigits","format","labels","datasets","label","map","backgroundColor","borderColor","borderWidth","responsive","maintainAspectRatio","scales","beginAtZero","title","display","text","ticks","callback","x","plugins","legend","tooltip","callbacks","context","dataset","parsed","datalabels","anchor","align","color","font","size","weight","formatter","dateStr","split","chartData","fill","tension","type","time","unit","tooltipFormat","displayFormats","onMounted","state","auth","token","watch","__exports__","render"],"sourceRoot":""}