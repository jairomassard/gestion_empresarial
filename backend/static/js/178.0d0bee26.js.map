{"version":3,"file":"js/178.0d0bee26.js","mappings":"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","sources":["webpack://frontend/./src/views/ProductProfit.vue","webpack://frontend/./src/views/ProductProfit.vue?616a"],"sourcesContent":["<template>\r\n    <div class=\"product-profit\">\r\n      <h1>Margen de Utilidad por Producto - {{ months[month - 1].name }} {{ year }} <span v-if=\"day\"> (Día {{ day }})</span></h1>\r\n      <div class=\"filters\">\r\n        <label>Año:</label>\r\n        <select v-model=\"year\" @change=\"fetchData\">\r\n          <option v-for=\"y in years\" :key=\"y\" :value=\"y\">{{ y }}</option>\r\n        </select>\r\n        <label>Mes:</label>\r\n        <select v-model=\"month\" @change=\"onMonthChange\">\r\n          <option v-for=\"m in months\" :key=\"m.num\" :value=\"m.num\">{{ m.name }}</option>\r\n        </select>\r\n        <label>Día:</label>\r\n        <select v-model=\"day\" @change=\"fetchData\">\r\n          <option value=\"\">Todos</option>\r\n          <option v-for=\"d in dayscfafterdays\" :key=\"d\" :value=\"d\">{{ d }}</option>\r\n        </select>\r\n        <label>Producto:</label>\r\n        <select v-model=\"selectedProduct\" @change=\"fetchData\">\r\n          <option value=\"\">Todos</option>\r\n          <option v-for=\"product in products\" :key=\"product.descripcion\" :value=\"product.descripcion\">{{ product.descripcion }}</option>\r\n        </select>\r\n      </div>\r\n  \r\n      <div class=\"actions\">\r\n        <button @click=\"exportToExcel\">Exportar a Excel</button>\r\n        <button @click=\"downloadChart('profitChart')\">Descargar Gráfico de Utilidad</button>\r\n        <button @click=\"downloadChart('salesVsCostsChart')\">Descargar Gráfico de Ventas vs Costos</button>\r\n      </div>\r\n  \r\n      <div v-if=\"noData\" class=\"no-data-message\">\r\n        No hay datos disponibles para el mes, año, día y filtros seleccionados.\r\n      </div>\r\n  \r\n      <div v-if=\"!noData\" class=\"charts-container\">\r\n        <div class=\"chart-wrapper\">\r\n          <h2>Margen de Utilidad por Producto</h2>\r\n          <Bar id=\"profitChart\" :data=\"barChartData\" :options=\"barChartOptions\" />\r\n        </div>\r\n        <div class=\"chart-wrapper\">\r\n          <h2>Utilidad en Pesos (COP)</h2>\r\n          <Bar id=\"utilityChart\" :data=\"utilityChartData\" :options=\"utilityChartOptions\" />\r\n        </div>\r\n        <div class=\"chart-wrapper\">\r\n          <h2>Ventas vs Costos de Producción vs Costos de Inventario</h2>\r\n          <Bar id=\"salesVsCostsChart\" :data=\"salesVsCostsChartData\" :options=\"salesVsCostsChartOptions\" />\r\n        </div>\r\n      </div>\r\n  \r\n      <div v-if=\"!noData\" class=\"table-container\">\r\n        <table class=\"profit-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Producto</th>\r\n              <th>Cantidad Vendida</th>\r\n              <th>Ventas</th>\r\n              <th>Costos</th>\r\n              <th>Producción</th>\r\n              <th>Utilidad</th>\r\n              <th>Margen (%)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"row in productProfitData\" :key=\"row.descripcion\">\r\n              <td>{{ row.descripcion }}</td>\r\n              <td>{{ row.cantidad_vendida.toFixed(2) }}</td>\r\n              <td>{{ formatCurrency(row.ventas) }}</td>\r\n              <td>{{ formatCurrency(row.costos) }}</td>\r\n              <td>{{ formatCurrency(row.produccion) }}</td>\r\n              <td>{{ formatCurrency(row.utilidad) }}</td>\r\n              <td>{{ row.margen.toFixed(2) }}%</td>\r\n            </tr>\r\n            <tr class=\"total-row\">\r\n              <td><strong>Total</strong></td>\r\n              <td><strong>{{ totals.cantidad_vendida.toFixed(2) }}</strong></td>\r\n              <td><strong>{{ formatCurrency(totals.ventas) }}</strong></td>\r\n              <td><strong>{{ formatCurrency(totals.costos) }}</strong></td>\r\n              <td><strong>{{ formatCurrency(totals.produccion) }}</strong></td>\r\n              <td><strong>{{ formatCurrency(totals.utilidad) }}</strong></td>\r\n              <td><strong>{{ totals.margen.toFixed(2) }}%</strong></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted, computed } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  import { useRouter } from 'vue-router';\r\n  import axios from '@/api/axios';\r\n  import { Bar } from 'vue-chartjs';\r\n  import {\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    CategoryScale,\r\n    LinearScale\r\n  } from 'chart.js';\r\n  import ChartDataLabels from 'chartjs-plugin-datalabels';\r\n  import * as XLSX from 'xlsx';\r\n  import html2canvas from 'html2canvas';\r\n  \r\n  ChartJS.register(\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    ChartDataLabels\r\n  );\r\n  \r\n  export default {\r\n    name: 'ProductProfit',\r\n    components: { Bar },\r\n    setup() {\r\n      const store = useStore();\r\n      const router = useRouter();\r\n  \r\n      const year = ref(null);\r\n      const years = ref([]);\r\n      const currentDate = new Date();\r\n      const currentMonth = currentDate.getMonth() + 1;\r\n      const currentYear = currentDate.getFullYear();\r\n      const month = ref(currentMonth);\r\n      const day = ref('');\r\n      const months = ref([\r\n        { num: 1, name: 'Enero' }, { num: 2, name: 'Febrero' }, { num: 3, name: 'Marzo' },\r\n        { num: 4, name: 'Abril' }, { num: 5, name: 'Mayo' }, { num: 6, name: 'Junio' },\r\n        { num: 7, name: 'Julio' }, { num: 8, name: 'Agosto' }, { num: 9, name: 'Septiembre' },\r\n        { num: 10, name: 'Octubre' }, { num: 11, name: 'Noviembre' }, { num: 12, name: 'Diciembre' }\r\n      ]);\r\n      const days = computed(() => {\r\n        if (!year.value || !month.value) return [];\r\n        const daysInMonth = new Date(year.value, month.value, 0).getDate();\r\n        return Array.from({ length: daysInMonth }, (_, i) => i + 1);\r\n      });\r\n      const selectedProduct = ref('');\r\n      const products = ref([]);\r\n      const productProfitData = ref([]);\r\n  \r\n      const noData = computed(() => productProfitData.value.length === 0);\r\n  \r\n      const totals = computed(() => {\r\n        return productProfitData.value.reduce(\r\n          (acc, row) => {\r\n            acc.cantidad_vendida += row.cantidad_vendida;\r\n            acc.ventas += row.ventas;\r\n            acc.costos += row.costos;\r\n            acc.produccion += row.produccion;\r\n            acc.utilidad += row.utilidad;\r\n            acc.margen += row.margen * row.ventas; // Ponderado por ventas\r\n            return acc;\r\n          },\r\n          {\r\n            cantidad_vendida: 0,\r\n            ventas: 0,\r\n            costos: 0,\r\n            produccion: 0,\r\n            utilidad: 0,\r\n            margen: 0\r\n          }\r\n        );\r\n      });\r\n  \r\n      computed(() => {\r\n        if (totals.value.ventas > 0) {\r\n          totals.value.margen = (totals.value.margen / totals.value.ventas);\r\n        }\r\n        return totals.value;\r\n      });\r\n  \r\n      const fetchAvailableYears = async () => {\r\n        try {\r\n          const response = await axios.get('/available-years');\r\n          years.value = response.data.years || [];\r\n          if (years.value.length > 0) {\r\n            year.value = years.value.includes(currentYear) ? currentYear : years.value[0];\r\n            fetchProducts();\r\n            fetchData();\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching available years:', error);\r\n          years.value = Array.from({ length: 5 }, (_, i) => currentYear + i - 2);\r\n          year.value = currentYear;\r\n          if (error.response && error.response.status === 401) {\r\n            router.push('/login');\r\n          } else {\r\n            fetchProducts();\r\n            fetchData();\r\n          }\r\n        }\r\n      };\r\n  \r\n      const fetchProducts = async () => {\r\n        try {\r\n          const params = { year: year.value, month: month.value };\r\n          if (day.value) params.day = day.value;\r\n          const response = await axios.get('/dashboard/sales-by-product', { params });\r\n          products.value = response.data.products.map(desc => ({ descripcion: desc })) || [];\r\n        } catch (error) {\r\n          console.error('Error fetching products:', error);\r\n          products.value = [];\r\n        }\r\n      };\r\n  \r\n      const fetchData = async () => {\r\n        if (!year.value) return;\r\n        try {\r\n          const params = { year: year.value, month: month.value };\r\n          if (day.value) params.day = day.value;\r\n          if (selectedProduct.value) params.product_desc = selectedProduct.value;\r\n          const response = await axios.get('/dashboard/product-profit', { params });\r\n          productProfitData.value = response.data.data || [];\r\n          console.log('Datos recibidos:', productProfitData.value);\r\n        } catch (error) {\r\n          console.error('Error fetching product profit data:', error);\r\n          productProfitData.value = [];\r\n          if (error.response && error.response.status === 401) {\r\n            router.push('/login');\r\n          }\r\n        }\r\n      };\r\n  \r\n      const onMonthChange = () => {\r\n        day.value = ''; // Resetear día al cambiar el mes\r\n        fetchProducts();\r\n        fetchData();\r\n      };\r\n  \r\n      const formatCurrency = (value) => {\r\n        return new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(value);\r\n      };\r\n  \r\n      const barChartData = computed(() => ({\r\n        labels: productProfitData.value.map(row => row.descripcion),\r\n        datasets: [\r\n          {\r\n            label: 'Margen de Utilidad (%)',\r\n            data: productProfitData.value.map(row => row.margen),\r\n            backgroundColor: 'rgba(153, 102, 255, 0.6)',\r\n            borderColor: 'rgba(153, 102, 255, 1)',\r\n            borderWidth: 1\r\n          }\r\n        ]\r\n      }));\r\n  \r\n      const barChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          y: { beginAtZero: true, title: { display: true, text: 'Margen (%)' } },\r\n          x: { title: { display: true, text: 'Producto' } }\r\n        },\r\n        plugins: {\r\n          legend: { display: true },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}%`;\r\n              }\r\n            }\r\n          },\r\n          datalabels: {\r\n            display: true,\r\n            anchor: 'center',\r\n            align: 'center',\r\n            color: '#fff',\r\n            font: { size: 11, weight: 'bold' },\r\n            formatter: function(value) {\r\n              return `${value.toFixed(2)}%`;\r\n            }\r\n          }\r\n        }\r\n      };\r\n  \r\n      const utilityChartData = computed(() => ({\r\n        labels: productProfitData.value.map(row => row.descripcion),\r\n        datasets: [\r\n          {\r\n            label: 'Utilidad (COP)',\r\n            data: productProfitData.value.map(row => row.utilidad),\r\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            borderWidth: 1\r\n          }\r\n        ]\r\n      }));\r\n  \r\n      const utilityChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          y: { beginAtZero: true, title: { display: true, text: 'Utilidad (COP)' } },\r\n          x: { title: { display: true, text: 'Producto' } }\r\n        },\r\n        plugins: {\r\n          legend: { display: true },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                return `${context.dataset.label}: ${formatCurrency(context.parsed.y)}`;\r\n              }\r\n            }\r\n          },\r\n          datalabels: {\r\n            display: true,\r\n            anchor: 'center',\r\n            align: 'center',\r\n            color: '#fff',\r\n            font: { size: 11, weight: 'bold' },\r\n            formatter: function(value) {\r\n              return formatCurrency(value);\r\n            }\r\n          }\r\n        }\r\n      };\r\n  \r\n      const salesVsCostsChartData = computed(() => ({\r\n        labels: productProfitData.value.map(row => row.descripcion),\r\n        datasets: [\r\n          {\r\n            label: 'Ventas',\r\n            data: productProfitData.value.map(row => row.ventas),\r\n            backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n            borderColor: 'rgba(54, 162, 235, 1)',\r\n            borderWidth: 1\r\n          },\r\n          {\r\n            label: 'Costos de Producción',\r\n            data: productProfitData.value.map(row => row.produccion),\r\n            backgroundColor: 'rgba(255, 99, 132, 0.6)',\r\n            borderColor: 'rgba(255, 99, 132, 1)',\r\n            borderWidth: 1\r\n          },\r\n          {\r\n            label: 'Costos de Inventario',\r\n            data: productProfitData.value.map(row => row.costos),\r\n            backgroundColor: 'rgba(255, 206, 86, 0.6)',\r\n            borderColor: 'rgba(255, 206, 86, 1)',\r\n            borderWidth: 1\r\n          }\r\n        ]\r\n      }));\r\n  \r\n      const salesVsCostsChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          x: { stacked: false, title: { display: true, text: 'Producto' } },\r\n          y: { stacked: false, beginAtZero: true, title: { display: true, text: 'Valor (COP)' } }\r\n        },\r\n        plugins: {\r\n          legend: { display: true },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                return `${context.dataset.label}: ${formatCurrency(context.parsed.y)}`;\r\n              }\r\n            }\r\n          },\r\n          datalabels: {\r\n            display: false // Desactivar etiquetas para evitar clutter\r\n          }\r\n        }\r\n      };\r\n  \r\n      const exportToExcel = () => {\r\n        const data = productProfitData.value.map(row => ({\r\n          Producto: row.descripcion,\r\n          'Cantidad Vendida': row.cantidad_vendida,\r\n          Ventas: row.ventas,\r\n          Costos: row.costos,\r\n          Producción: row.produccion,\r\n          Utilidad: row.utilidad,\r\n          'Margen (%)': row.margen\r\n        }));\r\n  \r\n        // Agregar fila de totales\r\n        data.push({\r\n          Producto: 'Total',\r\n          'Cantidad Vendida': totals.value.cantidad_vendida,\r\n          Ventas: totals.value.ventas,\r\n          Costos: totals.value.costos,\r\n          Producción: totals.value.produccion,\r\n          Utilidad: totals.value.utilidad,\r\n          'Margen (%)': totals.value.margen\r\n        });\r\n  \r\n        const ws = XLSX.utils.json_to_sheet(data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Utilidad por Producto');\r\n        XLSX.writeFile(wb, `Utilidad_por_Producto_${year.value}_${month.value}${day.value ? `_Dia${day.value}` : ''}.xlsx`);\r\n      };\r\n  \r\n      const downloadChart = async (chartId) => {\r\n        const canvas = document.getElementById(chartId);\r\n        const link = document.createElement('a');\r\n        link.href = await html2canvas(canvas).then(canvas => canvas.toDataURL('image/png'));\r\n        link.download = `${chartId}_${year.value}_${month.value}${day.value ? `_Dia${day.value}` : ''}.png`;\r\n        link.click();\r\n      };\r\n  \r\n      onMounted(() => {\r\n        if (store.state.auth.token) {\r\n          fetchAvailableYears();\r\n        } else {\r\n          router.push('/login');\r\n        }\r\n      });\r\n  \r\n      return {\r\n        year,\r\n        years,\r\n        month,\r\n        months,\r\n        day,\r\n        days,\r\n        selectedProduct,\r\n        products,\r\n        productProfitData,\r\n        noData,\r\n        totals,\r\n        fetchData,\r\n        onMonthChange,\r\n        formatCurrency,\r\n        barChartData,\r\n        barChartOptions,\r\n        utilityChartData,\r\n        utilityChartOptions,\r\n        salesVsCostsChartData,\r\n        salesVsCostsChartOptions,\r\n        exportToExcel,\r\n        downloadChart\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .product-profit {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .filters {\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    gap: 15px;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .actions {\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .actions button {\r\n    padding: 8px 16px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .actions button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  label {\r\n    margin-right: 10px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  select {\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    border: 1px solid #ddd;\r\n  }\r\n  \r\n  .table-container {\r\n    max-width: 100%;\r\n    overflow-x: auto;\r\n    margin-top: 40px;\r\n  }\r\n  \r\n  .profit-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .profit-table th,\r\n  .profit-table td {\r\n    border: 1px solid #ddd;\r\n    padding: 4px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .profit-table th {\r\n    background-color: #f2f2f2;\r\n    font-size: 11px;\r\n  }\r\n  \r\n  .profit-table td {\r\n    max-width: 150px;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  .total-row {\r\n    font-weight: bold;\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  .no-data-message {\r\n    text-align: center;\r\n    color: #888;\r\n    margin: 20px 0;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .charts-container {\r\n    margin-bottom: 40px;\r\n  }\r\n  \r\n  .chart-wrapper {\r\n    margin-bottom: 40px;\r\n    height: 400px;\r\n  }\r\n  \r\n  .chart-wrapper h2 {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  </style>","import { render } from \"./ProductProfit.vue?vue&type=template&id=004684ee&scoped=true\"\nimport script from \"./ProductProfit.vue?vue&type=script&lang=js\"\nexport * from \"./ProductProfit.vue?vue&type=script&lang=js\"\n\nimport \"./ProductProfit.vue?vue&type=style&index=0&id=004684ee&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-004684ee\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createTextVNode","_toDisplayString","$setup","months","month","name","year","day","_hoisted_2","_createCommentVNode","_hoisted_3","_cache","$event","onChange","args","fetchData","_Fragment","_renderList","years","y","value","_hoisted_4","onMonthChange","m","num","_hoisted_5","_ctx","dayscfafterdays","d","_hoisted_6","selectedProduct","products","product","descripcion","_hoisted_7","_hoisted_8","onClick","exportToExcel","downloadChart","noData","_hoisted_9","_hoisted_10","_hoisted_11","_createVNode","_component_Bar","id","data","barChartData","options","barChartOptions","_hoisted_12","utilityChartData","utilityChartOptions","_hoisted_13","salesVsCostsChartData","salesVsCostsChartOptions","_hoisted_14","_hoisted_15","productProfitData","row","cantidad_vendida","toFixed","formatCurrency","ventas","costos","produccion","utilidad","margen","_hoisted_16","totals","ChartJS","register","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","ChartDataLabels","components","Bar","setup","store","useStore","router","useRouter","ref","currentDate","Date","currentMonth","getMonth","currentYear","getFullYear","days","computed","daysInMonth","getDate","Array","from","length","_","i","reduce","acc","fetchAvailableYears","async","response","axios","get","includes","fetchProducts","error","console","status","push","params","map","desc","product_desc","log","Intl","NumberFormat","style","currency","minimumFractionDigits","format","labels","datasets","label","backgroundColor","borderColor","borderWidth","responsive","maintainAspectRatio","scales","beginAtZero","title","display","text","x","plugins","legend","tooltip","callbacks","context","dataset","parsed","datalabels","anchor","align","color","font","size","weight","formatter","stacked","Producto","Ventas","Costos","Producción","Utilidad","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","canvas","document","getElementById","chartId","link","createElement","href","html2canvas","then","toDataURL","download","click","onMounted","state","auth","token","__exports__","render"],"sourceRoot":""}