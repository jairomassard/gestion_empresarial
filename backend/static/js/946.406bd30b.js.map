{"version":3,"file":"js/946.406bd30b.js","mappings":"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","sources":["webpack://frontend/./src/views/DailyProfit.vue","webpack://frontend/./src/views/DailyProfit.vue?a47f"],"sourcesContent":["<template>\r\n    <div class=\"daily-profit\">\r\n      <h1>Utilidad Diaria por PDV - {{ months[month - 1].name }} {{ year }}</h1>\r\n      <div class=\"filters\">\r\n        <label>Año:</label>\r\n        <select v-model=\"year\" @change=\"fetchData\">\r\n          <option v-for=\"y in years\" :key=\"y\" :value=\"y\">{{ y }}</option>\r\n        </select>\r\n        <label>Mes:</label>\r\n        <select v-model=\"month\" @change=\"updateDaysAndFetch\">\r\n          <option v-for=\"m in months\" :key=\"m.num\" :value=\"m.num\">{{ m.name }}</option>\r\n        </select>\r\n        <label>Estatus PDV:</label>\r\n        <select v-model=\"status\" @change=\"fetchData\">\r\n          <option value=\"Todos\">Todos</option>\r\n          <option value=\"Activo\">Activo</option>\r\n          <option value=\"Inactivo\">Inactivo</option>\r\n        </select>\r\n        <label>PDV:</label>\r\n        <select v-model=\"selectedPDV\" @change=\"fetchData\">\r\n          <option value=\"Todos\">Todos</option>\r\n          <option v-for=\"pdv in pdvs\" :key=\"pdv\" :value=\"pdv\">{{ pdv }}</option>\r\n        </select>\r\n        <label>Día:</label>\r\n        <select v-model=\"selectedDay\" @change=\"fetchData\">\r\n          <option value=\"Todos\">Todos</option>\r\n          <option v-for=\"day in daysInMonth\" :key=\"day\" :value=\"day\">{{ day }}</option>\r\n        </select>\r\n      </div>\r\n  \r\n      <!-- Mensaje si no hay datos -->\r\n      <div v-if=\"noData\" class=\"no-data-message\">\r\n        No hay datos disponibles para el mes, año y filtros seleccionados.\r\n      </div>\r\n  \r\n      <!-- Gráficos -->\r\n      <div v-if=\"!noData\" class=\"charts-container\">\r\n        <!-- Gráfico de Barras: Utilidad Total por PDV -->\r\n        <div class=\"chart-wrapper\">\r\n          <h2>Utilidad Total por PDV</h2>\r\n          <Bar :data=\"barChartData\" :options=\"barChartOptions\" />\r\n        </div>\r\n  \r\n        <!-- Gráfico de Líneas: Tendencia de Utilidad Diaria -->\r\n        <div class=\"chart-wrapper\">\r\n          <h2>Tendencia de Utilidad Diaria</h2>\r\n          <div class=\"pdv-selector\">\r\n            <label>Seleccionar PDV:</label>\r\n            <select v-model=\"selectedPdv\">\r\n              <option value=\"total\">Total (Todos los PDVs)</option>\r\n              <option v-for=\"pdv in filteredPdvs\" :key=\"pdv\" :value=\"pdv\">{{ pdv }}</option>\r\n            </select>\r\n          </div>\r\n          <Line :data=\"lineChartData\" :options=\"lineChartOptions\" />\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Tabla -->\r\n      <div v-if=\"!noData\" class=\"table-container\">\r\n        <table class=\"profit-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Fecha</th>\r\n              <th v-for=\"pdv in filteredPdvs\" :key=\"pdv\">{{ pdv }}</th>\r\n              <th>Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"row in filteredDailyProfitData\" :key=\"row.date\">\r\n              <td>{{ row.date }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv\">\r\n                {{ row[pdv] ? formatCurrency(row[pdv].utilidad) : '-' }}\r\n              </td>\r\n              <td>{{ formatCurrency(row.total.utilidad) }}</td>\r\n            </tr>\r\n            <tr class=\"total-row\" v-if=\"filteredDailyProfitData.length > 0\">\r\n              <td>{{ filteredTotals.date }}</td>\r\n              <td v-for=\"pdv in filteredPdvs\" :key=\"pdv\">\r\n                {{ filteredTotals[pdv] ? formatCurrency(filteredTotals[pdv].utilidad) : '-' }}\r\n              </td>\r\n              <td>{{ formatCurrency(filteredTotals.total.utilidad) }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted, computed, watch } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  import { useRouter } from 'vue-router';\r\n  import axios from '@/api/axios';\r\n  import { Bar, Line } from 'vue-chartjs';\r\n  import {\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    LineElement,\r\n    PointElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    TimeScale\r\n  } from 'chart.js';\r\n  import ChartDataLabels from 'chartjs-plugin-datalabels';\r\n  import 'chartjs-adapter-date-fns';\r\n  \r\n  // Registrar los componentes de Chart.js\r\n  ChartJS.register(\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    LineElement,\r\n    PointElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    TimeScale,\r\n    ChartDataLabels\r\n  );\r\n  \r\n  export default {\r\n    name: 'DailyProfit',\r\n    components: {\r\n      Bar,\r\n      Line\r\n    },\r\n    setup() {\r\n      const store = useStore();\r\n      const router = useRouter();\r\n  \r\n      // Datos reactivos\r\n      const year = ref(null);\r\n      const years = ref([]);\r\n      const currentDate = new Date();\r\n      const currentMonth = currentDate.getMonth() + 1;\r\n      const currentYear = currentDate.getFullYear();\r\n      const month = ref(currentMonth);\r\n      const months = ref([\r\n        { num: 1, name: 'Enero' }, { num: 2, name: 'Febrero' }, { num: 3, name: 'Marzo' },\r\n        { num: 4, name: 'Abril' }, { num: 5, name: 'Mayo' }, { num: 6, name: 'Junio' },\r\n        { num: 7, name: 'Julio' }, { num: 8, name: 'Agosto' }, { num: 9, name: 'Septiembre' },\r\n        { num: 10, name: 'Octubre' }, { num: 11, name: 'Noviembre' }, { num: 12, name: 'Diciembre' }\r\n      ]);\r\n      const status = ref('Activo');\r\n      const selectedPDV = ref('Todos');\r\n      const selectedDay = ref('Todos');\r\n      const daysInMonth = ref([]);\r\n      const dailyProfitData = ref([]);\r\n      const filteredDailyProfitData = ref([]);\r\n      const pdvs = ref([]);\r\n      const filteredPdvs = ref([]);\r\n      const totals = ref({});\r\n      const filteredTotals = ref({});\r\n      const selectedPdv = ref('total');\r\n  \r\n      // Computed para determinar si no hay datos\r\n      const noData = computed(() => {\r\n        const result = filteredDailyProfitData.value.length === 0 ||\r\n                      filteredDailyProfitData.value.every(row => !row.total || row.total.utilidad === 0);\r\n        console.log('noData:', result, 'filteredDailyProfitData:', filteredDailyProfitData.value);\r\n        return result;\r\n      });\r\n  \r\n      // Generar lista de días del mes\r\n      const updateDaysInMonth = () => {\r\n        if (!year.value || !month.value) return;\r\n        const daysInMonthMap = {1: 31, 2: 28, 3: 31, 4: 30, 5: 31, 6: 30, 7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31};\r\n        if (month.value === 2 && year.value % 4 === 0 && (year.value % 100 !== 0 || year.value % 400 === 0)) {\r\n          daysInMonthMap[2] = 29;\r\n        }\r\n        const numDays = daysInMonthMap[month.value] || 30;\r\n        daysInMonth.value = Array.from({ length: numDays }, (_, i) => i + 1);\r\n        selectedDay.value = 'Todos';\r\n      };\r\n  \r\n      // Obtener los años disponibles\r\n      const fetchAvailableYears = async () => {\r\n        try {\r\n          const response = await axios.get('/available-years');\r\n          years.value = response.data.years || [];\r\n          if (years.value.length > 0) {\r\n            year.value = years.value.includes(currentYear) ? currentYear : years.value[0];\r\n            updateDaysInMonth();\r\n            fetchData();\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching available years:', error);\r\n          years.value = Array.from({ length: 5 }, (_, i) => currentYear + i - 2);\r\n          year.value = currentYear;\r\n          updateDaysInMonth();\r\n          fetchData();\r\n        }\r\n      };\r\n  \r\n      // Obtener datos de utilidad diaria\r\n      const fetchData = async () => {\r\n        if (!year.value) return;\r\n        try {\r\n          const params = { year: year.value, month: month.value, status: status.value };\r\n          if (selectedPDV.value !== 'Todos') params.pdv = selectedPDV.value;\r\n          if (selectedDay.value !== 'Todos') params.day = selectedDay.value;\r\n  \r\n          const response = await axios.get('/dashboard/daily-profit', { params });\r\n          dailyProfitData.value = response.data.data || [];\r\n          pdvs.value = response.data.pdvs || [];\r\n          totals.value = response.data.totals || {};\r\n          updateFilteredData();\r\n          console.log('Datos recibidos:', { dailyProfitData: dailyProfitData.value, pdvs: pdvs.value, totals: totals.value });\r\n        } catch (error) {\r\n          console.error('Error fetching daily profit data:', error);\r\n          dailyProfitData.value = [];\r\n          pdvs.value = [];\r\n          totals.value = {};\r\n          filteredDailyProfitData.value = [];\r\n          filteredPdvs.value = [];\r\n          filteredTotals.value = {};\r\n          if (error.response && error.response.status === 401) {\r\n            router.push('/login');\r\n          }\r\n        }\r\n      };\r\n  \r\n      // Actualizar datos filtrados\r\n      const updateFilteredData = () => {\r\n        // Filtrar PDVs con datos\r\n        const pdvsWithData = new Set();\r\n        dailyProfitData.value.forEach(row => {\r\n          Object.keys(row).forEach(key => {\r\n            if (key !== 'date' && key !== 'total' && pdvs.value.includes(key)) {\r\n              pdvsWithData.add(key);\r\n            }\r\n          });\r\n        });\r\n  \r\n        if (selectedPDV.value === 'Todos') {\r\n          filteredPdvs.value = pdvs.value.filter(pdv => pdvsWithData.has(pdv));\r\n        } else {\r\n          filteredPdvs.value = pdvs.value.filter(pdv => pdv === selectedPDV.value && pdvsWithData.has(pdv));\r\n        }\r\n  \r\n        if (selectedDay.value === 'Todos') {\r\n          filteredDailyProfitData.value = dailyProfitData.value;\r\n        } else {\r\n          const dayStr = selectedDay.value.toString().padStart(2, '0');\r\n          const monthStr = month.value.toString().padStart(2, '0');\r\n          const datePattern = `${dayStr}/${monthStr}/${year.value}`;\r\n          filteredDailyProfitData.value = dailyProfitData.value.filter(row => {\r\n            const dateStr = row.date.includes(', ') ? row.date.split(', ')[1] : row.date;\r\n            return dateStr.includes(datePattern);\r\n          });\r\n        }\r\n  \r\n        filteredTotals.value = { date: 'TOTALES' };\r\n        filteredPdvs.value.forEach(pdv => {\r\n          filteredTotals.value[pdv] = {\r\n            ventas: filteredDailyProfitData.value.reduce((sum, row) => sum + (row[pdv]?.ventas || 0), 0),\r\n            costos: filteredDailyProfitData.value.reduce((sum, row) => sum + (row[pdv]?.costos || 0), 0),\r\n            produccion: filteredDailyProfitData.value.reduce((sum, row) => sum + (row[pdv]?.produccion || 0), 0),\r\n            utilidad: filteredDailyProfitData.value.reduce((sum, row) => sum + (row[pdv]?.utilidad || 0), 0)\r\n          };\r\n        });\r\n        filteredTotals.value.total = {\r\n          ventas: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.total?.ventas || 0), 0),\r\n          costos: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.total?.costos || 0), 0),\r\n          produccion: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.total?.produccion || 0), 0),\r\n          utilidad: filteredDailyProfitData.value.reduce((sum, row) => sum + (row.total?.utilidad || 0), 0)\r\n        };\r\n      };\r\n  \r\n      // Formatear moneda\r\n      const formatCurrency = (value) => {\r\n        return new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(value);\r\n      };\r\n  \r\n      // Datos para el gráfico de barras\r\n      const barChartData = computed(() => {\r\n        const data = {\r\n          labels: filteredPdvs.value,\r\n          datasets: [\r\n            {\r\n              label: 'Utilidad Total (COP)',\r\n              data: filteredPdvs.value.map(pdv => filteredTotals.value[pdv]?.utilidad || 0),\r\n              backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n              borderColor: 'rgba(75, 192, 192, 1)',\r\n              borderWidth: 1\r\n            }\r\n          ]\r\n        };\r\n        console.log('barChartData:', data);\r\n        return data;\r\n      });\r\n  \r\n      const barChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            title: {\r\n              display: true,\r\n              text: 'Utilidad (COP)'\r\n            },\r\n            ticks: {\r\n              callback: function(value) {\r\n                return new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(value);\r\n              }\r\n            }\r\n          },\r\n          x: {\r\n            title: {\r\n              display: true,\r\n              text: 'Punto de Venta'\r\n            }\r\n          }\r\n        },\r\n        plugins: {\r\n          legend: { display: true },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                let label = context.dataset.label || '';\r\n                if (label) label += ': ';\r\n                label += new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(context.parsed.y);\r\n                return label;\r\n              }\r\n            }\r\n          },\r\n          datalabels: {\r\n            display: true,\r\n            anchor: 'center',\r\n            align: 'center',\r\n            color: '#fff',\r\n            font: { size: 11, weight: 'bold' },\r\n            formatter: function(value) {\r\n              return new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(value);\r\n            }\r\n          }\r\n        }\r\n      };\r\n  \r\n      // Datos para el gráfico de líneas\r\n      const lineChartData = computed(() => {\r\n        const labels = filteredDailyProfitData.value.map(row => {\r\n          const dateStr = row.date.includes(', ') ? row.date.split(', ')[1] : row.date;\r\n          const [day, month, year] = dateStr.split('/');\r\n          return `${year}-${month}-${day}`;\r\n        });\r\n  \r\n        let data;\r\n        if (selectedPdv.value === 'total') {\r\n          data = filteredDailyProfitData.value.map(row => row.total.utilidad);\r\n        } else {\r\n          data = filteredDailyProfitData.value.map(row => (row[selectedPdv.value]?.utilidad || 0));\r\n        }\r\n  \r\n        const chartData = {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: selectedPdv.value === 'total' ? 'Utilidad Total (COP)' : `Utilidad de ${selectedPdv.value} (COP)`,\r\n              data: data,\r\n              fill: false,\r\n              borderColor: 'rgba(255, 99, 132, 1)',\r\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n              tension: 0.1\r\n            }\r\n          ]\r\n        };\r\n        console.log('lineChartData:', chartData);\r\n        return chartData;\r\n      });\r\n  \r\n      const lineChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          x: {\r\n            type: 'time',\r\n            time: {\r\n              unit: 'day',\r\n              tooltipFormat: 'dd/MM/yyyy',\r\n              displayFormats: { day: 'dd/MM/yyyy' }\r\n            },\r\n            title: { display: true, text: 'Fecha' }\r\n          },\r\n          y: {\r\n            beginAtZero: true,\r\n            title: { display: true, text: 'Utilidad (COP)' },\r\n            ticks: {\r\n              callback: function(value) {\r\n                return new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(value);\r\n              }\r\n            }\r\n          }\r\n        },\r\n        plugins: {\r\n          legend: { display: true },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                let label = context.dataset.label || '';\r\n                if (label) label += ': ';\r\n                label += new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }).format(context.parsed.y);\r\n                return label;\r\n              }\r\n            }\r\n          },\r\n          datalabels: { display: false }\r\n        }\r\n      };\r\n  \r\n      // Cargar años al montar el componente\r\n      onMounted(() => {\r\n        if (store.state.auth.token) {\r\n          fetchAvailableYears();\r\n        } else {\r\n          router.push('/login');\r\n        }\r\n      });\r\n  \r\n      // Actualizar gráficos al cambiar PDV\r\n      watch(selectedPdv, () => {\r\n        console.log('PDV seleccionado cambiado a:', selectedPdv.value);\r\n      });\r\n  \r\n      return {\r\n        year,\r\n        years,\r\n        month,\r\n        months,\r\n        status,\r\n        selectedPDV,\r\n        selectedDay,\r\n        daysInMonth,\r\n        dailyProfitData,\r\n        filteredDailyProfitData,\r\n        pdvs,\r\n        filteredPdvs,\r\n        totals,\r\n        filteredTotals,\r\n        noData,\r\n        selectedPdv,\r\n        barChartData,\r\n        barChartOptions,\r\n        lineChartData,\r\n        lineChartOptions,\r\n        fetchData,\r\n        updateDaysAndFetch,\r\n        formatCurrency\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .daily-profit {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .filters {\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    gap: 15px;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .actions {\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .actions button {\r\n    padding: 8px 16px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .actions button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  label {\r\n    margin-right: 10px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  select {\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    border: 1px solid #ddd;\r\n  }\r\n  \r\n  .table-container {\r\n    max-width: 100%;\r\n    overflow-x: auto;\r\n    margin-top: 40px;\r\n  }\r\n  \r\n  .profit-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .profit-table th,\r\n  .profit-table td {\r\n    border: 1px solid #ddd;\r\n    padding: 4px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .profit-table th {\r\n    background-color: #f2f2f2;\r\n    font-size: 11px;\r\n  }\r\n  \r\n  .profit-table td {\r\n    max-width: 120px;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  .profit-table td:first-child {\r\n    font-size: 10px;\r\n  }\r\n  \r\n  .total-row {\r\n    font-weight: bold;\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  .no-data-message {\r\n    text-align: center;\r\n    color: #888;\r\n    margin: 20px 0;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .charts-container {\r\n    margin-bottom: 40px;\r\n  }\r\n  \r\n  .chart-wrapper {\r\n    margin-bottom: 60px;\r\n    height: 400px;\r\n  }\r\n  \r\n  .chart-wrapper h2 {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .pdv-selector {\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n  }\r\n  </style>","import { render } from \"./DailyProfit.vue?vue&type=template&id=7ceb0824&scoped=true\"\nimport script from \"./DailyProfit.vue?vue&type=script&lang=js\"\nexport * from \"./DailyProfit.vue?vue&type=script&lang=js\"\n\nimport \"./DailyProfit.vue?vue&type=style&index=0&id=7ceb0824&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7ceb0824\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$setup","months","month","name","year","_hoisted_2","_cache","$event","onChange","args","fetchData","_Fragment","_renderList","years","y","value","_hoisted_3","updateDaysAndFetch","m","num","_hoisted_4","status","selectedPDV","pdvs","pdv","_hoisted_5","selectedDay","daysInMonth","day","_hoisted_6","noData","_hoisted_7","_createCommentVNode","_hoisted_8","_hoisted_9","_createVNode","_component_Bar","data","barChartData","options","barChartOptions","_hoisted_10","_hoisted_11","selectedPdv","filteredPdvs","_hoisted_12","_component_Line","lineChartData","lineChartOptions","_hoisted_13","_hoisted_14","filteredDailyProfitData","row","date","formatCurrency","utilidad","total","length","_hoisted_15","filteredTotals","ChartJS","register","Title","Tooltip","Legend","BarElement","LineElement","PointElement","CategoryScale","LinearScale","TimeScale","ChartDataLabels","components","Bar","Line","setup","store","useStore","router","useRouter","ref","currentDate","Date","currentMonth","getMonth","currentYear","getFullYear","dailyProfitData","totals","computed","result","every","console","log","updateDaysInMonth","daysInMonthMap","numDays","Array","from","_","i","fetchAvailableYears","async","response","axios","get","includes","error","params","updateFilteredData","push","pdvsWithData","Set","forEach","Object","keys","add","filter","has","dayStr","toString","padStart","monthStr","datePattern","dateStr","split","ventas","reduce","sum","costos","produccion","Intl","NumberFormat","style","currency","minimumFractionDigits","format","labels","datasets","label","map","backgroundColor","borderColor","borderWidth","responsive","maintainAspectRatio","scales","beginAtZero","title","display","text","ticks","callback","x","plugins","legend","tooltip","callbacks","context","dataset","parsed","datalabels","anchor","align","color","font","size","weight","formatter","chartData","fill","tension","type","time","unit","tooltipFormat","displayFormats","onMounted","state","auth","token","watch","__exports__","render"],"sourceRoot":""}