{"version":3,"file":"js/544.1c1e4cd8.js","mappings":"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","sources":["webpack://frontend/./node_modules/core-js/modules/es.iterator.flat-map.js","webpack://frontend/./src/views/ConsultaInventario.vue","webpack://frontend/./src/views/ConsultaInventario.vue?7dda","webpack://frontend/./node_modules/core-js/internals/get-iterator-flattenable.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar getIteratorFlattenable = require('../internals/get-iterator-flattenable');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar iteratorClose = require('../internals/iterator-close');\nvar IS_PURE = require('../internals/is-pure');\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var mapper = this.mapper;\n  var result, inner;\n\n  while (true) {\n    if (inner = this.inner) try {\n      result = anObject(call(inner.next, inner.iterator));\n      if (!result.done) return result.value;\n      this.inner = null;\n    } catch (error) { iteratorClose(iterator, 'throw', error); }\n\n    result = anObject(call(this.next, iterator));\n\n    if (this.done = !!result.done) return;\n\n    try {\n      this.inner = getIteratorFlattenable(mapper(result.value, this.counter++), false);\n    } catch (error) { iteratorClose(iterator, 'throw', error); }\n  }\n});\n\n// `Iterator.prototype.flatMap` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.flatmap\n$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE }, {\n  flatMap: function flatMap(mapper) {\n    anObject(this);\n    aCallable(mapper);\n    return new IteratorProxy(getIteratorDirect(this), {\n      mapper: mapper,\n      inner: null\n    });\n  }\n});\n","<template>\r\n  <div class=\"consulta-inventario\">\r\n    <h1>Consulta de Inventario</h1>\r\n\r\n    <section class=\"form-section\">\r\n      <div class=\"form-actions\" style=\"justify-content: flex-end\">\r\n        <button @click=\"limpiarPagina\" class=\"btn btn-warning\">Limpiar Página</button>\r\n      </div>\r\n\r\n      <!-- Filtros de búsqueda -->\r\n      <div class=\"form-group\">\r\n        <label for=\"nombreFiltro\">Buscar por nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"nombreFiltro\"\r\n          v-model=\"nombreDigitado\"\r\n          placeholder=\"Ingrese nombre del producto\"\r\n          @input=\"sincronizarPorNombre\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"codigoFiltro\">Buscar por código:</label>\r\n        <input\r\n          v-model=\"codigoDigitado\"\r\n          id=\"codigoFiltro\"\r\n          placeholder=\"Ingrese código de producto\"\r\n          @input=\"sincronizarCodigoConSelector\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"productoSelector\">Seleccione un producto:</label>\r\n        <select v-model=\"filtroProducto\" id=\"productoSelector\" @change=\"sincronizarSelectorConCodigo\">\r\n          <option value=\"\">Todos</option>\r\n          <option v-for=\"producto in productosDisponibles\" :key=\"producto.codigo\" :value=\"producto.codigo\">\r\n            {{ producto.codigo }} - {{ producto.nombre }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"filtroEstado\">Filtrar por Estado:</label>\r\n        <select v-model=\"filtroEstado\" id=\"filtroEstado\" @change=\"consultar\">\r\n          <option value=\"\">Todos</option>\r\n          <option value=\"verde\">Verde (OK)</option>\r\n          <option value=\"amarillo\">Amarillo (Advertencia)</option>\r\n          <option value=\"rojo\">Rojo (Crítico)</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-actions\">\r\n        <button @click=\"consultar\" class=\"btn\">Consultar Inventario</button>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Filtros adicionales para consulta general -->\r\n    <section v-if=\"mostrarInventario && filtroProducto === '' && codigoDigitado === '' && nombreDigitado === ''\" class=\"form-section\">\r\n      <div class=\"form-group\">\r\n        <label for=\"filtroBodega\">Filtrar por bodega:</label>\r\n        <select v-model=\"filtroBodega\" id=\"filtroBodega\" @change=\"filtrarPorBodega\">\r\n          <option value=\"\">Todas</option>\r\n          <option v-for=\"bodega in bodegas\" :key=\"bodega\" :value=\"bodega\">{{ bodega }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"umbralAlerta\">Umbral de Alerta (%):</label>\r\n        <input v-model.number=\"umbralAlerta\" id=\"umbralAlerta\" type=\"number\" min=\"0\" max=\"100\" step=\"0.01\" />\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Resumen de Costos -->\r\n    <section v-if=\"mostrarInventario && filtroProducto === '' && codigoDigitado === '' && nombreDigitado === ''\" class=\"form-section\">\r\n      <h2>Resumen de Costos por Almacén</h2>\r\n      <div class=\"table-container\">\r\n        <table class=\"resumen-costos\">\r\n          <thead>\r\n            <tr>\r\n              <th>Almacén</th>\r\n              <th>Costo Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(costo, bodega) in resumenCostos\" :key=\"bodega\">\r\n              <td>{{ bodega }}</td>\r\n              <td>${{ formatCosto(costo) }}</td>\r\n            </tr>\r\n            <tr class=\"total-row\">\r\n              <td><strong>TOTAL</strong></td>\r\n              <td><strong>${{ formatCosto(Object.values(resumenCostos).reduce((sum, costo) => sum + costo, 0)) }}</strong></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Tabla de Inventario -->\r\n    <section v-if=\"mostrarInventario\">\r\n      <h2>Inventario de Productos</h2>\r\n      <div class=\"form-actions\">\r\n        <button v-if=\"productosFiltrados.length\" @click=\"exportarAExcel\" class=\"btn\">\r\n          Exportar a Excel <font-awesome-icon icon=\"file-excel\" class=\"excel-icon\" />\r\n        </button>\r\n      </div>\r\n      <div class=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Código</th>\r\n              <th>Nombre</th>\r\n              <th>Stock Mínimo</th>\r\n              <th>Total</th>\r\n              <th>Estado</th>\r\n              <template v-for=\"bodega in bodegasMostradas\" :key=\"bodega\">\r\n                <th>{{ bodega }}</th>\r\n                <th>Costo Total {{ bodega }}</th>\r\n              </template>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"producto in productosFiltrados\" :key=\"producto.codigo\">\r\n              <td>{{ producto.codigo }}</td>\r\n              <td>{{ producto.nombre }}</td>\r\n              <td>{{ producto.stock_minimo !== null ? producto.stock_minimo : '-' }}</td>\r\n              <td>{{ formatCantidad(producto.cantidad_total || 0) }}</td>\r\n              <td>\r\n                <span v-if=\"producto.stock_minimo !== null && producto.stock_minimo !== undefined\">\r\n                  <span v-if=\"Number(producto.cantidad_total) > Number(producto.stock_minimo) * (1 + Number(umbralAlerta) / 100)\" class=\"estado verde\">✔</span>\r\n                  <span v-else-if=\"Number(producto.cantidad_total) > Number(producto.stock_minimo)\" class=\"estado amarillo\">⚠</span>\r\n                  <span v-else class=\"estado rojo\">✖</span>\r\n                </span>\r\n                <span v-else>-</span>\r\n              </td>\r\n              <template v-for=\"bodega in bodegasMostradas\" :key=\"bodega\">\r\n                <td>{{ formatCantidad(producto.cantidades_por_bodega[bodega] || 0) }}</td>\r\n                <td>${{ formatCosto(producto.costos_por_bodega[bodega] || 0) }}</td>\r\n              </template>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div v-if=\"filtroProducto === '' && codigoDigitado === '' && nombreDigitado === ''\" class=\"paginacion\">\r\n        <button :disabled=\"paginaActual === 1\" @click=\"cambiarPagina(paginaActual - 1)\" class=\"btn\">Anterior</button>\r\n        <span>Página {{ paginaActual }}</span>\r\n        <button :disabled=\"productosFiltrados.length < limite\" @click=\"cambiarPagina(paginaActual + 1)\" class=\"btn\">Siguiente</button>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/api/axios';\r\nimport * as XLSX from \"xlsx\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\n\r\nexport default {\r\n  name: \"ConsultaInventario\",\r\n  components: { FontAwesomeIcon },\r\n  data() {\r\n    return {\r\n      filtroProducto: \"\",\r\n      codigoDigitado: \"\",\r\n      nombreDigitado: \"\",\r\n      productosDisponibles: [],\r\n      productos: [],\r\n      productosFiltrados: [],\r\n      bodegas: [],\r\n      bodegasMostradas: [],\r\n      filtroBodega: \"\",\r\n      filtroEstado: \"\",\r\n      mostrarInventario: false,\r\n      paginaActual: 1,\r\n      limite: 20,\r\n      todosLosProductos: [],\r\n      umbralAlerta: 10,\r\n    };\r\n  },\r\n  computed: {\r\n    resumenCostos() {\r\n      const resumen = {};\r\n      this.bodegas.forEach((bodega) => {\r\n        resumen[bodega] = this.todosLosProductos.reduce((total, producto) => {\r\n          return total + (producto.costos_por_bodega[bodega] || 0);\r\n        }, 0);\r\n      });\r\n      return resumen;\r\n    },\r\n  },\r\n  methods: {\r\n    limpiarPagina() {\r\n      this.codigoDigitado = \"\";\r\n      this.nombreDigitado = \"\";\r\n      this.filtroProducto = \"\";\r\n      this.filtroBodega = \"\";\r\n      this.filtroEstado = \"\";\r\n      this.productos = [];\r\n      this.productosFiltrados = [];\r\n      this.bodegas = [];\r\n      this.bodegasMostradas = [];\r\n      this.mostrarInventario = false;\r\n      this.paginaActual = 1;\r\n      this.todosLosProductos = [];\r\n      this.umbralAlerta = 10;\r\n    },\r\n    async consultar() {\r\n      if (this.filtroProducto || this.codigoDigitado || this.nombreDigitado) {\r\n        await this.consultarProductoEspecifico();\r\n        if (this.filtroEstado) {\r\n          this.filtrarPorEstado();\r\n        }\r\n      } else {\r\n        await this.consultarTodosLosProductos();\r\n        if (this.filtroEstado) {\r\n          this.filtrarPorEstado();\r\n        }\r\n      }\r\n    },\r\n    async consultarProductoEspecifico() {\r\n      try {\r\n        const codigo = this.filtroProducto || this.codigoDigitado;\r\n        let url = \"\";\r\n        if (codigo) {\r\n          url = `/api/inventario-con-costos/${codigo}`;\r\n        } else if (this.nombreDigitado) {\r\n          url = `/api/inventario-con-costos?nombre=${encodeURIComponent(this.nombreDigitado)}&limit=999999`;\r\n        } else {\r\n          alert('Por favor, ingrese un código o nombre de producto.');\r\n          this.mostrarInventario = false;\r\n          this.productos = [];\r\n          this.bodegas = [];\r\n          this.productosFiltrados = [];\r\n          return;\r\n        }\r\n\r\n        const response = await apiClient.get(url);\r\n        const data = response.data;\r\n\r\n        if (data.message) {\r\n          alert(data.message);\r\n          this.mostrarInventario = false;\r\n          this.productos = [];\r\n          this.bodegas = [];\r\n          this.productosFiltrados = [];\r\n          return;\r\n        }\r\n\r\n        const bodegasResponse = await apiClient.get(\"/inventory/bodegas\");\r\n        const todasLasBodegas = bodegasResponse.data.map((b) => b.nombre);\r\n\r\n        this.bodegas = todasLasBodegas;\r\n        this.bodegasMostradas = todasLasBodegas;\r\n\r\n        if (data.producto) {\r\n          const inventario = data.inventario || [];\r\n          this.productos = [\r\n            {\r\n              codigo: data.producto.codigo,\r\n              nombre: data.producto.nombre,\r\n              cantidad_total: inventario.reduce((total, item) => {\r\n                const cantidad = Number(item.cantidad) || 0;\r\n                return total + cantidad;\r\n              }, 0),\r\n              stock_minimo: data.producto.stock_minimo !== null ? Number(data.producto.stock_minimo) : null,\r\n              cantidades_por_bodega: todasLasBodegas.reduce((acc, bodega) => {\r\n                const item = inventario.find((i) => i.bodega === bodega);\r\n                acc[bodega] = item ? Number(item.cantidad) || 0 : 0;\r\n                return acc;\r\n              }, {}),\r\n              costos_por_bodega: todasLasBodegas.reduce((acc, bodega) => {\r\n                const item = inventario.find((i) => i.bodega === bodega);\r\n                acc[bodega] = item ? Number(item.costo_total) || 0 : 0;\r\n                return acc;\r\n              }, {})\r\n            }\r\n          ];\r\n        } else if (data.productos) {\r\n          this.productos = data.productos\r\n            .sort((a, b) => a.codigo.localeCompare(b.codigo))\r\n            .map((producto) => ({\r\n              codigo: producto.codigo,\r\n              nombre: producto.nombre,\r\n              cantidad_total: Number(producto.cantidad_total) || 0,\r\n              stock_minimo: producto.stock_minimo !== null ? Number(producto.stock_minimo) : null,\r\n              cantidades_por_bodega: Object.keys(producto.cantidades_por_bodega).reduce((acc, bodega) => {\r\n                acc[bodega] = Number(producto.cantidades_por_bodega[bodega]) || 0;\r\n                return acc;\r\n              }, {}),\r\n              costos_por_bodega: Object.keys(producto.costos_por_bodega).reduce((acc, bodega) => {\r\n                acc[bodega] = Number(producto.costos_por_bodega[bodega]) || 0;\r\n                return acc;\r\n              }, {})\r\n            }));\r\n        } else {\r\n          alert('No se encontraron datos para el producto especificado.');\r\n          this.productos = [];\r\n          this.productosFiltrados = [];\r\n          this.mostrarInventario = false;\r\n          return;\r\n        }\r\n\r\n        this.productosFiltrados = [...this.productos];\r\n        this.mostrarInventario = true;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || error.response?.data?.message || error.message;\r\n        alert(`Error al consultar el inventario: ${errorMsg}`);\r\n        this.mostrarInventario = false;\r\n        this.productos = [];\r\n        this.productosFiltrados = [];\r\n      }\r\n    },\r\n    async consultarTodosLosProductos() {\r\n      try {\r\n        const fullResponse = await apiClient.get(\"/api/inventario-con-costos?limit=999999\");\r\n        const { productos, bodegas } = fullResponse.data;\r\n\r\n        if (!productos || productos.length === 0) {\r\n          alert(\"No se encontró información en el inventario.\");\r\n          this.mostrarInventario = false;\r\n          this.bodegas = [];\r\n          this.productos = [];\r\n          this.productosFiltrados = [];\r\n          this.todosLosProductos = [];\r\n          return;\r\n        }\r\n\r\n        this.bodegas = bodegas || [];\r\n        this.bodegasMostradas = [...this.bodegas];\r\n\r\n        this.todosLosProductos = productos\r\n          .sort((a, b) => a.codigo.localeCompare(b.codigo))\r\n          .map((producto) => ({\r\n            codigo: producto.codigo,\r\n            nombre: producto.nombre,\r\n            cantidad_total: Number(producto.cantidad_total) || 0,\r\n            stock_minimo: producto.stock_minimo !== null ? Number(producto.stock_minimo) : null,\r\n            cantidades_por_bodega: Object.keys(producto.cantidades_por_bodega).reduce((acc, bodega) => {\r\n              acc[bodega] = Number(producto.cantidades_por_bodega[bodega]) || 0;\r\n              return acc;\r\n            }, {}),\r\n            costos_por_bodega: Object.keys(producto.costos_por_bodega).reduce((acc, bodega) => {\r\n              acc[bodega] = Number(producto.costos_por_bodega[bodega]) || 0;\r\n              return acc;\r\n            }, {})\r\n          }));\r\n\r\n        const offset = (this.paginaActual - 1) * this.limite;\r\n        this.productos = this.todosLosProductos.slice(offset, offset + this.limite);\r\n        this.productosFiltrados = [...this.productos];\r\n        this.mostrarInventario = true;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || error.response?.data?.message || error.message;\r\n        alert(`Error al consultar el inventario general: ${errorMsg}`);\r\n      }\r\n    },\r\n    filtrarPorBodega() {\r\n      if (this.filtroBodega) {\r\n        this.bodegasMostradas = [this.filtroBodega];\r\n        this.productosFiltrados = this.todosLosProductos\r\n          .filter((producto) => (producto.cantidades_por_bodega[this.filtroBodega] || 0) > 0)\r\n          .slice((this.paginaActual - 1) * this.limite, this.paginaActual * this.limite);\r\n      } else {\r\n        this.bodegasMostradas = [...this.bodegas];\r\n        this.productosFiltrados = this.todosLosProductos.slice(\r\n          (this.paginaActual - 1) * this.limite,\r\n          this.paginaActual * this.limite\r\n        );\r\n      }\r\n    },\r\n    filtrarPorEstado() {\r\n      if (!this.filtroEstado) {\r\n        if (this.filtroProducto || this.codigoDigitado || this.nombreDigitado) {\r\n          return;\r\n        }\r\n        this.productosFiltrados = this.todosLosProductos.slice(\r\n          (this.paginaActual - 1) * this.limite,\r\n          this.paginaActual * this.limite\r\n        );\r\n      } else {\r\n        const source = (this.filtroProducto || this.codigoDigitado || this.nombreDigitado)\r\n          ? this.productos\r\n          : this.todosLosProductos;\r\n        this.productosFiltrados = source.filter((producto) => {\r\n          if (producto.stock_minimo === null || producto.stock_minimo === undefined) {\r\n            return false;\r\n          }\r\n          const umbral = Math.ceil(Number(producto.stock_minimo) * (Number(this.umbralAlerta) / 100));\r\n          const diff = Number(producto.cantidad_total) - Number(producto.stock_minimo);\r\n          if (this.filtroEstado === \"verde\") return diff > umbral;\r\n          if (this.filtroEstado === \"amarillo\") return diff <= umbral && diff > 0;\r\n          if (this.filtroEstado === \"rojo\") return diff <= 0;\r\n          return false;\r\n        });\r\n        if (!(this.filtroProducto || this.codigoDigitado || this.nombreDigitado)) {\r\n          this.productosFiltrados = this.productosFiltrados.slice(\r\n            (this.paginaActual - 1) * this.limite,\r\n            this.paginaActual * this.limite\r\n          );\r\n        }\r\n      }\r\n    },\r\n    async cargarProductosDisponibles() {\r\n      try {\r\n        const response = await apiClient.get(\"/api/productos/completos\");\r\n        this.productosDisponibles = response.data.sort((a, b) => a.codigo.localeCompare(b.codigo));\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || error.response?.data?.message || error.message;\r\n        alert(`Error al cargar productos disponibles: ${errorMsg}`);\r\n      }\r\n    },\r\n    cambiarPagina(nuevaPagina) {\r\n      this.paginaActual = nuevaPagina;\r\n      const offset = (this.paginaActual - 1) * this.limite;\r\n      this.productos = this.todosLosProductos.slice(offset, offset + this.limite);\r\n      this.productosFiltrados = [...this.productos];\r\n    },\r\n    sincronizarPorNombre() {\r\n      if (!this.nombreDigitado) {\r\n        this.filtroProducto = \"\";\r\n        this.codigoDigitado = \"\";\r\n        return;\r\n      }\r\n      const productoEncontrado = this.productosDisponibles.find((p) =>\r\n        p.nombre.toLowerCase().includes(this.nombreDigitado.toLowerCase())\r\n      );\r\n      if (productoEncontrado) {\r\n        this.filtroProducto = productoEncontrado.codigo;\r\n        this.codigoDigitado = productoEncontrado.codigo;\r\n      }\r\n    },\r\n    sincronizarCodigoConSelector() {\r\n      if (!this.codigoDigitado) {\r\n        this.filtroProducto = \"\";\r\n        this.nombreDigitado = \"\";\r\n        return;\r\n      }\r\n      const productoEncontrado = this.productosDisponibles.find((p) =>\r\n        p.codigo.toLowerCase() === this.codigoDigitado.toLowerCase()\r\n      );\r\n      if (productoEncontrado) {\r\n        this.filtroProducto = productoEncontrado.codigo;\r\n        this.nombreDigitado = productoEncontrado.nombre;\r\n      }\r\n    },\r\n    sincronizarSelectorConCodigo() {\r\n      if (!this.filtroProducto) {\r\n        this.codigoDigitado = \"\";\r\n        this.nombreDigitado = \"\";\r\n        return;\r\n      }\r\n      const productoSeleccionado = this.productosDisponibles.find((p) => p.codigo === this.filtroProducto);\r\n      if (productoSeleccionado) {\r\n        this.codigoDigitado = productoSeleccionado.codigo;\r\n        this.nombreDigitado = productoSeleccionado.nombre;\r\n      }\r\n    },\r\n    formatCosto(costo) {\r\n      return Number(costo).toLocaleString(\"es-CO\", { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n    },\r\n    formatCantidad(cantidad) {\r\n      return Number(cantidad).toLocaleString(\"es-CO\", { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n    },\r\n    exportarAExcel() {\r\n      const dataToExport = this.filtroProducto || this.codigoDigitado || this.nombreDigitado\r\n        ? this.productosFiltrados\r\n        : this.todosLosProductos;\r\n\r\n      let worksheetData = [];\r\n\r\n      if (!this.filtroProducto && !this.codigoDigitado && !this.nombreDigitado) {\r\n        worksheetData = [\r\n          [\"Resumen de Costos por Almacén\"],\r\n          [\"Almacén\", \"Costo Total\"],\r\n          ...Object.entries(this.resumenCostos).map(([bodega, costo]) => [\r\n            bodega,\r\n            Number(costo).toFixed(2)\r\n          ]),\r\n          [\"TOTAL\", Number(Object.values(this.resumenCostos).reduce((sum, costo) => sum + costo, 0)).toFixed(2)],\r\n          [\"\"]\r\n        ];\r\n      }\r\n\r\n      const getEstado = (producto) => {\r\n        if (producto.stock_minimo === null || producto.stock_minimo === undefined) {\r\n          return \"-\";\r\n        }\r\n        const cantidadTotal = Number(producto.cantidad_total);\r\n        const stockMinimo = Number(producto.stock_minimo);\r\n        const umbral = Math.ceil(stockMinimo * (Number(this.umbralAlerta) / 100));\r\n        if (cantidadTotal > stockMinimo + umbral) {\r\n          return \"✔\";\r\n        } else if (cantidadTotal > stockMinimo) {\r\n          return \"⚠\";\r\n        } else {\r\n          return \"✖\";\r\n        }\r\n      };\r\n\r\n      worksheetData.push(\r\n        [\"Inventario de Productos\"],\r\n        [\"Código\", \"Nombre\", \"Stock Mínimo\", \"Total\", \"Estado\", ...this.bodegas.flatMap((bodega) => [bodega, `Costo Total ${bodega}`])],\r\n        ...dataToExport.map((producto) => [\r\n          producto.codigo,\r\n          producto.nombre,\r\n          producto.stock_minimo !== null ? producto.stock_minimo : \"-\",\r\n          Number(producto.cantidad_total).toFixed(2),\r\n          getEstado(producto),\r\n          ...this.bodegas.flatMap((bodega) => [\r\n            Number(producto.cantidades_por_bodega[bodega] || 0).toFixed(2),\r\n            Number(producto.costos_por_bodega[bodega] || 0).toFixed(2)\r\n          ])\r\n        ])\r\n      );\r\n\r\n      const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"Inventario\");\r\n      XLSX.writeFile(workbook, `inventario_${new Date().toISOString().slice(0, 10)}.xlsx`);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.cargarProductosDisponibles();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.consulta-inventario {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh1 {\r\n  font-size: 2rem;\r\n  color: #2c3e50;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.5rem;\r\n  color: #34495e;\r\n  margin-bottom: 15px;\r\n}\r\n\r\nbutton,\r\n.btn {\r\n  padding: 8px 16px;\r\n  background-color: #42b983;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\nbutton:hover,\r\n.btn:hover {\r\n  background-color: #2c3e50;\r\n}\r\n\r\nbutton:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-warning {\r\n  background-color: #ffc107;\r\n  color: #333;\r\n}\r\n\r\n.btn-warning:hover {\r\n  background-color: #e0a800;\r\n}\r\n\r\n.form-section {\r\n  background: #ffffff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n  color: #555;\r\n}\r\n\r\n.form-group input,\r\n.form-group select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.table-container {\r\n  max-width: 100%;\r\n  overflow-x: auto;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n}\r\n\r\nth,\r\ntd {\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n  font-weight: bold;\r\n  color: #34495e;\r\n}\r\n\r\ntbody tr:nth-child(odd) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\ntbody tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.resumen-costos {\r\n  width: 50%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.resumen-costos th,\r\n.resumen-costos td {\r\n  padding: 12px;\r\n  text-align: center;\r\n}\r\n\r\n.total-row {\r\n  font-weight: bold;\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.estado.verde {\r\n  color: green;\r\n  font-size: 18px;\r\n}\r\n\r\n.estado.amarillo {\r\n  color: #ffc107;\r\n  font-size: 18px;\r\n}\r\n\r\n.estado.rojo {\r\n  color: red;\r\n  font-size: 18px;\r\n}\r\n\r\n.excel-icon {\r\n  margin-left: 5px;\r\n}\r\n\r\n.paginacion {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 10px;\r\n}\r\n\r\n.paginacion button {\r\n  padding: 8px 16px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .form-group input,\r\n  .form-group select {\r\n    font-size: 16px;\r\n  }\r\n\r\n  table {\r\n    display: block;\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  .resumen-costos {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n\r\n","import { render } from \"./ConsultaInventario.vue?vue&type=template&id=53bde8ea&scoped=true\"\nimport script from \"./ConsultaInventario.vue?vue&type=script&lang=js\"\nexport * from \"./ConsultaInventario.vue?vue&type=script&lang=js\"\n\nimport \"./ConsultaInventario.vue?vue&type=style&index=0&id=53bde8ea&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-53bde8ea\"]])\n\nexport default __exports__","'use strict';\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (obj, stringHandling) {\n  if (!stringHandling || typeof obj !== 'string') anObject(obj);\n  var method = getIteratorMethod(obj);\n  return getIteratorDirect(anObject(method !== undefined ? call(method, obj) : obj));\n};\n"],"names":["$","call","aCallable","anObject","getIteratorDirect","getIteratorFlattenable","createIteratorProxy","iteratorClose","IS_PURE","IteratorProxy","result","inner","iterator","this","mapper","next","done","value","error","counter","target","proto","real","forced","flatMap","class","style","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","limpiarPagina","_hoisted_4","for","type","id","$event","$data","nombreDigitado","placeholder","onInput","sincronizarPorNombre","_hoisted_5","codigoDigitado","sincronizarCodigoConSelector","_hoisted_6","filtroProducto","onChange","sincronizarSelectorConCodigo","_Fragment","_renderList","productosDisponibles","producto","codigo","_toDisplayString","nombre","_hoisted_7","_hoisted_8","filtroEstado","consultar","_hoisted_9","mostrarInventario","_hoisted_10","_hoisted_11","filtroBodega","filtrarPorBodega","bodegas","bodega","_hoisted_12","_hoisted_13","umbralAlerta","min","max","step","number","_createCommentVNode","_hoisted_14","_hoisted_15","_hoisted_16","resumenCostos","costo","formatCosto","_hoisted_17","Object","values","reduce","sum","_hoisted_18","_hoisted_19","productosFiltrados","length","exportarAExcel","_createTextVNode","_createVNode","_component_font_awesome_icon","icon","_hoisted_20","bodegasMostradas","stock_minimo","formatCantidad","cantidad_total","undefined","_hoisted_21","Number","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","cantidades_por_bodega","costos_por_bodega","_hoisted_26","disabled","paginaActual","cambiarPagina","_hoisted_27","limite","_hoisted_28","name","components","FontAwesomeIcon","data","productos","todosLosProductos","computed","resumen","forEach","total","methods","consultarProductoEspecifico","filtrarPorEstado","consultarTodosLosProductos","url","alert","encodeURIComponent","response","apiClient","get","message","bodegasResponse","todasLasBodegas","map","b","inventario","item","cantidad","acc","find","i","costo_total","sort","a","localeCompare","keys","errorMsg","fullResponse","offset","slice","filter","source","umbral","Math","ceil","diff","cargarProductosDisponibles","nuevaPagina","productoEncontrado","p","toLowerCase","includes","productoSeleccionado","toLocaleString","minimumFractionDigits","maximumFractionDigits","dataToExport","worksheetData","entries","toFixed","getEstado","cantidadTotal","stockMinimo","push","worksheet","XLSX","aoa_to_sheet","workbook","book_new","book_append_sheet","Date","toISOString","mounted","__exports__","render","getIteratorMethod","module","exports","obj","stringHandling","method"],"sourceRoot":""}