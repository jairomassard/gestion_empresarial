{"version":3,"file":"js/897.5464e1f1.js","mappings":"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","sources":["webpack://frontend/./src/views/ProduccionAdmin.vue","webpack://frontend/./src/views/ProduccionAdmin.vue?88b4"],"sourcesContent":["<template>\r\n  <div class=\"produccion-admin\">\r\n    <h1>Módulo de Producción</h1>\r\n\r\n    <div class=\"actions\" style=\"justify-content: flex-end\">\r\n      <button @click=\"limpiarPagina\" class=\"btn btn-warning\">Limpiar Página</button>\r\n    </div>\r\n\r\n    <!-- Crear nueva orden de producción -->\r\n    <section>\r\n      <h2>Crear Orden de Producción</h2>\r\n      <form @submit.prevent=\"revisarOrden\">\r\n        <!-- Campo de búsqueda por nombre -->\r\n        <label for=\"nombreProducto\">Buscar por nombre:</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"nombreProducto\"\r\n          v-model=\"nombreProductoCompuesto\"\r\n          placeholder=\"Ingrese nombre del producto\"\r\n          class=\"form-control\"\r\n          @input=\"sincronizarPorNombre\"\r\n        />\r\n\r\n        <!-- Campo de búsqueda por código -->\r\n        <label for=\"codigoProducto\">Código del Producto:</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"codigoProducto\" \r\n          v-model=\"codigoProductoCompuesto\" \r\n          placeholder=\"Ingrese el código del producto compuesto\"\r\n          @input=\"sincronizarCodigoConSelector\"\r\n        />\r\n\r\n        <!-- Selector de productos -->\r\n        <label for=\"producto\">Producto Compuesto:</label>\r\n        <select v-model=\"nuevaOrden.producto_compuesto_id\" @change=\"sincronizarSelectorConCodigo\" required>\r\n          <option value=\"\" disabled>Seleccione un producto</option>\r\n          <option v-for=\"producto in productosCompuestos\" :key=\"producto.id\" :value=\"producto.id\">\r\n            {{ producto.codigo }} - {{ producto.nombre }}\r\n          </option>\r\n        </select>\r\n\r\n        <br>\r\n        <label for=\"cantidad\">Cantidad de Paquetes a Producir:</label>\r\n        <input type=\"number\" v-model=\"nuevaOrden.cantidad_paquetes\" required min=\"1\" />\r\n\r\n        <!-- Selector de bodega de producción -->\r\n        <label for=\"bodegaProduccion\">Bodega de Producción:</label>\r\n        <select v-model=\"nuevaOrden.bodega_produccion\" required>\r\n          <option value=\"\" disabled>Seleccione una bodega</option>\r\n          <option v-for=\"bodega in bodegas\" :key=\"bodega.id\" :value=\"bodega.id\">\r\n            {{ bodega.nombre }}\r\n          </option>\r\n        </select>\r\n\r\n        <br>\r\n        <button type=\"submit\">Revisar</button>\r\n      </form>\r\n    </section>\r\n\r\n    <!-- Tabla de revisión -->\r\n    <section v-if=\"tablaRevisarVisible\">\r\n      <h3>Revisión de Componentes</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Componentes</th>\r\n            <th>Cant. x Paquete</th>\r\n            <th>Cant. a Producir</th>\r\n            <th>Cant. Total Req.</th>\r\n            <th>Peso Unitario</th>\r\n            <th>Peso Total</th>\r\n            <th>Costo Unitario</th>\r\n            <th>Costo Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"componente in componentes\" :key=\"componente.id\">\r\n            <td>{{ componente.nombre }}</td>\r\n            <td>{{ componente.cantidad_requerida }}</td>\r\n            <td>{{ nuevaOrden.cantidad_paquetes }}</td>\r\n            <td>{{ componente.cantidad_total.toFixed(2) }}</td>\r\n            <td>{{ componente.peso_unitario }}</td>\r\n            <td>{{ componente.peso_total.toFixed(2) }}</td>\r\n            <td>${{ componente.costo_unitario.toFixed(2) }}</td>\r\n            <td>${{ componente.costo_total.toFixed(2) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <button @click=\"crearOrden\">Crear Orden</button>\r\n    </section>\r\n\r\n    <!-- Consultar órdenes de producción -->\r\n    <section>\r\n      <h2>Órdenes de Producción</h2>\r\n\r\n      <!-- Filtros -->\r\n      <div>\r\n        <label for=\"numero-orden\">Número de Orden:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"numero-orden\"\r\n          v-model=\"filtroNumeroOrden\"\r\n          placeholder=\"Ingrese el número de orden\"\r\n        />\r\n\r\n        <label for=\"estado\">Estado:</label>\r\n        <select v-model=\"filtroEstado\" id=\"estado\">\r\n          <option value=\"\">Todos</option>\r\n          <option value=\"Pendiente\">Pendiente</option>\r\n          <option value=\"Lista para Producción\">Lista para Producción</option>\r\n          <option value=\"En Producción\">En Producción</option>\r\n          <option value=\"En Producción-Parcial\">En Producción-Parcial</option>\r\n          <option value=\"Finalizada\">Finalizada</option>\r\n        </select>\r\n        <br>\r\n        <button @click=\"consultarOrdenes\">Consultar</button>\r\n      </div>\r\n\r\n      <!-- Tabla de órdenes de producción -->\r\n      <table v-if=\"ordenes.length > 0\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Número de Orden</th>\r\n            <th>Producto</th>\r\n            <th>Cantidad a Producir</th>\r\n            <th>Estado</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"orden in ordenes\" :key=\"orden.id\">\r\n            <td>{{ orden.id }}</td>\r\n            <td>{{ orden.numero_orden }}</td>\r\n            <td>{{ orden.producto_compuesto_nombre }}</td>\r\n            <td>{{ orden.cantidad_paquetes }}</td>\r\n            <td>{{ orden.estado }}</td>\r\n            <td>\r\n              <button v-if=\"orden.estado === 'Pendiente'\" @click=\"actualizarEstado(orden.id, 'Lista para Producción')\">\r\n                Marcar Lista para Producción\r\n              </button>\r\n              <button v-if=\"orden.estado === 'Lista para Producción'\" @click=\"actualizarEstado(orden.id, 'En Producción')\">\r\n                Iniciar Producción\r\n              </button>\r\n              <button v-if=\"orden.estado === 'En Producción' || orden.estado === 'En Producción-Parcial'\" @click=\"registrarProduccion(orden.id)\">\r\n                Registrar Producción\r\n              </button>\r\n              <button v-if=\"orden.estado === 'Pendiente' || orden.estado === 'Lista para Producción'\"\r\n                      @click=\"eliminarOrden(orden.id)\" class=\"btn btn-danger\">\r\n                Eliminar Orden\r\n              </button>\r\n              <button @click=\"cargarDetalleOrden(orden.id)\">Detalle</button>\r\n              <button @click=\"descargarPdf(orden.id)\">Imprimir <i class=\"fas fa-file-pdf pdf-icon\"></i></button>\r\n              <button @click=\"descargarPdfOperador(orden.id)\">Imprimir Sin costos <i class=\"fas fa-file-pdf pdf-icon\"></i></button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <p v-if=\"ordenes.length === 0\">No se encontraron órdenes de producción.</p>\r\n    </section>\r\n\r\n    <section v-if=\"tablaDetalleVisible\" class=\"detalle-orden\">\r\n      <h2>Detalle de la Orden</h2>\r\n      <div class=\"acciones-orden\">\r\n        <!-- Botones condicionales -->\r\n        <button v-if=\"detalleOrden?.estado === 'Pendiente'\" @click=\"actualizarEstado(detalleOrden.id, 'Lista para Producción')\">\r\n          Marcar Lista para Producción\r\n        </button>\r\n        <button v-if=\"detalleOrden?.estado === 'Lista para Producción'\" @click=\"actualizarEstado(detalleOrden.id, 'En Producción')\">\r\n          Iniciar Producción\r\n        </button>\r\n        <button v-if=\"detalleOrden?.estado === 'En Producción' || detalleOrden?.estado === 'En Producción-Parcial'\" @click=\"registrarProduccion(detalleOrden.id)\">\r\n          Registrar Producción\r\n        </button>\r\n        <button v-if=\"detalleOrden?.estado === 'Pendiente' || detalleOrden?.estado === 'Lista para Producción'\" @click=\"eliminarOrden(detalleOrden.id)\" class=\"btn btn-danger\">\r\n          Eliminar Orden\r\n        </button>\r\n        <button @click=\"descargarPdf(detalleOrden?.id)\">Imprimir <i class=\"fas fa-file-pdf pdf-icon\"></i></button>\r\n        <button @click=\"descargarPdfOperador(detalleOrden?.id)\">Imprimir Sin costos <i class=\"fas fa-file-pdf pdf-icon\"></i></button>\r\n      </div>\r\n\r\n      <!-- Información general -->\r\n    <!-- Información general como card -->\r\n    <div class=\"info-general-card\">\r\n        <h3>Información General</h3>\r\n        <!-- Primera fila: Número de Orden y Producto -->\r\n        <div class=\"info-row1\">\r\n          <div class=\"info-item numero-orden\">\r\n            <span class=\"label\">Número de Orden</span>\r\n            <span class=\"value\">{{ detalleOrden?.numero_orden || 'N/A' }}</span>\r\n          </div>\r\n          <div class=\"info-item producto\">\r\n            <span class=\"label\">Producto</span>\r\n            <span class=\"value\">{{ detalleOrden?.producto_compuesto_nombre || 'N/A' }}</span>\r\n          </div>\r\n        </div>\r\n        <!-- Segunda fila: Cantidad de Paquetes, Bodega de Producción, Estado -->\r\n        <div class=\"info-row2\">\r\n          <div class=\"info-item cantidad-paquetes\">\r\n            <span class=\"label\">Cantidad de Paquetes</span>\r\n            <span class=\"value\">{{ detalleOrden?.cantidad_paquetes || 'N/A' }}</span>\r\n          </div>\r\n          <div class=\"info-item bodega-produccion\">\r\n            <span class=\"label\">Bodega de Producción</span>\r\n            <span class=\"value\">{{ detalleOrden?.bodega_produccion_nombre || 'No especificada' }}</span>\r\n          </div>\r\n          <div class=\"info-item estado\">\r\n            <span class=\"label\">Estado</span>\r\n            <span class=\"value\" :class=\"estadoClass(detalleOrden?.estado)\">{{ detalleOrden?.estado || 'N/A' }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Tabla de costos -->\r\n      <table class=\"tabla-costos\">\r\n        <tbody>\r\n          <tr>\r\n            <td class=\"label\">Costo Unitario</td>\r\n            <td class=\"value\">${{ detalleOrden?.costo_unitario?.toFixed(2) || 'N/A' }}</td>\r\n            <td class=\"label\">Costo Total</td>\r\n            <td class=\"value\">${{ detalleOrden?.costo_total?.toFixed(2) || 'N/A' }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <!-- Tabla de fechas -->\r\n      <table class=\"tabla-fechas\">\r\n        <thead>\r\n          <tr>\r\n            <th colspan=\"4\">-- Fechas de Producción --</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Creación</th>\r\n            <th>Lista para Producción</th>\r\n            <th>Inicia Producción</th>\r\n            <th>Finalización</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{{ formatFecha(detalleOrden?.fecha_creacion) }}</td>\r\n            <td>{{ formatFecha(detalleOrden?.fecha_lista_para_produccion) }}</td>\r\n            <td>{{ formatFecha(detalleOrden?.fecha_inicio) }}</td>\r\n            <td>{{ formatFecha(detalleOrden?.fecha_finalizacion) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <!-- Tabla de responsables -->\r\n      <table class=\"tabla-responsables\">\r\n        <tbody>\r\n          <tr>\r\n            <td class=\"label\">Creado por</td>\r\n            <td class=\"value\">{{ detalleOrden?.creado_por || 'N/A' }}</td>\r\n            <td class=\"label\">Producido por</td>\r\n            <td class=\"value\">{{ detalleOrden?.producido_por || 'N/A' }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <!-- Tabla de componentes -->\r\n      <table class=\"tabla-componentes\">\r\n        <thead>\r\n          <tr>\r\n            <th style=\"width: 60%\">Componente</th>\r\n            <th style=\"width: 10%\">Cant. x Paquete</th>\r\n            <th style=\"width: 10%\">Cant. Total</th>\r\n            <th style=\"width: 10%\">Peso x Paquete</th>\r\n            <th style=\"width: 10%\">Peso Total</th>\r\n            <th style=\"width: 10%\">Costo Unitario</th>\r\n            <th style=\"width: 10%\">Costo Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"componente in componentes\" :key=\"componente.nombre\">\r\n            <td>{{ componente.nombre }}</td>\r\n            <td>{{ componente.cant_x_paquete }}</td>\r\n            <td>{{ componente.cantidad_total.toFixed(2) }}</td>\r\n            <td>{{ componente.peso_x_paquete }}</td>\r\n            <td>{{ componente.peso_total.toFixed(2) }}</td>\r\n            <td>${{ componente.costo_unitario.toFixed(2) }}</td>\r\n            <td>${{ componente.costo_total.toFixed(2) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n\r\n    <!-- Opciones de Producción -->\r\n    <section v-if=\"detalleOrden && (detalleOrden.estado === 'En Producción' || detalleOrden.estado === 'En Producción-Parcial' || detalleOrden.estado === 'Finalizada')\">\r\n      <h3>Opciones de Producción</h3>\r\n      \r\n      <div v-if=\"detalleOrden.estado === 'En Producción' || detalleOrden.estado === 'En Producción-Parcial'\">\r\n        <button @click=\"habilitarEntregaParcial\" :disabled=\"cantidadPendiente === 0\">\r\n          Entrega Parcial\r\n        </button>\r\n        <button @click=\"realizarEntregaTotal\">\r\n          Entrega Total\r\n        </button>\r\n        <button v-if=\"detalleOrden.estado === 'En Producción-Parcial'\" @click=\"habilitarCierreForzado\">\r\n          Cierre Forzado\r\n        </button>\r\n\r\n        <div v-if=\"cierreForzadoHabilitado\">\r\n          <label for=\"comentario-cierre\">Comentario de Cierre Forzado (opcional):</label>\r\n          <textarea id=\"comentario-cierre\" v-model=\"comentarioCierreForzado\" placeholder=\"Motivo del cierre forzado...\"></textarea>\r\n          <button @click=\"confirmarCierreForzado\">Confirmar Cierre</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"entregaParcialHabilitada\">\r\n        <label for=\"cantidad-parcial\">Cantidad Parcial a Entregar:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"cantidad-parcial\"\r\n          v-model=\"cantidadParcial\"\r\n          step=\"0.001\"\r\n          min=\"0.001\"\r\n          :max=\"cantidadPendiente\"\r\n          placeholder=\"Ingrese cantidad (e.g., 1.500)\"\r\n        />\r\n        <label for=\"comentario\">Comentario (opcional):</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"comentario\"\r\n          v-model=\"comentarioParcial\"\r\n          placeholder=\"Añadir un comentario...\"\r\n        />\r\n        <button @click=\"registrarEntregaParcial\">Entregar</button>\r\n      </div>\r\n\r\n      <h3>Historial de Entregas</h3>\r\n      <table v-if=\"historialEntregas.length > 0\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cantidad Entregada</th>\r\n            <th>Fecha y Hora</th>\r\n            <th>Comentario</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"entrega in historialEntregas\" :key=\"entrega.id\">\r\n            <td>{{ Number(entrega.cantidad).toFixed(2) }}</td>\r\n            <td>{{ formatFecha(entrega.fecha_hora) }}</td>\r\n            <td>{{ entrega.comentario || 'N/A' }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <p v-else>No hay entregas registradas para esta orden.</p>\r\n\r\n      <p><strong>Cantidad Pendiente:</strong> {{ Number(cantidadPendiente).toFixed(2) }}</p>\r\n      <div>\r\n        <h3 v-if=\"detalleOrden.estado === 'Finalizada' && detalleOrden.comentario_cierre_forzado\">\r\n          Orden con Cierre Forzado\r\n        </h3>\r\n        <p v-if=\"detalleOrden.estado === 'Finalizada' && detalleOrden.comentario_cierre_forzado\">\r\n          {{ detalleOrden.comentario_cierre_forzado }}\r\n        </p>\r\n        <h3 v-else-if=\"detalleOrden.estado === 'Finalizada'\">\r\n          Orden Finalizada sin novedad\r\n        </h3>\r\n        <h3 v-else>\r\n          Estado Actual: {{ detalleOrden.estado }}\r\n        </h3>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\nimport apiClient from '@/api/axios'; // Corregido: importar apiClient\r\nimport * as XLSX from 'xlsx';\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      productosCompuestos: [],\r\n      bodegas: [],\r\n      nuevaOrden: {\r\n        producto_compuesto_id: null,\r\n        cantidad_paquetes: null,\r\n        bodega_produccion: null,\r\n      },\r\n      codigoProductoCompuesto: \"\",\r\n      nombreProductoCompuesto: \"\",\r\n      filtroEstado: \"\",\r\n      filtroNumeroOrden: \"\",\r\n      ordenes: [],\r\n      tablaRevisarVisible: false,\r\n      componentes: [],\r\n      detalleOrden: {},\r\n      tablaDetalleVisible: false,\r\n      historialEntregas: [],\r\n      cantidadParcial: null, // Cambiado de 0 a null\r\n      comentarioParcial: \"\",\r\n      cantidadPendiente: 0,\r\n      entregasTotales: 0,\r\n      entregaParcialHabilitada: false,\r\n      mostrarDetalle: false,\r\n      cierreForzadoHabilitado: false,\r\n      comentarioCierreForzado: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    formatFecha(fecha) {\r\n      if (!fecha) return \"-\";\r\n      // Ajustar el formato para aceptar \"YYYY-MM-DD hh:mm AM/PM\"\r\n      const fechaObj = new Date(fecha);\r\n      if (isNaN(fechaObj.getTime())) {\r\n        // Si la fecha no es válida, intentar parsear manualmente\r\n        const [datePart, timePart] = fecha.split(' ');\r\n        const [year, month, day] = datePart.split('-').map(Number);\r\n        const [hours, minutes] = timePart.split(':').map(Number);\r\n        const isPM = timePart.includes('PM');\r\n        const adjustedHours = isPM ? (hours % 12) + 12 : hours % 12;\r\n        const parsedDate = new Date(year, month - 1, day, adjustedHours, minutes);\r\n        if (!isNaN(parsedDate.getTime())) {\r\n          return parsedDate.toLocaleString(\"es-CO\", {\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          });\r\n        }\r\n        return \"-\";\r\n      }\r\n      return fechaObj.toLocaleString(\"es-CO\", {\r\n        year: \"numeric\",\r\n        month: \"2-digit\",\r\n        day: \"2-digit\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      });\r\n    },\r\n    limpiarPagina() {\r\n      this.nuevaOrden = {\r\n        producto_compuesto_id: null,\r\n        cantidad_paquetes: null,\r\n        bodega_produccion: null,\r\n      };\r\n      this.codigoProductoCompuesto = \"\";\r\n      this.nombreProductoCompuesto = \"\";\r\n      this.filtroEstado = \"\";\r\n      this.filtroNumeroOrden = \"\";\r\n      this.ordenes = [];\r\n      this.tablaRevisarVisible = false;\r\n      this.componentes = [];\r\n      this.detalleOrden = {};\r\n      this.tablaDetalleVisible = false;\r\n      this.historialEntregas = [];\r\n      this.cantidadParcial = 0;\r\n      this.comentarioParcial = \"\";\r\n      this.cantidadPendiente = 0;\r\n      this.entregasTotales = 0;\r\n      this.entregaParcialHabilitada = false;\r\n      this.mostrarDetalle = false;\r\n      this.cierreForzadoHabilitado = false;\r\n      this.comentarioCierreForzado = \"\";\r\n      this.cargarProductosCompuestos();\r\n      this.cargarBodegas();\r\n    },\r\n    sincronizarPorNombre() {\r\n      const productoEncontrado = this.productosCompuestos.find(p => \r\n        p.nombre.toLowerCase().includes(this.nombreProductoCompuesto.toLowerCase())\r\n      );\r\n      if (productoEncontrado) {\r\n        this.nuevaOrden.producto_compuesto_id = productoEncontrado.id;\r\n        this.codigoProductoCompuesto = productoEncontrado.codigo;\r\n      }\r\n    },\r\n    sincronizarCodigoConSelector() {\r\n      const productoEncontrado = this.productosCompuestos.find(p => p.codigo === this.codigoProductoCompuesto);\r\n      if (productoEncontrado) {\r\n        this.nuevaOrden.producto_compuesto_id = productoEncontrado.id;\r\n        this.nombreProductoCompuesto = productoEncontrado.nombre;\r\n      }\r\n    },\r\n    sincronizarSelectorConCodigo() {\r\n      const productoSeleccionado = this.productosCompuestos.find(p => p.id === this.nuevaOrden.producto_compuesto_id);\r\n      if (productoSeleccionado) {\r\n        this.codigoProductoCompuesto = productoSeleccionado.codigo;\r\n        this.nombreProductoCompuesto = productoSeleccionado.nombre;\r\n      }\r\n    },\r\n    async cargarBodegas() {\r\n      try {\r\n        const response = await apiClient.get(\"/inventory/bodegas\");\r\n        this.bodegas = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error al cargar las bodegas:\", error);\r\n        alert(\"No se pudieron cargar las bodegas.\");\r\n      }\r\n    },\r\n    async cargarProductosCompuestos() {\r\n      try {\r\n        const response = await apiClient.get(\"/inventory/productos-compuestos\");\r\n        this.productosCompuestos = response.data.sort((a, b) => a.codigo.localeCompare(b.codigo));\r\n      } catch (error) {\r\n        console.error(\"Error al cargar productos compuestos:\", error);\r\n        alert(\"No se pudieron cargar los productos compuestos.\");\r\n      }\r\n    },\r\n    async consultarOrdenes() {\r\n      try {\r\n        let params = {};\r\n        if (this.filtroEstado) {\r\n          params.estado = this.filtroEstado;\r\n        }\r\n        if (this.filtroNumeroOrden) {\r\n          params.numero_orden = this.filtroNumeroOrden;\r\n        }\r\n        const response = await apiClient.get(\"/api/ordenes-produccion\", { params });\r\n        this.ordenes = response.data.sort((a, b) => b.id - a.id);\r\n        this.mostrarDetalle = false;\r\n        this.detalleOrden = {};\r\n      } catch (error) {\r\n        console.error(\"Error al consultar órdenes de producción:\", error);\r\n        alert(\"No se pudieron consultar las órdenes de producción.\");\r\n      }\r\n    },\r\n    async revisarOrden() {\r\n      try {\r\n        if (!this.nuevaOrden.producto_compuesto_id || !this.nuevaOrden.cantidad_paquetes) {\r\n          alert(\"Por favor, selecciona un producto y una cantidad válida.\");\r\n          return;\r\n        }\r\n        const response = await apiClient.get(\r\n          `/inventory/productos-compuestos/detalle?id=${this.nuevaOrden.producto_compuesto_id}`\r\n        );\r\n        if (!response.data.materiales || !Array.isArray(response.data.materiales)) {\r\n          throw new Error(\"La respuesta del backend no contiene materiales válidos.\");\r\n        }\r\n        this.componentes = response.data.materiales.map((componente) => {\r\n          const cantidad = Number(componente.cantidad);\r\n          const pesoUnitario = Number(componente.peso_unitario);\r\n          const cantidadPaquetes = Number(this.nuevaOrden.cantidad_paquetes);\r\n          if (isNaN(cantidad) || isNaN(pesoUnitario) || isNaN(cantidadPaquetes)) {\r\n            throw new Error(`Valores no numéricos detectados: cantidad=${componente.cantidad}, peso_unitario=${componente.peso_unitario}`);\r\n          }\r\n          return {\r\n            nombre: componente.producto_base_nombre,\r\n            cantidad_requerida: cantidad,\r\n            cantidad_total: cantidad * cantidadPaquetes,\r\n            peso_unitario: pesoUnitario,\r\n            peso_total: cantidad * cantidadPaquetes * pesoUnitario,\r\n            costo_unitario: componente.costo_unitario || 0,\r\n            costo_total: (componente.costo_unitario || 0) * cantidad * cantidadPaquetes\r\n          };\r\n        });\r\n        this.tablaRevisarVisible = true;\r\n      } catch (error) {\r\n        console.error(\"Error al revisar orden:\", error);\r\n        alert(\"No se pudo revisar la orden: \" + (error.message || \"Error desconocido\"));\r\n        this.tablaRevisarVisible = false;\r\n      }\r\n    },\r\n    async crearOrden() {\r\n      try {\r\n        // Obtener usuarioLogueado desde localStorage\r\n        const usuarioLogueado = localStorage.getItem(\"usuario_id\");\r\n        \r\n        // Validar que usuarioLogueado exista\r\n        if (!usuarioLogueado) {\r\n          console.error(\"No se encontró usuario_id en localStorage\");\r\n          alert(\"Error: No se pudo identificar al usuario autenticado. Por favor, inicia sesión nuevamente.\");\r\n          return;\r\n        }\r\n\r\n        // Preparar datos a enviar\r\n        const datosEnviados = {\r\n          producto_compuesto_id: this.nuevaOrden.producto_compuesto_id,\r\n          cantidad_paquetes: this.nuevaOrden.cantidad_paquetes,\r\n          bodega_produccion: this.nuevaOrden.bodega_produccion,\r\n          creado_por: parseInt(usuarioLogueado) // Convertir a número\r\n        };\r\n        \r\n        console.log('Datos enviados a POST /api/ordenes-produccion:', datosEnviados);\r\n\r\n        // Enviar solicitud\r\n        const response = await apiClient.post(\"/api/ordenes-produccion\", datosEnviados);\r\n        \r\n        alert(response.data.message);\r\n        this.tablaRevisarVisible = false;\r\n        this.consultarOrdenes();\r\n      } catch (error) {\r\n        console.error(\"Error al crear orden de producción:\", error);\r\n        const errorMessage = error.response?.data?.error || \"No se pudo crear la orden de producción\";\r\n        alert(errorMessage);\r\n      }\r\n    },\r\n    async eliminarOrden(ordenId) {\r\n      try {\r\n        const confirmacion = confirm(\"¿Estás seguro de que deseas eliminar esta orden?\");\r\n        if (!confirmacion) {\r\n          return;\r\n        }\r\n        const response = await apiClient.delete(`/api/ordenes-produccion/${ordenId}`);\r\n        alert(response.data.message);\r\n        this.ordenes = this.ordenes.filter(orden => orden.id !== ordenId);\r\n        if (this.detalleOrden.id === ordenId) {\r\n          this.detalleOrden = {};\r\n          this.tablaDetalleVisible = false;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al eliminar la orden:\", error);\r\n        alert(\"No se pudo eliminar la orden.\");\r\n      }\r\n    },\r\n    async cargarDetalleOrden(ordenId) {\r\n      try {\r\n        const detalleResponse = await apiClient.get(`/api/ordenes-produccion/${ordenId}`);\r\n        console.log('Respuesta de GET /api/ordenes-produccion:', detalleResponse.data); // Para depuración\r\n        this.detalleOrden = {\r\n          ...detalleResponse.data,\r\n          bodega_produccion_nombre: detalleResponse.data.bodega_produccion_nombre || \"No especificada\",\r\n          costo_unitario: detalleResponse.data.costo_unitario || 0,\r\n          costo_total: detalleResponse.data.costo_total || 0,\r\n          comentario_cierre_forzado: detalleResponse.data.comentario_cierre_forzado || \"\",\r\n          creado_por: detalleResponse.data.creado_por || \"Desconocido\",\r\n          producido_por: detalleResponse.data.producido_por || \"N/A\"\r\n        };\r\n        const materialesResponse = await apiClient.get(`/inventory/productos-compuestos/detalle?id=${this.detalleOrden.producto_compuesto_id}`);\r\n        this.componentes = materialesResponse.data.materiales.map((componente) => ({\r\n          nombre: componente.producto_base_nombre,\r\n          cant_x_paquete: componente.cantidad,\r\n          peso_x_paquete: componente.peso_unitario,\r\n          cantidad_total: componente.cantidad * this.detalleOrden.cantidad_paquetes,\r\n          peso_total: componente.cantidad * this.detalleOrden.cantidad_paquetes * componente.peso_unitario,\r\n          costo_unitario: componente.costo_unitario || 0,\r\n          costo_total: (componente.costo_unitario || 0) * componente.cantidad * this.detalleOrden.cantidad_paquetes,\r\n        }));\r\n        const historialResponse = await apiClient.get(`/api/ordenes-produccion/${ordenId}/historial-entregas`);\r\n        this.historialEntregas = historialResponse.data.historial || [];\r\n        this.cantidadPendiente = Number(historialResponse.data.cantidad_pendiente) || 0;\r\n        this.tablaDetalleVisible = true;\r\n      } catch (error) {\r\n        console.error(\"Error al cargar detalle de la orden:\", error);\r\n        alert(\"No se pudo cargar el detalle de la orden.\");\r\n        this.tablaDetalleVisible = false;\r\n      }\r\n    },\r\n    async actualizarEstado(ordenId, nuevoEstado) { \r\n      try {\r\n        const usuarioId = localStorage.getItem(\"usuario_id\");\r\n        if (!usuarioId) {\r\n          alert(\"No se pudo obtener el ID del usuario logueado.\");\r\n          return;\r\n        }\r\n        const response = await apiClient.put(`/api/ordenes-produccion/${ordenId}/estado`, {\r\n          nuevo_estado: nuevoEstado,\r\n          usuario_id: usuarioId,\r\n        });\r\n        alert(response.data.message);\r\n        await this.consultarOrdenes();\r\n        if (this.detalleOrden.id === ordenId) {\r\n          await this.cargarDetalleOrden(ordenId);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al actualizar el estado de la orden:\", error);\r\n        alert(\"No se pudo actualizar el estado de la orden.\");\r\n      }\r\n    },\r\n    estadoClass(estado) {\r\n      if (!estado) return '';\r\n      switch (estado) {\r\n        case 'Pendiente':\r\n          return 'estado-pendiente';\r\n        case 'Lista para Producción':\r\n          return 'estado-lista';\r\n        case 'En Producción':\r\n        case 'En Producción-Parcial':\r\n          return 'estado-produccion';\r\n        case 'Finalizada':\r\n          return 'estado-finalizada';\r\n        default:\r\n          return '';\r\n      }\r\n    },\r\n    habilitarEntregaParcial() {\r\n      this.entregaParcialHabilitada = true;\r\n    },\r\n    habilitarCierreForzado() {\r\n      this.cierreForzadoHabilitado = true;\r\n    },\r\n    async registrarEntregaParcial() {\r\n      if (!this.cantidadParcial || this.cantidadParcial <= 0 || this.cantidadParcial > this.cantidadPendiente) {\r\n        alert(\"Por favor, ingrese una cantidad válida menor o igual a la cantidad pendiente.\");\r\n        return;\r\n      }\r\n      try {\r\n        const usuarioId = localStorage.getItem(\"usuario_id\");\r\n        if (!usuarioId) {\r\n          alert(\"No se pudo obtener el ID del usuario logueado.\");\r\n          return;\r\n        }\r\n        const response = await apiClient.post(`/api/ordenes-produccion/${this.detalleOrden.id}/entrega-parcial`, {\r\n          cantidad_entregada: parseFloat(this.cantidadParcial),\r\n          comentario: this.comentarioParcial || \"\",\r\n          usuario_id: usuarioId,\r\n        });\r\n        alert(response.data.message);\r\n        this.cantidadPendiente = response.data.cantidad_pendiente || 0;\r\n        this.entregaParcialHabilitada = false;\r\n        this.cantidadParcial = null;\r\n        this.comentarioParcial = \"\";\r\n        await this.cargarDetalleOrden(this.detalleOrden.id);\r\n        await this.consultarOrdenes();\r\n      } catch (error) {\r\n        console.error(\"Error al registrar entrega parcial:\", error);\r\n        alert(error.response?.data?.error || \"No se pudo registrar la entrega parcial.\");\r\n      }\r\n    },\r\n\r\n    async realizarEntregaTotal() {\r\n      try {\r\n        if (!this.detalleOrden || !this.detalleOrden.id) {\r\n          alert(\"No se puede finalizar la orden porque no se encontró el detalle.\");\r\n          return;\r\n        }\r\n        const confirmacion = confirm(\"¿Estás seguro de registrar la entrega total?\");\r\n        if (!confirmacion) return;\r\n        const usuarioId = localStorage.getItem(\"usuario_id\");\r\n        if (!usuarioId) {\r\n          alert(\"No se pudo obtener el ID del usuario logueado.\");\r\n          return;\r\n        }\r\n        const response = await apiClient.post(`/api/ordenes-produccion/${this.detalleOrden.id}/registrar-entrega-total`, {\r\n          usuario_id: usuarioId,\r\n        });\r\n        alert(response.data.message);\r\n        this.cantidadPendiente = 0;\r\n        await this.cargarHistorialEntregas(this.detalleOrden.id);\r\n        await this.cargarDetalleOrden(this.detalleOrden.id);\r\n        await this.consultarOrdenes();\r\n      } catch (error) {\r\n        console.error(\"Error al registrar entrega total:\", error);\r\n        const errorMessage = error.response?.data?.error || \"Error al registrar la entrega total. Verifica el inventario o contacta al administrador.\";\r\n        alert(errorMessage);\r\n      }\r\n    },\r\n    async cargarHistorialEntregas(ordenId) {\r\n      try {\r\n        const response = await apiClient.get(`/api/ordenes-produccion/${ordenId}/historial-entregas`);\r\n        this.historialEntregas = response.data.historial || [];\r\n      } catch (error) {\r\n        console.error(\"Error al cargar historial de entregas:\", error);\r\n        alert(\"No se pudo cargar el historial de entregas.\");\r\n      }\r\n    },\r\n    async registrarProduccion(ordenId) {\r\n      try {\r\n        if (!this.detalleOrden || this.detalleOrden.id !== ordenId) {\r\n          await this.cargarDetalleOrden(ordenId);\r\n        }\r\n        if (this.detalleOrden.estado === 'En Producción' || this.detalleOrden.estado === 'En Producción-Parcial') {\r\n          this.mostrarDetalle = true;\r\n        } else {\r\n          alert(\"La orden no está en estado válido para registrar producción.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al registrar producción:\", error);\r\n        alert(\"No se pudo mostrar las opciones de producción.\");\r\n      }\r\n    },\r\n    async confirmarCierreForzado() {\r\n      try {\r\n        if (!this.detalleOrden || !this.detalleOrden.id) {\r\n          alert(\"No se puede cerrar la orden porque no se encontró el detalle.\");\r\n          return;\r\n        }\r\n        const confirmacion = confirm(`¿Seguro que deseas cerrar forzadamente la orden ${this.detalleOrden.numero_orden}?`);\r\n        if (!confirmacion) return;\r\n        const response = await apiClient.post(`/api/ordenes-produccion/${this.detalleOrden.id}/cierre-forzado`, {\r\n          comentario: this.comentarioCierreForzado || \"\",\r\n        });\r\n        alert(response.data.message);\r\n        this.cierreForzadoHabilitado = false;\r\n        this.comentarioCierreForzado = \"\";\r\n        await this.cargarHistorialEntregas(this.detalleOrden.id); // Añadido\r\n        await this.cargarDetalleOrden(this.detalleOrden.id);\r\n        await this.consultarOrdenes();\r\n      } catch (error) {\r\n        console.error(\"Error al realizar el Cierre Forzado:\", error);\r\n        alert(error.response?.data?.error || \"No se pudo completar el Cierre Forzado.\");\r\n      }\r\n    },\r\n    async descargarPdf(ordenId) {\r\n      try {\r\n        const response = await apiClient.get(`/api/ordenes-produccion/${ordenId}/pdf`, {\r\n          responseType: \"blob\",\r\n        });\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\"download\", `Orden_${ordenId}.pdf`);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      } catch (error) {\r\n        console.error(\"Error al descargar el PDF:\", error);\r\n        alert(\"No se pudo descargar el PDF de la orden.\");\r\n      }\r\n    },\r\n    async descargarPdfOperador(ordenId) {\r\n      try {\r\n        const response = await apiClient.get(`/api/ordenes-produccion/${ordenId}/pdf-operador`, {\r\n          responseType: \"blob\",\r\n        });\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\"download\", `Orden_${ordenId}_Operador.pdf`);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      } catch (error) {\r\n        console.error(\"Error al descargar el PDF para operador:\", error);\r\n        alert(\"No se pudo descargar el PDF de la orden.\");\r\n      }\r\n    },\r\n    volverAlMenu() {\r\n      const tipoUsuario = localStorage.getItem(\"tipo_usuario\");\r\n      if (tipoUsuario === \"admin\") {\r\n        this.$router.push('/menu');\r\n      } else if (tipoUsuario === \"gerente\") {\r\n        this.$router.push('/menu-gerente');\r\n      } else {\r\n        alert(\"Rol no reconocido. Contacta al administrador.\");\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.cargarProductosCompuestos();\r\n    this.cargarBodegas();\r\n  },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.produccion-admin {\r\n  margin: 20px auto;\r\n  max-width: 1200px;\r\n  font-family: Arial, sans-serif;\r\n  padding: 10px;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nh2, h3 {\r\n  color: #34495e;\r\n  margin-bottom: 15px;\r\n}\r\n\r\nbutton {\r\n  padding: 0.6rem 1.2rem;\r\n  border: none;\r\n  background-color: #42b983;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2c3e50;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\nbutton.btn-warning {\r\n  background-color: #ffc107;\r\n  color: #333;\r\n}\r\n\r\nbutton.btn-warning:hover {\r\n  background-color: #e0a800;\r\n}\r\n\r\nbutton.btn-danger {\r\n  background-color: #dc3545;\r\n}\r\n\r\nbutton.btn-danger:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nform label {\r\n  font-weight: bold;\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: #555;\r\n}\r\n\r\nform input, form select {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n  font-size: 14px;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f8f9fa;\r\n  color: #333;\r\n  font-weight: bold;\r\n}\r\n\r\ntbody tr:nth-child(odd) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\ntbody tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\nsection {\r\n  margin-bottom: 30px;\r\n  padding: 15px;\r\n  border: 1px solid #e9ecef;\r\n  border-radius: 6px;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\np {\r\n  margin: 5px 0;\r\n  color: #555;\r\n  font-size: 14px;\r\n}\r\n\r\n.detalle-orden {\r\n  margin-bottom: 30px;\r\n  padding: 20px;\r\n  border: 1px solid #e9ecef;\r\n  border-radius: 6px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.acciones-orden {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n/* Estilos para info-general-card */\r\n.info-general-card {\r\n  background-color: #ffffff;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  width: 100%; /* Asegura que use todo el ancho disponible */\r\n  max-width: 1100px; /* Limita el ancho máximo */\r\n}\r\n\r\n/* Estilos para filas */\r\n.info-row1 {\r\n  display: grid;\r\n  gap: 15px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.info-row1 {\r\n  display: grid;\r\n  gap: 15px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n/* Primera fila: Número de Orden y Producto */\r\n.info-row1:nth-child(1) {\r\n  grid-template-columns: 1fr 3fr; /* Número de Orden: 1 parte, Producto: 3 partes */\r\n}\r\n\r\n/* Segunda fila: Cantidad de Paquetes, Bodega de Producción, Estado */\r\n.info-row2:nth-child(2) {\r\n  grid-template-columns: 1fr 1fr 1fr; /* Distribución equitativa */\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.info-item.producto .value {\r\n  white-space: normal; /* Permite que el texto del producto se divida en varias líneas */\r\n  overflow: visible; /* Muestra todo el texto */\r\n  text-overflow: initial; /* Elimina puntos suspensivos */\r\n}\r\n\r\n.info-item .label {\r\n  font-weight: bold;\r\n  color: #42b983;\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.info-item .value {\r\n  color: #333;\r\n  font-size: 14px;\r\n  background-color: #f8f9fa;\r\n  padding: 8px;\r\n  border-radius: 4px;\r\n  border: 1px solid #e9ecef;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n/* Estilos para el estado */\r\n.estado-pendiente {\r\n  color: #e67e22;\r\n  font-weight: bold;\r\n}\r\n\r\n.estado-lista {\r\n  color: #3498db;\r\n  font-weight: bold;\r\n}\r\n\r\n.estado-produccion {\r\n  color: #f1c40f;\r\n  font-weight: bold;\r\n}\r\n\r\n.estado-finalizada {\r\n  color: #42b983;\r\n  font-weight: bold;\r\n}\r\n\r\n.tabla-costos {\r\n  width: 100%;\r\n  margin: 15px 0;\r\n  border-collapse: collapse;\r\n  background-color: #f8f9fa;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.tabla-costos td {\r\n  padding: 10px;\r\n  border: 1px solid #e9ecef;\r\n  text-align: center;\r\n}\r\n\r\n.tabla-costos .label {\r\n  background-color: #e9ecef;\r\n  font-weight: bold;\r\n  color: #555;\r\n}\r\n\r\n.tabla-costos .value {\r\n  color: #42b983;\r\n  font-weight: bold;\r\n}\r\n\r\n.tabla-fechas {\r\n  width: 100%;\r\n  margin: 15px 0;\r\n  border-collapse: collapse;\r\n  background-color: #f8f9fa;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.tabla-fechas th, .tabla-fechas td {\r\n  padding: 10px;\r\n  border: 1px solid #e9ecef;\r\n  text-align: center;\r\n  width: 25%;\r\n  height: 40px;\r\n}\r\n\r\n.tabla-fechas th {\r\n  background-color: #e9ecef;\r\n  color: #555;\r\n  font-weight: bold;\r\n}\r\n\r\n.tabla-fechas td {\r\n  color: #333;\r\n  font-size: 12px;\r\n}\r\n\r\n.tabla-responsables {\r\n  width: 100%;\r\n  margin: 15px 0;\r\n  border-collapse: collapse;\r\n  background-color: #f8f9fa;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.tabla-responsables td {\r\n  padding: 10px;\r\n  border: 1px solid #e9ecef;\r\n  text-align: center;\r\n}\r\n\r\n.tabla-responsables .label {\r\n  background-color: #e9ecef;\r\n  font-weight: bold;\r\n  color: #555;\r\n}\r\n\r\n.tabla-responsables .value {\r\n  color: #333;\r\n}\r\n\r\n.tabla-componentes {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n  font-size: 14px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.tabla-componentes th, .tabla-componentes td {\r\n  border: 1px solid #e9ecef;\r\n  padding: 10px;\r\n  text-align: left;\r\n}\r\n\r\n.tabla-componentes th {\r\n  background-color: #f8f9fa;\r\n  color: #333;\r\n  font-weight: bold;\r\n}\r\n\r\n.tabla-componentes tbody tr:nth-child(odd) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.tabla-componentes tbody tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n@media (max-width: 992px) {\r\n  .produccion-admin {\r\n    margin: 10px auto;\r\n    padding: 10px;\r\n  }\r\n\r\n  form input, form select, button {\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n    font-size: 16px;\r\n  }\r\n\r\n  table {\r\n    display: block;\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  th, td {\r\n    font-size: 12px;\r\n    padding: 8px;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 20px;\r\n  }\r\n\r\n  h2, h3 {\r\n    font-size: 18px;\r\n  }\r\n\r\n  .detalle-orden {\r\n    padding: 15px;\r\n  }\r\n\r\n  .info-general-card {\r\n    padding: 15px;\r\n  }\r\n\r\n  .info-row {\r\n    grid-template-columns: 1fr; /* Una columna en pantallas pequeñas */\r\n  }\r\n\r\n  .info-item .label, .info-item .value {\r\n    font-size: 12px;\r\n  }\r\n\r\n  .tabla-costos, .tabla-fechas, .tabla-responsables, .tabla-componentes {\r\n    display: block;\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .tabla-costos td, .tabla-fechas th, .tabla-fechas td, .tabla-responsables td {\r\n    padding: 8px;\r\n  }\r\n\r\n  .tabla-fechas td {\r\n    font-size: 10px;\r\n  }\r\n}\r\n</style>","import { render } from \"./ProduccionAdmin.vue?vue&type=template&id=4c67c99c&scoped=true\"\nimport script from \"./ProduccionAdmin.vue?vue&type=script&lang=js\"\nexport * from \"./ProduccionAdmin.vue?vue&type=script&lang=js\"\n\nimport \"./ProduccionAdmin.vue?vue&type=style&index=0&id=4c67c99c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c67c99c\"]])\n\nexport default __exports__"],"names":["class","style","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$options","limpiarPagina","onSubmit","_withModifiers","revisarOrden","for","type","id","$event","$data","nombreProductoCompuesto","placeholder","onInput","sincronizarPorNombre","codigoProductoCompuesto","sincronizarCodigoConSelector","nuevaOrden","producto_compuesto_id","onChange","sincronizarSelectorConCodigo","required","value","disabled","_Fragment","_renderList","productosCompuestos","producto","codigo","_toDisplayString","nombre","_hoisted_3","cantidad_paquetes","min","bodega_produccion","bodegas","bodega","_hoisted_4","tablaRevisarVisible","_hoisted_5","componentes","componente","cantidad_requerida","cantidad_total","toFixed","peso_unitario","peso_total","costo_unitario","costo_total","crearOrden","_createCommentVNode","filtroNumeroOrden","filtroEstado","_createStaticVNode","consultarOrdenes","ordenes","length","_hoisted_6","orden","numero_orden","producto_compuesto_nombre","estado","actualizarEstado","_hoisted_7","_hoisted_8","registrarProduccion","_hoisted_9","eliminarOrden","_hoisted_10","cargarDetalleOrden","_hoisted_11","descargarPdf","_createTextVNode","_hoisted_12","descargarPdfOperador","_hoisted_13","_hoisted_14","tablaDetalleVisible","_hoisted_15","_hoisted_16","detalleOrden","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","bodega_produccion_nombre","_hoisted_28","_normalizeClass","estadoClass","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","colspan","formatFecha","fecha_creacion","fecha_lista_para_produccion","fecha_inicio","fecha_finalizacion","_hoisted_33","_hoisted_34","creado_por","_hoisted_35","producido_por","_hoisted_36","cant_x_paquete","peso_x_paquete","_hoisted_37","_hoisted_38","habilitarEntregaParcial","cantidadPendiente","_hoisted_39","realizarEntregaTotal","habilitarCierreForzado","cierreForzadoHabilitado","_hoisted_40","comentarioCierreForzado","confirmarCierreForzado","entregaParcialHabilitada","_hoisted_41","cantidadParcial","step","max","_hoisted_42","comentarioParcial","registrarEntregaParcial","historialEntregas","_hoisted_43","entrega","Number","cantidad","fecha_hora","comentario","_hoisted_44","comentario_cierre_forzado","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","data","entregasTotales","mostrarDetalle","methods","fecha","fechaObj","Date","isNaN","getTime","datePart","timePart","split","year","month","day","map","hours","minutes","isPM","includes","adjustedHours","parsedDate","toLocaleString","hour","minute","this","cargarProductosCompuestos","cargarBodegas","productoEncontrado","find","p","toLowerCase","productoSeleccionado","response","apiClient","get","error","console","alert","sort","a","b","localeCompare","params","materiales","Array","isArray","Error","pesoUnitario","cantidadPaquetes","producto_base_nombre","message","usuarioLogueado","localStorage","getItem","datosEnviados","parseInt","log","post","errorMessage","ordenId","confirmacion","confirm","delete","filter","detalleResponse","materialesResponse","historialResponse","historial","cantidad_pendiente","nuevoEstado","usuarioId","put","nuevo_estado","usuario_id","cantidad_entregada","parseFloat","cargarHistorialEntregas","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","volverAlMenu","tipoUsuario","$router","push","mounted","__exports__","render"],"sourceRoot":""}